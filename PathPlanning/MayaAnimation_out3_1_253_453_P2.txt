(* /home/sara/Dropbox/Reaching Study/Gilwoo_Automated_v2/csv_only_manual_inspection/2016_11_24_study_4_Part3_1/2016_11_24_study_4_Part3_1_253_453_clean_phase2.csv*)
inPtsRPi = {
{0.5454000,0.7351000,0.1244000},
{0.5430000,0.7353000,0.1258000},
{0.5402000,0.7355000,0.1273000},
{0.5371000,0.7355000,0.1290000},
{0.5336000,0.7354000,0.1311000},
{0.5297000,0.7353000,0.1337000},
{0.5253000,0.7353000,0.1368000},
{0.5203000,0.7350000,0.1403000},
{0.5148000,0.7346000,0.1441000},
{0.5087000,0.7343000,0.1483000},
{0.5021000,0.7337000,0.1525000},
{0.4949000,0.7329000,0.1570000},
{0.4872000,0.7319000,0.1616000},
{0.4791000,0.7307000,0.1663000},
{0.4705000,0.7294000,0.1710000},
{0.4616000,0.7279000,0.1759000},
{0.4523000,0.7262000,0.1808000},
{0.4427000,0.7246000,0.1857000},
{0.4328000,0.7228000,0.1906000},
{0.4226000,0.7208000,0.1954000},
{0.4120000,0.7187000,0.2000000},
{0.4012000,0.7163000,0.2044000},
{0.3902000,0.7137000,0.2085000},
{0.3790000,0.7108000,0.2123000},
{0.3675000,0.7078000,0.2157000},
{0.3559000,0.7049000,0.2187000},
{0.3440000,0.7018000,0.2214000},
{0.3319000,0.6987000,0.2238000},
{0.3196000,0.6955000,0.2258000},
{0.3071000,0.6924000,0.2276000},
{0.2945000,0.6892000,0.2292000},
{0.2818000,0.6862000,0.2305000},
{0.2691000,0.6833000,0.2315000},
{0.2563000,0.6803000,0.2324000},
{0.2437000,0.6776000,0.2329000},
{0.2312000,0.6748000,0.2333000},
{0.2190000,0.6721000,0.2334000},
{0.2067000,0.6698000,0.2335000},
{0.1948000,0.6674000,0.2333000},
{0.1831000,0.6653000,0.2330000},
{0.1717000,0.6634000,0.2327000},
{0.1606000,0.6616000,0.2323000},
{0.1499000,0.6598000,0.2317000},
{0.1396000,0.6580000,0.2311000},
{0.1298000,0.6562000,0.2303000},
{0.1204000,0.6544000,0.2295000},
{0.1116000,0.6525000,0.2286000},
{0.1030000,0.6508000,0.2276000},
{0.0948200,0.6491000,0.2265000},
{0.0869800,0.6474000,0.2252000},
{0.0794600,0.6458000,0.2238000},
{0.0722400,0.6442000,0.2221000},
{0.0653300,0.6427000,0.2204000},
{0.0587700,0.6413000,0.2185000},
{0.0524400,0.6400000,0.2166000},
{0.0463900,0.6388000,0.2145000},
{0.0406400,0.6377000,0.2123000},
{0.0352000,0.6366000,0.2101000},
{0.0299600,0.6355000,0.2079000},
{0.0250400,0.6345000,0.2056000},
{0.0204400,0.6336000,0.2034000},
{0.0160900,0.6326000,0.2012000},
{0.0120400,0.6319000,0.1991000},
{0.0081800,0.6313000,0.1971000},
{0.0046270,0.6309000,0.1950000}
};
inPtsRTh = {
{0.5461000,0.7872000,0.1036000},
{0.5438000,0.7873000,0.1046000},
{0.5411000,0.7875000,0.1058000},
{0.5379000,0.7875000,0.1074000},
{0.5344000,0.7873000,0.1093000},
{0.5302000,0.7871000,0.1116000},
{0.5256000,0.7869000,0.1143000},
{0.5204000,0.7866000,0.1174000},
{0.5147000,0.7860000,0.1207000},
{0.5085000,0.7854000,0.1244000},
{0.5016000,0.7846000,0.1281000},
{0.4942000,0.7835000,0.1321000},
{0.4864000,0.7824000,0.1362000},
{0.4780000,0.7811000,0.1405000},
{0.4693000,0.7795000,0.1449000},
{0.4604000,0.7772000,0.1488000},
{0.4509000,0.7754000,0.1533000},
{0.4411000,0.7733000,0.1576000},
{0.4310000,0.7712000,0.1619000},
{0.4205000,0.7689000,0.1662000},
{0.4097000,0.7665000,0.1703000},
{0.3986000,0.7638000,0.1743000},
{0.3872000,0.7611000,0.1782000},
{0.3757000,0.7582000,0.1818000},
{0.3638000,0.7552000,0.1852000},
{0.3518000,0.7522000,0.1883000},
{0.3396000,0.7491000,0.1911000},
{0.3274000,0.7462000,0.1935000},
{0.3151000,0.7430000,0.1957000},
{0.3028000,0.7399000,0.1975000},
{0.2905000,0.7369000,0.1991000},
{0.2781000,0.7338000,0.2003000},
{0.2658000,0.7306000,0.2011000},
{0.2536000,0.7278000,0.2020000},
{0.2417000,0.7248000,0.2021000},
{0.2298000,0.7219000,0.2023000},
{0.2181000,0.7191000,0.2022000},
{0.2066000,0.7163000,0.2019000},
{0.1954000,0.7138000,0.2013000},
{0.1845000,0.7112000,0.2005000},
{0.1739000,0.7090000,0.1997000},
{0.1637000,0.7067000,0.1987000},
{0.1538000,0.7046000,0.1978000},
{0.1440000,0.7032000,0.1972000},
{0.1351000,0.7009000,0.1962000},
{0.1264000,0.6988000,0.1953000},
{0.1180000,0.6970000,0.1944000},
{0.1099000,0.6952000,0.1935000},
{0.1022000,0.6936000,0.1925000},
{0.0946900,0.6919000,0.1913000},
{0.0875300,0.6902000,0.1899000},
{0.0806500,0.6887000,0.1883000},
{0.0740600,0.6871000,0.1865000},
{0.0678200,0.6856000,0.1846000},
{0.0618800,0.6842000,0.1826000},
{0.0562300,0.6829000,0.1805000},
{0.0507300,0.6816000,0.1783000},
{0.0455000,0.6804000,0.1761000},
{0.0405000,0.6794000,0.1741000},
{0.0358000,0.6784000,0.1721000},
{0.0313500,0.6775000,0.1701000},
{0.0272000,0.6768000,0.1681000},
{0.0232800,0.6760000,0.1661000},
{0.0196900,0.6754000,0.1640000},
{0.0163400,0.6749000,0.1620000}
};
inPtsRW = {
{0.5969000,0.7799000,0.1597000},
{0.5942000,0.7807000,0.1617000},
{0.5910000,0.7815000,0.1637000},
{0.5876000,0.7821000,0.1657000},
{0.5839000,0.7824000,0.1679000},
{0.5800000,0.7827000,0.1701000},
{0.5757000,0.7827000,0.1726000},
{0.5709000,0.7827000,0.1752000},
{0.5656000,0.7825000,0.1781000},
{0.5599000,0.7820000,0.1811000},
{0.5536000,0.7816000,0.1844000},
{0.5467000,0.7809000,0.1879000},
{0.5393000,0.7800000,0.1915000},
{0.5315000,0.7789000,0.1951000},
{0.5234000,0.7776000,0.1988000},
{0.5148000,0.7760000,0.2024000},
{0.5059000,0.7743000,0.2060000},
{0.4966000,0.7725000,0.2095000},
{0.4870000,0.7704000,0.2129000},
{0.4770000,0.7683000,0.2164000},
{0.4668000,0.7660000,0.2197000},
{0.4561000,0.7634000,0.2228000},
{0.4452000,0.7606000,0.2258000},
{0.4341000,0.7575000,0.2285000},
{0.4228000,0.7542000,0.2310000},
{0.4112000,0.7508000,0.2331000},
{0.3994000,0.7472000,0.2350000},
{0.3874000,0.7436000,0.2368000},
{0.3752000,0.7399000,0.2384000},
{0.3630000,0.7363000,0.2399000},
{0.3506000,0.7326000,0.2412000},
{0.3381000,0.7291000,0.2424000},
{0.3256000,0.7256000,0.2434000},
{0.3131000,0.7221000,0.2442000},
{0.3008000,0.7187000,0.2448000},
{0.2885000,0.7153000,0.2452000},
{0.2764000,0.7120000,0.2455000},
{0.2645000,0.7087000,0.2457000},
{0.2526000,0.7059000,0.2460000},
{0.2413000,0.7027000,0.2458000},
{0.2303000,0.7002000,0.2454000},
{0.2194000,0.6973000,0.2452000},
{0.2092000,0.6949000,0.2447000},
{0.1993000,0.6923000,0.2442000},
{0.1899000,0.6896000,0.2437000},
{0.1808000,0.6872000,0.2431000},
{0.1723000,0.6844000,0.2424000},
{0.1641000,0.6818000,0.2415000},
{0.1562000,0.6794000,0.2405000},
{0.1486000,0.6770000,0.2394000},
{0.1413000,0.6747000,0.2381000},
{0.1343000,0.6727000,0.2367000},
{0.1275000,0.6710000,0.2350000},
{0.1211000,0.6690000,0.2334000},
{0.1149000,0.6677000,0.2318000},
{0.1090000,0.6661000,0.2300000},
{0.1034000,0.6647000,0.2281000},
{0.0979700,0.6633000,0.2261000},
{0.0928100,0.6619000,0.2242000},
{0.0881300,0.6603000,0.2220000},
{0.0836200,0.6590000,0.2200000},
{0.0794000,0.6578000,0.2181000},
{0.0754200,0.6569000,0.2161000},
{0.0717000,0.6562000,0.2142000},
{0.0682500,0.6555000,0.2123000}
};
inPtsRLA = {
{0.6638000,0.8753000,0.1874000},
{0.6610000,0.8766000,0.1890000},
{0.6579000,0.8777000,0.1907000},
{0.6544000,0.8785000,0.1924000},
{0.6505000,0.8792000,0.1943000},
{0.6464000,0.8795000,0.1962000},
{0.6420000,0.8797000,0.1983000},
{0.6371000,0.8798000,0.2005000},
{0.6318000,0.8795000,0.2028000},
{0.6260000,0.8792000,0.2052000},
{0.6198000,0.8787000,0.2078000},
{0.6131000,0.8780000,0.2105000},
{0.6059000,0.8771000,0.2133000},
{0.5983000,0.8761000,0.2161000},
{0.5903000,0.8747000,0.2189000},
{0.5819000,0.8731000,0.2218000},
{0.5731000,0.8713000,0.2247000},
{0.5641000,0.8692000,0.2275000},
{0.5547000,0.8669000,0.2304000},
{0.5450000,0.8644000,0.2333000},
{0.5351000,0.8618000,0.2361000},
{0.5249000,0.8588000,0.2389000},
{0.5144000,0.8557000,0.2417000},
{0.5037000,0.8524000,0.2444000},
{0.4928000,0.8487000,0.2470000},
{0.4818000,0.8448000,0.2496000},
{0.4699000,0.8409000,0.2522000},
{0.4589000,0.8366000,0.2544000},
{0.4475000,0.8320000,0.2566000},
{0.4361000,0.8274000,0.2587000},
{0.4246000,0.8227000,0.2607000},
{0.4132000,0.8181000,0.2627000},
{0.4018000,0.8134000,0.2645000},
{0.3904000,0.8087000,0.2663000},
{0.3793000,0.8040000,0.2679000},
{0.3682000,0.7992000,0.2694000},
{0.3574000,0.7943000,0.2708000},
{0.3467000,0.7896000,0.2720000},
{0.3364000,0.7849000,0.2730000},
{0.3263000,0.7803000,0.2739000},
{0.3165000,0.7758000,0.2747000},
{0.3071000,0.7713000,0.2753000},
{0.2980000,0.7670000,0.2759000},
{0.2893000,0.7626000,0.2764000},
{0.2809000,0.7583000,0.2768000},
{0.2729000,0.7541000,0.2771000},
{0.2653000,0.7500000,0.2772000},
{0.2579000,0.7461000,0.2771000},
{0.2508000,0.7423000,0.2769000},
{0.2440000,0.7386000,0.2766000},
{0.2374000,0.7350000,0.2762000},
{0.2311000,0.7315000,0.2756000},
{0.2250000,0.7283000,0.2747000},
{0.2191000,0.7254000,0.2737000},
{0.2135000,0.7228000,0.2724000},
{0.2081000,0.7203000,0.2711000},
{0.2028000,0.7180000,0.2696000},
{0.1979000,0.7157000,0.2681000},
{0.1931000,0.7133000,0.2666000},
{0.1886000,0.7108000,0.2650000},
{0.1845000,0.7086000,0.2635000},
{0.1806000,0.7066000,0.2618000},
{0.1769000,0.7048000,0.2602000},
{0.1735000,0.7032000,0.2585000},
{0.1703000,0.7019000,0.2569000}
};
inPtsREl = {
{0.7773000,0.9764000,0.1793000},
{0.7743000,0.9779000,0.1808000},
{0.7708000,0.9794000,0.1823000},
{0.7670000,0.9807000,0.1839000},
{0.7627000,0.9819000,0.1856000},
{0.7580000,0.9829000,0.1872000},
{0.7529000,0.9838000,0.1888000},
{0.7474000,0.9844000,0.1904000},
{0.7414000,0.9849000,0.1920000},
{0.7350000,0.9852000,0.1936000},
{0.7281000,0.9852000,0.1952000},
{0.7208000,0.9848000,0.1967000},
{0.7131000,0.9843000,0.1983000},
{0.7050000,0.9835000,0.1998000},
{0.6965000,0.9824000,0.2014000},
{0.6877000,0.9811000,0.2031000},
{0.6784000,0.9795000,0.2049000},
{0.6688000,0.9778000,0.2068000},
{0.6588000,0.9758000,0.2087000},
{0.6486000,0.9735000,0.2107000},
{0.6382000,0.9709000,0.2127000},
{0.6276000,0.9680000,0.2148000},
{0.6169000,0.9648000,0.2169000},
{0.6060000,0.9614000,0.2191000},
{0.5950000,0.9576000,0.2214000},
{0.5840000,0.9537000,0.2238000},
{0.5728000,0.9495000,0.2264000},
{0.5615000,0.9450000,0.2289000},
{0.5502000,0.9403000,0.2315000},
{0.5388000,0.9354000,0.2341000},
{0.5276000,0.9304000,0.2366000},
{0.5166000,0.9251000,0.2391000},
{0.5058000,0.9197000,0.2414000},
{0.4952000,0.9141000,0.2437000},
{0.4848000,0.9085000,0.2459000},
{0.4746000,0.9027000,0.2482000},
{0.4645000,0.8968000,0.2505000},
{0.4547000,0.8908000,0.2527000},
{0.4451000,0.8849000,0.2548000},
{0.4358000,0.8790000,0.2567000},
{0.4270000,0.8732000,0.2583000},
{0.4185000,0.8673000,0.2596000},
{0.4102000,0.8615000,0.2606000},
{0.4023000,0.8558000,0.2614000},
{0.3946000,0.8502000,0.2621000},
{0.3872000,0.8448000,0.2628000},
{0.3800000,0.8396000,0.2634000},
{0.3730000,0.8347000,0.2640000},
{0.3664000,0.8301000,0.2643000},
{0.3599000,0.8259000,0.2644000},
{0.3537000,0.8218000,0.2645000},
{0.3475000,0.8178000,0.2644000},
{0.3415000,0.8139000,0.2641000},
{0.3356000,0.8103000,0.2637000},
{0.3300000,0.8069000,0.2630000},
{0.3249000,0.8041000,0.2622000},
{0.3199000,0.8011000,0.2611000},
{0.3153000,0.7984000,0.2599000},
{0.3109000,0.7956000,0.2586000},
{0.3067000,0.7929000,0.2572000},
{0.3024000,0.7899000,0.2559000},
{0.2985000,0.7871000,0.2546000},
{0.2950000,0.7846000,0.2532000},
{0.2919000,0.7825000,0.2517000},
{0.2891000,0.7806000,0.2501000}
};
inPtsRUA = {
{0.7755000,0.9497000,0.3080000},
{0.7732000,0.9504000,0.3093000},
{0.7706000,0.9510000,0.3107000},
{0.7678000,0.9513000,0.3121000},
{0.7645000,0.9515000,0.3136000},
{0.7610000,0.9515000,0.3150000},
{0.7571000,0.9515000,0.3163000},
{0.7530000,0.9513000,0.3177000},
{0.7486000,0.9510000,0.3190000},
{0.7440000,0.9507000,0.3202000},
{0.7392000,0.9501000,0.3215000},
{0.7340000,0.9493000,0.3226000},
{0.7286000,0.9484000,0.3238000},
{0.7229000,0.9472000,0.3250000},
{0.7168000,0.9459000,0.3261000},
{0.7105000,0.9444000,0.3273000},
{0.7039000,0.9427000,0.3285000},
{0.6971000,0.9408000,0.3297000},
{0.6899000,0.9388000,0.3309000},
{0.6825000,0.9366000,0.3321000},
{0.6749000,0.9342000,0.3333000},
{0.6671000,0.9317000,0.3344000},
{0.6592000,0.9289000,0.3357000},
{0.6511000,0.9259000,0.3369000},
{0.6429000,0.9228000,0.3382000},
{0.6345000,0.9193000,0.3396000},
{0.6259000,0.9157000,0.3409000},
{0.6173000,0.9118000,0.3423000},
{0.6085000,0.9076000,0.3437000},
{0.5996000,0.9034000,0.3451000},
{0.5907000,0.8990000,0.3464000},
{0.5818000,0.8945000,0.3477000},
{0.5731000,0.8898000,0.3489000},
{0.5644000,0.8852000,0.3503000},
{0.5557000,0.8803000,0.3515000},
{0.5471000,0.8753000,0.3529000},
{0.5387000,0.8702000,0.3542000},
{0.5303000,0.8650000,0.3554000},
{0.5220000,0.8596000,0.3564000},
{0.5138000,0.8544000,0.3574000},
{0.5059000,0.8491000,0.3581000},
{0.4982000,0.8439000,0.3587000},
{0.4907000,0.8388000,0.3592000},
{0.4833000,0.8339000,0.3597000},
{0.4763000,0.8290000,0.3600000},
{0.4694000,0.8241000,0.3603000},
{0.4626000,0.8194000,0.3605000},
{0.4560000,0.8147000,0.3605000},
{0.4497000,0.8102000,0.3603000},
{0.4435000,0.8059000,0.3600000},
{0.4375000,0.8018000,0.3595000},
{0.4317000,0.7980000,0.3588000},
{0.4260000,0.7943000,0.3580000},
{0.4205000,0.7907000,0.3572000},
{0.4152000,0.7872000,0.3562000},
{0.4101000,0.7840000,0.3551000},
{0.4052000,0.7809000,0.3538000},
{0.4006000,0.7778000,0.3525000},
{0.3961000,0.7749000,0.3511000},
{0.3919000,0.7721000,0.3497000},
{0.3879000,0.7693000,0.3482000},
{0.3842000,0.7666000,0.3467000},
{0.3808000,0.7642000,0.3451000},
{0.3776000,0.7620000,0.3436000},
{0.3745000,0.7598000,0.3421000}
};
inPtsRSh = {
{0.7425000,0.8706000,0.5021000},
{0.7409000,0.8699000,0.5023000},
{0.7392000,0.8690000,0.5026000},
{0.7374000,0.8680000,0.5030000},
{0.7355000,0.8668000,0.5034000},
{0.7336000,0.8656000,0.5038000},
{0.7316000,0.8643000,0.5043000},
{0.7294000,0.8631000,0.5047000},
{0.7272000,0.8617000,0.5050000},
{0.7249000,0.8603000,0.5053000},
{0.7224000,0.8588000,0.5056000},
{0.7199000,0.8574000,0.5058000},
{0.7174000,0.8558000,0.5061000},
{0.7147000,0.8542000,0.5064000},
{0.7118000,0.8525000,0.5067000},
{0.7089000,0.8507000,0.5069000},
{0.7058000,0.8489000,0.5072000},
{0.7025000,0.8468000,0.5075000},
{0.6990000,0.8446000,0.5077000},
{0.6954000,0.8423000,0.5079000},
{0.6917000,0.8397000,0.5081000},
{0.6879000,0.8370000,0.5083000},
{0.6839000,0.8344000,0.5085000},
{0.6799000,0.8317000,0.5087000},
{0.6757000,0.8289000,0.5089000},
{0.6715000,0.8261000,0.5090000},
{0.6671000,0.8233000,0.5092000},
{0.6627000,0.8203000,0.5093000},
{0.6583000,0.8173000,0.5095000},
{0.6537000,0.8142000,0.5094000},
{0.6491000,0.8111000,0.5093000},
{0.6445000,0.8080000,0.5091000},
{0.6397000,0.8048000,0.5088000},
{0.6350000,0.8014000,0.5085000},
{0.6302000,0.7981000,0.5082000},
{0.6255000,0.7946000,0.5079000},
{0.6207000,0.7912000,0.5076000},
{0.6158000,0.7877000,0.5071000},
{0.6109000,0.7844000,0.5066000},
{0.6060000,0.7808000,0.5059000},
{0.6010000,0.7774000,0.5051000},
{0.5961000,0.7738000,0.5042000},
{0.5911000,0.7703000,0.5033000},
{0.5862000,0.7667000,0.5023000},
{0.5812000,0.7631000,0.5013000},
{0.5764000,0.7596000,0.5002000},
{0.5714000,0.7560000,0.4990000},
{0.5667000,0.7526000,0.4977000},
{0.5619000,0.7492000,0.4964000},
{0.5573000,0.7459000,0.4949000},
{0.5526000,0.7427000,0.4933000},
{0.5479000,0.7395000,0.4916000},
{0.5433000,0.7363000,0.4900000},
{0.5387000,0.7331000,0.4883000},
{0.5342000,0.7300000,0.4865000},
{0.5298000,0.7270000,0.4847000},
{0.5256000,0.7239000,0.4828000},
{0.5214000,0.7211000,0.4809000},
{0.5175000,0.7183000,0.4789000},
{0.5139000,0.7156000,0.4769000},
{0.5103000,0.7131000,0.4750000},
{0.5070000,0.7108000,0.4731000},
{0.5038000,0.7085000,0.4711000},
{0.5008000,0.7062000,0.4694000},
{0.4979000,0.7041000,0.4675000}
};
inPtsRCh = {
{0.7330000,0.7457000,0.4039000},
{0.7327000,0.7451000,0.4033000},
{0.7316000,0.7443000,0.4029000},
{0.7312000,0.7435000,0.4024000},
{0.7299000,0.7427000,0.4020000},
{0.7290000,0.7420000,0.4018000},
{0.7276000,0.7411000,0.4015000},
{0.7264000,0.7401000,0.4013000},
{0.7249000,0.7391000,0.4008000},
{0.7236000,0.7382000,0.4005000},
{0.7220000,0.7370000,0.4001000},
{0.7203000,0.7359000,0.3997000},
{0.7186000,0.7346000,0.3993000},
{0.7169000,0.7334000,0.3990000},
{0.7150000,0.7320000,0.3987000},
{0.7130000,0.7305000,0.3982000},
{0.7110000,0.7291000,0.3978000},
{0.7089000,0.7276000,0.3973000},
{0.7068000,0.7260000,0.3967000},
{0.7046000,0.7244000,0.3962000},
{0.7023000,0.7227000,0.3956000},
{0.6995000,0.7208000,0.3951000},
{0.6979000,0.7191000,0.3946000},
{0.6954000,0.7174000,0.3940000},
{0.6930000,0.7157000,0.3934000},
{0.6906000,0.7139000,0.3928000},
{0.6881000,0.7121000,0.3922000},
{0.6855000,0.7102000,0.3915000},
{0.6828000,0.7084000,0.3908000},
{0.6798000,0.7064000,0.3901000},
{0.6767000,0.7043000,0.3893000},
{0.6736000,0.7022000,0.3884000},
{0.6703000,0.6998000,0.3877000},
{0.6670000,0.6973000,0.3868000},
{0.6636000,0.6948000,0.3858000},
{0.6600000,0.6923000,0.3848000},
{0.6563000,0.6897000,0.3839000},
{0.6526000,0.6870000,0.3830000},
{0.6487000,0.6843000,0.3819000},
{0.6448000,0.6815000,0.3809000},
{0.6409000,0.6788000,0.3797000},
{0.6370000,0.6759000,0.3786000},
{0.6331000,0.6731000,0.3775000},
{0.6291000,0.6703000,0.3763000},
{0.6252000,0.6675000,0.3751000},
{0.6212000,0.6646000,0.3738000},
{0.6174000,0.6618000,0.3726000},
{0.6136000,0.6589000,0.3713000},
{0.6098000,0.6559000,0.3701000},
{0.6058000,0.6528000,0.3690000},
{0.6019000,0.6495000,0.3678000},
{0.5979000,0.6462000,0.3666000},
{0.5942000,0.6431000,0.3654000},
{0.5902000,0.6396000,0.3642000},
{0.5866000,0.6361000,0.3628000},
{0.5866000,0.6361000,0.3628000},
{0.5858000,0.6356000,0.3624000},
{0.5850000,0.6351000,0.3619000},
{0.5842000,0.6345000,0.3614000},
{0.5834000,0.6340000,0.3609000},
{0.5826000,0.6335000,0.3604000},
{0.5817000,0.6329000,0.3599000},
{0.5809000,0.6324000,0.3594000},
{0.5801000,0.6319000,0.3589000},
{0.5793000,0.6314000,0.3584000}
};
inPtsMCh = {
{0.7388000,0.6440000,0.4321000},
{0.7380000,0.6432000,0.4315000},
{0.7372000,0.6424000,0.4308000},
{0.7363000,0.6417000,0.4302000},
{0.7354000,0.6408000,0.4295000},
{0.7344000,0.6400000,0.4288000},
{0.7334000,0.6391000,0.4282000},
{0.7324000,0.6381000,0.4275000},
{0.7313000,0.6371000,0.4267000},
{0.7301000,0.6361000,0.4260000},
{0.7289000,0.6350000,0.4252000},
{0.7276000,0.6339000,0.4245000},
{0.7262000,0.6327000,0.4239000},
{0.7248000,0.6314000,0.4232000},
{0.7234000,0.6301000,0.4225000},
{0.7220000,0.6288000,0.4218000},
{0.7204000,0.6275000,0.4212000},
{0.7189000,0.6260000,0.4205000},
{0.7174000,0.6245000,0.4197000},
{0.7158000,0.6229000,0.4190000},
{0.7141000,0.6214000,0.4182000},
{0.7124000,0.6197000,0.4174000},
{0.7106000,0.6181000,0.4166000},
{0.7087000,0.6164000,0.4158000},
{0.7069000,0.6148000,0.4150000},
{0.7050000,0.6130000,0.4142000},
{0.7026000,0.6112000,0.4136000},
{0.7013000,0.6096000,0.4128000},
{0.6992000,0.6078000,0.4119000},
{0.6971000,0.6061000,0.4110000},
{0.6950000,0.6043000,0.4100000},
{0.6929000,0.6026000,0.4090000},
{0.6907000,0.6008000,0.4080000},
{0.6885000,0.5990000,0.4070000},
{0.6862000,0.5971000,0.4060000},
{0.6840000,0.5953000,0.4049000},
{0.6817000,0.5935000,0.4039000},
{0.6794000,0.5918000,0.4027000},
{0.6770000,0.5900000,0.4014000},
{0.6746000,0.5882000,0.4002000},
{0.6722000,0.5864000,0.3989000},
{0.6698000,0.5845000,0.3976000},
{0.6673000,0.5827000,0.3964000},
{0.6648000,0.5809000,0.3951000},
{0.6624000,0.5790000,0.3939000},
{0.6599000,0.5771000,0.3927000},
{0.6574000,0.5752000,0.3914000},
{0.6548000,0.5733000,0.3902000},
{0.6523000,0.5714000,0.3890000},
{0.6497000,0.5694000,0.3878000},
{0.6471000,0.5674000,0.3867000},
{0.6445000,0.5654000,0.3855000},
{0.6419000,0.5634000,0.3842000},
{0.6394000,0.5613000,0.3830000},
{0.6368000,0.5594000,0.3816000},
{0.6343000,0.5574000,0.3803000},
{0.6317000,0.5554000,0.3789000},
{0.6293000,0.5534000,0.3776000},
{0.6270000,0.5515000,0.3761000},
{0.6246000,0.5496000,0.3748000},
{0.6221000,0.5476000,0.3733000},
{0.6199000,0.5459000,0.3718000},
{0.6176000,0.5441000,0.3705000},
{0.6154000,0.5423000,0.3692000},
{0.6132000,0.5407000,0.3678000}
};
inPtsLCh = {
{0.7540000,0.5766000,0.3846000},
{0.7535000,0.5760000,0.3841000},
{0.7530000,0.5753000,0.3834000},
{0.7525000,0.5746000,0.3827000},
{0.7519000,0.5740000,0.3819000},
{0.7512000,0.5733000,0.3812000},
{0.7506000,0.5726000,0.3804000},
{0.7498000,0.5719000,0.3796000},
{0.7491000,0.5711000,0.3787000},
{0.7483000,0.5703000,0.3779000},
{0.7475000,0.5694000,0.3770000},
{0.7466000,0.5686000,0.3762000},
{0.7457000,0.5676000,0.3754000},
{0.7448000,0.5666000,0.3747000},
{0.7439000,0.5656000,0.3739000},
{0.7428000,0.5645000,0.3732000},
{0.7418000,0.5633000,0.3725000},
{0.7408000,0.5622000,0.3717000},
{0.7397000,0.5609000,0.3711000},
{0.7385000,0.5596000,0.3703000},
{0.7377000,0.5583000,0.3696000},
{0.7372000,0.5571000,0.3688000},
{0.7361000,0.5557000,0.3681000},
{0.7349000,0.5543000,0.3674000},
{0.7337000,0.5529000,0.3668000},
{0.7325000,0.5514000,0.3661000},
{0.7312000,0.5500000,0.3654000},
{0.7300000,0.5486000,0.3648000},
{0.7287000,0.5472000,0.3641000},
{0.7273000,0.5458000,0.3635000},
{0.7260000,0.5444000,0.3628000},
{0.7246000,0.5431000,0.3621000},
{0.7233000,0.5417000,0.3614000},
{0.7218000,0.5403000,0.3608000},
{0.7202000,0.5388000,0.3600000},
{0.7187000,0.5374000,0.3593000},
{0.7172000,0.5360000,0.3586000},
{0.7156000,0.5346000,0.3578000},
{0.7140000,0.5331000,0.3570000},
{0.7123000,0.5317000,0.3562000},
{0.7107000,0.5304000,0.3554000},
{0.7090000,0.5291000,0.3546000},
{0.7074000,0.5278000,0.3539000},
{0.7058000,0.5266000,0.3532000},
{0.7043000,0.5254000,0.3525000},
{0.7026000,0.5240000,0.3518000},
{0.7010000,0.5227000,0.3512000},
{0.6993000,0.5213000,0.3505000},
{0.6975000,0.5198000,0.3499000},
{0.6958000,0.5184000,0.3492000},
{0.6940000,0.5170000,0.3484000},
{0.6919000,0.5154000,0.3477000},
{0.6901000,0.5138000,0.3469000},
{0.6883000,0.5124000,0.3461000},
{0.6864000,0.5109000,0.3451000},
{0.6847000,0.5095000,0.3443000},
{0.6829000,0.5080000,0.3433000},
{0.6812000,0.5067000,0.3423000},
{0.6794000,0.5053000,0.3414000},
{0.6774000,0.5039000,0.3404000},
{0.6756000,0.5025000,0.3395000},
{0.6756000,0.5025000,0.3395000},
{0.6756000,0.5022000,0.3394000},
{0.6755000,0.5020000,0.3393000},
{0.6755000,0.5018000,0.3392000}
};
inPtsLSh = {
{0.8502000,0.4467000,0.5300000},
{0.8495000,0.4461000,0.5296000},
{0.8487000,0.4454000,0.5291000},
{0.8479000,0.4447000,0.5286000},
{0.8469000,0.4439000,0.5279000},
{0.8459000,0.4430000,0.5272000},
{0.8448000,0.4420000,0.5264000},
{0.8437000,0.4411000,0.5256000},
{0.8427000,0.4401000,0.5248000},
{0.8416000,0.4392000,0.5240000},
{0.8405000,0.4382000,0.5232000},
{0.8395000,0.4372000,0.5225000},
{0.8385000,0.4362000,0.5217000},
{0.8375000,0.4351000,0.5210000},
{0.8365000,0.4341000,0.5203000},
{0.8355000,0.4330000,0.5196000},
{0.8345000,0.4320000,0.5190000},
{0.8334000,0.4310000,0.5184000},
{0.8324000,0.4300000,0.5178000},
{0.8314000,0.4290000,0.5173000},
{0.8304000,0.4280000,0.5168000},
{0.8295000,0.4270000,0.5164000},
{0.8285000,0.4261000,0.5160000},
{0.8274000,0.4252000,0.5156000},
{0.8265000,0.4243000,0.5153000},
{0.8254000,0.4234000,0.5150000},
{0.8243000,0.4226000,0.5147000},
{0.8232000,0.4217000,0.5145000},
{0.8220000,0.4210000,0.5143000},
{0.8208000,0.4202000,0.5141000},
{0.8195000,0.4194000,0.5139000},
{0.8182000,0.4187000,0.5137000},
{0.8169000,0.4180000,0.5136000},
{0.8155000,0.4174000,0.5134000},
{0.8142000,0.4168000,0.5133000},
{0.8128000,0.4162000,0.5132000},
{0.8113000,0.4157000,0.5131000},
{0.8098000,0.4151000,0.5129000},
{0.8083000,0.4146000,0.5128000},
{0.8066000,0.4140000,0.5127000},
{0.8050000,0.4135000,0.5126000},
{0.8033000,0.4130000,0.5124000},
{0.8016000,0.4126000,0.5124000},
{0.8000000,0.4122000,0.5125000},
{0.7982000,0.4119000,0.5127000},
{0.7966000,0.4116000,0.5129000},
{0.7949000,0.4113000,0.5132000},
{0.7931000,0.4111000,0.5135000},
{0.7914000,0.4109000,0.5137000},
{0.7896000,0.4106000,0.5139000},
{0.7879000,0.4103000,0.5140000},
{0.7861000,0.4100000,0.5140000},
{0.7843000,0.4097000,0.5140000},
{0.7825000,0.4094000,0.5140000},
{0.7807000,0.4091000,0.5138000},
{0.7789000,0.4087000,0.5136000},
{0.7770000,0.4083000,0.5134000},
{0.7750000,0.4079000,0.5131000},
{0.7731000,0.4074000,0.5128000},
{0.7712000,0.4070000,0.5125000},
{0.7692000,0.4064000,0.5121000},
{0.7673000,0.4058000,0.5116000},
{0.7653000,0.4052000,0.5112000},
{0.7634000,0.4046000,0.5107000},
{0.7614000,0.4040000,0.5102000}
};
inPtsEeWam = {
{0.5635801,0.7410101,-0.0747934},
{0.5599855,0.7439889,-0.0726085},
{0.5556166,0.7470463,-0.0703037},
{0.5511586,0.7497642,-0.0681493},
{0.5459888,0.7522929,-0.0657125},
{0.5403651,0.7544723,-0.0632305},
{0.5339187,0.7563462,-0.0602661},
{0.5268687,0.7580575,-0.0572805},
{0.5188453,0.7597513,-0.0538012},
{0.5100687,0.7610715,-0.0502093},
{0.5004150,0.7622556,-0.0462559},
{0.4897394,0.7629806,-0.0420738},
{0.4782569,0.7636407,-0.0375845},
{0.4663459,0.7637610,-0.0330765},
{0.4537658,0.7635366,-0.0283781},
{0.4401983,0.7635604,-0.0231608},
{0.4264001,0.7627437,-0.0184718},
{0.4119949,0.7621326,-0.0133987},
{0.3970937,0.7609889,-0.0084405},
{0.3817211,0.7597058,-0.0033151},
{0.3659638,0.7580981,0.0018797},
{0.3498674,0.7562253,0.0068730},
{0.3337255,0.7537229,0.0114855},
{0.3173184,0.7508505,0.0159367},
{0.3007429,0.7474492,0.0199372},
{0.2839391,0.7440862,0.0234885},
{0.2668275,0.7402482,0.0267868},
{0.2491587,0.7361356,0.0302721},
{0.2314227,0.7317888,0.0336696},
{0.2132550,0.7274609,0.0371164},
{0.1952477,0.7230765,0.0404249},
{0.1769968,0.7188259,0.0437401},
{0.1589787,0.7146994,0.0470079},
{0.1412081,0.7104393,0.0499498},
{0.1235392,0.7063940,0.0530516},
{0.1062234,0.7023383,0.0557872},
{0.0891291,0.6980998,0.0582686},
{0.0720531,0.6942389,0.0607921},
{0.0552827,0.6906839,0.0632847},
{0.0392176,0.6870798,0.0653844},
{0.0239590,0.6841756,0.0670261},
{0.0088461,0.6811193,0.0689616},
{-0.0051210,0.6779966,0.0703495},
{-0.0181987,0.6745075,0.0710404},
{-0.0309804,0.6713808,0.0721733},
{-0.0431313,0.6685736,0.0730612},
{-0.0544368,0.6652526,0.0731850},
{-0.0653552,0.6622722,0.0733366},
{-0.0754133,0.6597171,0.0730928},
{-0.0849972,0.6572678,0.0729523},
{-0.0942784,0.6551826,0.0723609},
{-0.1032895,0.6531002,0.0715856},
{-0.1117345,0.6514949,0.0707828},
{-0.1199310,0.6496313,0.0698770},
{-0.1277090,0.6485972,0.0691072},
{-0.1345993,0.6478588,0.0678164},
{-0.1412786,0.6470003,0.0665585},
{-0.1473796,0.6463322,0.0648391},
{-0.1533104,0.6453399,0.0631059},
{-0.1586819,0.6439798,0.0611010},
{-0.1644050,0.6423666,0.0592513},
{-0.1696766,0.6408374,0.0573228},
{-0.1744990,0.6402005,0.0554278},
{-0.1785972,0.6401280,0.0537177},
{-0.1824768,0.6400938,0.0517340}
};
inPtsRPiWam = {
{0.5235372,0.7615437,-0.1251219},
{0.5205014,0.7640761,-0.1236701},
{0.5166514,0.7666711,-0.1219794},
{0.5123551,0.7689762,-0.1201562},
{0.5073584,0.7711473,-0.1180221},
{0.5014630,0.7729190,-0.1154971},
{0.4947857,0.7745719,-0.1124187},
{0.4872924,0.7758371,-0.1091435},
{0.4788875,0.7770948,-0.1054754},
{0.4696256,0.7781845,-0.1015147},
{0.4594937,0.7789823,-0.0972988},
{0.4483684,0.7793178,-0.0928711},
{0.4365040,0.7796130,-0.0880844},
{0.4240039,0.7794011,-0.0831005},
{0.4108651,0.7789465,-0.0780371},
{0.3971107,0.7783564,-0.0728975},
{0.3826705,0.7772380,-0.0676181},
{0.3677416,0.7762510,-0.0621492},
{0.3522938,0.7748261,-0.0566229},
{0.3363764,0.7731898,-0.0509962},
{0.3200688,0.7713525,-0.0452802},
{0.3034314,0.7691875,-0.0397234},
{0.2867018,0.7665827,-0.0344248},
{0.2697626,0.7636216,-0.0292693},
{0.2525881,0.7603713,-0.0245094},
{0.2352298,0.7572227,-0.0201839},
{0.2176339,0.7536791,-0.0161390},
{0.1997231,0.7499049,-0.0120532},
{0.1817574,0.7459231,-0.0082033},
{0.1635259,0.7419688,-0.0045181},
{0.1455402,0.7379625,-0.0009181},
{0.1274243,0.7340116,0.0023622},
{0.1096744,0.7301645,0.0053624},
{0.0920983,0.7263094,0.0083864},
{0.0749475,0.7225474,0.0109864},
{0.0579975,0.7187876,0.0135004},
{0.0413567,0.7148648,0.0156596},
{0.0248643,0.7114398,0.0176307},
{0.0088674,0.7079572,0.0194249},
{-0.0065309,0.7048074,0.0209651},
{-0.0213032,0.7020052,0.0221990},
{-0.0355425,0.6992674,0.0234516},
{-0.0490437,0.6963668,0.0244305},
{-0.0618317,0.6936644,0.0253310},
{-0.0739619,0.6909115,0.0259034},
{-0.0856588,0.6883574,0.0264340},
{-0.0966070,0.6857856,0.0265920},
{-0.1072507,0.6834997,0.0267539},
{-0.1170422,0.6815359,0.0265941},
{-0.1263497,0.6796771,0.0264543},
{-0.1353432,0.6780731,0.0258198},
{-0.1440781,0.6763970,0.0249871},
{-0.1523440,0.6748153,0.0240687},
{-0.1601626,0.6733739,0.0229930},
{-0.1676289,0.6722394,0.0218865},
{-0.1741532,0.6717449,0.0203770},
{-0.1805468,0.6710490,0.0188549},
{-0.1863873,0.6705431,0.0169843},
{-0.1920967,0.6699016,0.0152350},
{-0.1973750,0.6691377,0.0133847},
{-0.2029384,0.6679205,0.0115588},
{-0.2080422,0.6667669,0.0097258},
{-0.2127695,0.6662792,0.0077789},
{-0.2166869,0.6662185,0.0059542},
{-0.2203723,0.6664095,0.0038724}
};
inPtsRThWam = {
{0.5236598,0.8022831,-0.1418303},
{0.5206987,0.8045069,-0.1406110},
{0.5168803,0.8069340,-0.1391453},
{0.5124217,0.8090863,-0.1374372},
{0.5073819,0.8110984,-0.1354787},
{0.5012695,0.8127580,-0.1331507},
{0.4945572,0.8143532,-0.1302833},
{0.4868867,0.8156660,-0.1273556},
{0.4783686,0.8168368,-0.1240524},
{0.4691178,0.8178805,-0.1204590},
{0.4588260,0.8185433,-0.1165577},
{0.4475967,0.8187143,-0.1124934},
{0.4356705,0.8189963,-0.1081075},
{0.4229656,0.8187828,-0.1034391},
{0.4097146,0.8181071,-0.0986462},
{0.3961239,0.8170444,-0.0942080},
{0.3815021,0.8159290,-0.0893080},
{0.3665094,0.8147310,-0.0843225},
{0.3510070,0.8132862,-0.0792993},
{0.3349227,0.8115598,-0.0740939},
{0.3185211,0.8095783,-0.0687806},
{0.3017008,0.8073688,-0.0636166},
{0.2847233,0.8048444,-0.0585218},
{0.2675668,0.8020366,-0.0536084},
{0.2501614,0.7989026,-0.0488575},
{0.2326040,0.7959254,-0.0445186},
{0.2148765,0.7925785,-0.0404412},
{0.1969912,0.7891387,-0.0363938},
{0.1790555,0.7853108,-0.0324614},
{0.1610271,0.7814141,-0.0287957},
{0.1432736,0.7776714,-0.0252744},
{0.1254730,0.7737129,-0.0220822},
{0.1081663,0.7697094,-0.0192310},
{0.0909687,0.7660589,-0.0163171},
{0.0744974,0.7621103,-0.0140231},
{0.0580609,0.7583555,-0.0117254},
{0.0419620,0.7544476,-0.0097122},
{0.0263042,0.7506848,-0.0080216},
{0.0109901,0.7471678,-0.0065102},
{-0.0034877,0.7436749,-0.0052766},
{-0.0176050,0.7406107,-0.0044686},
{-0.0308116,0.7375812,-0.0036224},
{-0.0436959,0.7343464,-0.0028725},
{-0.0559351,0.7319394,-0.0018799},
{-0.0672831,0.7287568,-0.0014497},
{-0.0784397,0.7259360,-0.0010250},
{-0.0888285,0.7234264,-0.0007215},
{-0.0989794,0.7210249,-0.0004316},
{-0.1083344,0.7191274,-0.0004969},
{-0.1172438,0.7172328,-0.0004649},
{-0.1258234,0.7155284,-0.0010349},
{-0.1342543,0.7138554,-0.0017090},
{-0.1423060,0.7121886,-0.0027459},
{-0.1497187,0.7106145,-0.0036983},
{-0.1569692,0.7093276,-0.0048746},
{-0.1631444,0.7087023,-0.0063300},
{-0.1693070,0.7077743,-0.0077716},
{-0.1749094,0.7071856,-0.0095996},
{-0.1804153,0.7065917,-0.0111522},
{-0.1855032,0.7057879,-0.0127465},
{-0.1908957,0.7045447,-0.0143674},
{-0.1958414,0.7035568,-0.0159708},
{-0.2004821,0.7029771,-0.0178444},
{-0.2042258,0.7028622,-0.0197309},
{-0.2077438,0.7029366,-0.0217034}
};
inPtsRWWam = {
{0.5637472,0.7965225,-0.0975605},
{0.5602556,0.7993268,-0.0957956},
{0.5559303,0.8022386,-0.0938347},
{0.5512502,0.8048675,-0.0918899},
{0.5460211,0.8072735,-0.0897361},
{0.5400988,0.8093273,-0.0875380},
{0.5336042,0.8110798,-0.0848453},
{0.5263129,0.8126212,-0.0822302},
{0.5181356,0.8141024,-0.0792070},
{0.5093759,0.8152175,-0.0760497},
{0.4995047,0.8161965,-0.0725152},
{0.4886876,0.8166793,-0.0688196},
{0.4771252,0.8171155,-0.0647720},
{0.4649407,0.8170567,-0.0606009},
{0.4522064,0.8166148,-0.0563115},
{0.4388581,0.8161017,-0.0521022},
{0.4248202,0.8150626,-0.0478014},
{0.4103309,0.8140993,-0.0433435},
{0.3953650,0.8126525,-0.0389018},
{0.3797746,0.8110835,-0.0342432},
{0.3638955,0.8091810,-0.0295250},
{0.3475638,0.8070498,-0.0249322},
{0.3311026,0.8044445,-0.0204588},
{0.3144247,0.8014749,-0.0161382},
{0.2975529,0.7980994,-0.0120689},
{0.2804985,0.7947965,-0.0083961},
{0.2632269,0.7910423,-0.0049465},
{0.2456148,0.7870317,-0.0013038},
{0.2279241,0.7827901,0.0022590},
{0.2100227,0.7784841,0.0057129},
{0.1923318,0.7741614,0.0090908},
{0.1744878,0.7698734,0.0123098},
{0.1570365,0.7656232,0.0153378},
{0.1397604,0.7613847,0.0182881},
{0.1229624,0.7571080,0.0209930},
{0.1063045,0.7529312,0.0235327},
{0.0899014,0.7486093,0.0258929},
{0.0738950,0.7444380,0.0279797},
{0.0579891,0.7406767,0.0302181},
{0.0431030,0.7367027,0.0318811},
{0.0286736,0.7333900,0.0330302},
{0.0148660,0.7298726,0.0345106},
{0.0016943,0.7263990,0.0355535},
{-0.0107238,0.7230279,0.0365456},
{-0.0224851,0.7195193,0.0373807},
{-0.0339346,0.7164460,0.0380805},
{-0.0445388,0.7131493,0.0384296},
{-0.0548119,0.7101053,0.0386835},
{-0.0643317,0.7075563,0.0386167},
{-0.0733963,0.7051140,0.0386571},
{-0.0821411,0.7029363,0.0381224},
{-0.0907578,0.7008835,0.0375311},
{-0.0989418,0.6991242,0.0366097},
{-0.1065964,0.6971792,0.0357980},
{-0.1140895,0.6959833,0.0349156},
{-0.1205179,0.6951316,0.0336552},
{-0.1268481,0.6941507,0.0323737},
{-0.1326336,0.6934079,0.0306860},
{-0.1382953,0.6925007,0.0291882},
{-0.1433802,0.6912183,0.0274205},
{-0.1488527,0.6896644,0.0257694},
{-0.1539353,0.6883037,0.0241691},
{-0.1586149,0.6876402,0.0223044},
{-0.1625016,0.6874593,0.0205412},
{-0.1661273,0.6873835,0.0186224}
};
inPtsRLAWam = {
{0.7660871,1.0169205,-0.0755768},
{0.7620503,1.0202814,-0.0743948},
{0.7571788,1.0237462,-0.0730159},
{0.7518846,1.0269745,-0.0715357},
{0.7458105,1.0301928,-0.0699583},
{0.7390308,1.0330700,-0.0684271},
{0.7315776,1.0357551,-0.0667461},
{0.7235553,1.0380251,-0.0652438},
{0.7145978,1.0402910,-0.0636733},
{0.7049991,1.0422342,-0.0620846},
{0.6945747,1.0437968,-0.0604421},
{0.6833868,1.0447043,-0.0589784},
{0.6714515,1.0455439,-0.0571689},
{0.6589391,1.0458295,-0.0553456},
{0.6458546,1.0457259,-0.0534029},
{0.6322187,1.0454728,-0.0513194},
{0.6178628,1.0446994,-0.0490324},
{0.6031133,1.0439380,-0.0463662},
{0.5878151,1.0427412,-0.0436066},
{0.5721831,1.0411664,-0.0406344},
{0.5563152,1.0392090,-0.0373834},
{0.5401951,1.0368594,-0.0339179},
{0.5240663,1.0339331,-0.0304609},
{0.5076735,1.0306980,-0.0267056},
{0.4912704,1.0269156,-0.0228685},
{0.4748936,1.0230532,-0.0188583},
{0.4583627,1.0187007,-0.0146245},
{0.4417200,1.0138875,-0.0102023},
{0.4251856,1.0086826,-0.0055188},
{0.4085403,1.0033127,-0.0008366},
{0.3923535,0.9976884,0.0038925},
{0.3764711,0.9916590,0.0085757},
{0.3611443,0.9854752,0.0130724},
{0.3462060,0.9790539,0.0177212},
{0.3317759,0.9725037,0.0222413},
{0.3176832,0.9657866,0.0269402},
{0.3038639,0.9588181,0.0315804},
{0.2905145,0.9518324,0.0359520},
{0.2775618,0.9448508,0.0402557},
{0.2651882,0.9380066,0.0443270},
{0.2536695,0.9312766,0.0477859},
{0.2426703,0.9243816,0.0509867},
{0.2322414,0.9174892,0.0537908},
{0.2224110,0.9107990,0.0562989},
{0.2129544,0.9042363,0.0585438},
{0.2038207,0.8979879,0.0607732},
{0.1949958,0.8921371,0.0626483},
{0.1863624,0.8866278,0.0646597},
{0.1784566,0.8816200,0.0661065},
{0.1706934,0.8771204,0.0675366},
{0.1632098,0.8728568,0.0686180},
{0.1558347,0.8687098,0.0695696},
{0.1489675,0.8646674,0.0703207},
{0.1422062,0.8610758,0.0709436},
{0.1359252,0.8577781,0.0711800},
{0.1302845,0.8554407,0.0710606},
{0.1248919,0.8527527,0.0707452},
{0.1199566,0.8504269,0.0699699},
{0.1151867,0.8478978,0.0691707},
{0.1107125,0.8453689,0.0683413},
{0.1060711,0.8421899,0.0676003},
{0.1018108,0.8392300,0.0667740},
{0.0979955,0.8368758,0.0656610},
{0.0949372,0.8351183,0.0643830},
{0.0920565,0.8336312,0.0628123}
};
inPtsRElWam = {
{0.7684553,1.0103128,-0.0311276},
{0.7647368,1.0135266,-0.0299858},
{0.7602266,1.0168082,-0.0286585},
{0.7552909,1.0198379,-0.0272360},
{0.7496239,1.0228506,-0.0257254},
{0.7432785,1.0255216,-0.0242686},
{0.7363173,1.0280279,-0.0226686},
{0.7287937,1.0301260,-0.0212534},
{0.7204188,1.0322211,-0.0197872},
{0.7114267,1.0340028,-0.0183132},
{0.7016570,1.0354119,-0.0168012},
{0.6911594,1.0361904,-0.0154801},
{0.6799524,1.0368698,-0.0138388},
{0.6681724,1.0370085,-0.0121954},
{0.6558239,1.0367544,-0.0104479},
{0.6429219,1.0363041,-0.0085833},
{0.6292895,1.0353214,-0.0065297},
{0.6152602,1.0343051,-0.0041210},
{0.6006734,1.0328446,-0.0016337},
{0.5857425,1.0309851,0.0010488},
{0.5705530,1.0287127,0.0039942},
{0.5550641,1.0260014,0.0071432},
{0.5395135,1.0227206,0.0102903},
{0.5236590,1.0190851,0.0137247},
{0.5077283,1.0148756,0.0172461},
{0.4917564,1.0105158,0.0209344},
{0.4755657,1.0056334,0.0248508},
{0.4592443,1.0002743,0.0289459},
{0.4429693,0.9944896,0.0333051},
{0.4265600,0.9885231,0.0376544},
{0.4105503,0.9822928,0.0420612},
{0.3947689,0.9756322,0.0464351},
{0.3794885,0.9688318,0.0506422},
{0.3645377,0.9617645,0.0550043},
{0.3500400,0.9545833,0.0592586},
{0.3358146,0.9471926,0.0636896},
{0.3218125,0.9395615,0.0680774},
{0.3082388,0.9319261,0.0722093},
{0.2950067,0.9243183,0.0762986},
{0.2823563,0.9168519,0.0801423},
{0.2704583,0.9095302,0.0834262},
{0.2591042,0.9021281,0.0864791},
{0.2482765,0.8947668,0.0891683},
{0.2380603,0.8876577,0.0915775},
{0.2282379,0.8807239,0.0937373},
{0.2187150,0.8740937,0.0958763},
{0.2095712,0.8678955,0.0976468},
{0.2006254,0.8620104,0.0995244},
{0.1924014,0.8566792,0.1008699},
{0.1843957,0.8518615,0.1021666},
{0.1766396,0.8472738,0.1031166},
{0.1689947,0.8428125,0.1039374},
{0.1618097,0.8384603,0.1045737},
{0.1548394,0.8345833,0.1050544},
{0.1482943,0.8310403,0.1051961},
{0.1424735,0.8284630,0.1049521},
{0.1368698,0.8255639,0.1045431},
{0.1317227,0.8230608,0.1036990},
{0.1267467,0.8203771,0.1028453},
{0.1221017,0.8176780,0.1019344},
{0.1172191,0.8143550,0.1011553},
{0.1127247,0.8112714,0.1003032},
{0.1086667,0.8087932,0.0991646},
{0.1053873,0.8069515,0.0978857},
{0.1023139,0.8053986,0.0963191}
};
inPtsRUAWam = {
{0.7985511,1.0410083,-0.0178224},
{0.7948032,1.0441979,-0.0165590},
{0.7902782,1.0474503,-0.0151321},
{0.7853234,1.0504649,-0.0136332},
{0.7796176,1.0534887,-0.0120619},
{0.7732441,1.0561842,-0.0105987},
{0.7662552,1.0587270,-0.0090198},
{0.7587442,1.0608471,-0.0076817},
{0.7503976,1.0629634,-0.0063266},
{0.7414355,1.0647830,-0.0050070},
{0.7317527,1.0661999,-0.0037111},
{0.7213806,1.0669854,-0.0026995},
{0.7103101,1.0676721,-0.0014037},
{0.6986737,1.0678288,-0.0001628},
{0.6864642,1.0676058,0.0011433},
{0.6737034,1.0671920,0.0025267},
{0.6601945,1.0662750,0.0040417},
{0.6462861,1.0653168,0.0059121},
{0.6317931,1.0639420,0.0078277},
{0.6169781,1.0621493,0.0098877},
{0.6018864,1.0599531,0.0121947},
{0.5864829,1.0573257,0.0146694},
{0.5709947,1.0541440,0.0171092},
{0.5551490,1.0506473,0.0198245},
{0.5392002,1.0465893,0.0226088},
{0.5231786,1.0423950,0.0255569},
{0.5068845,1.0377136,0.0287233},
{0.4904496,1.0325493,0.0320369},
{0.4740252,1.0269744,0.0356018},
{0.4574399,1.0212211,0.0391615},
{0.4412440,1.0151924,0.0427787},
{0.4252820,1.0087070,0.0463256},
{0.4098219,1.0020591,0.0497304},
{0.3946769,0.9951368,0.0532958},
{0.3799644,0.9881001,0.0567777},
{0.3655057,0.9808517,0.0604480},
{0.3512429,0.9733682,0.0640826},
{0.3374131,0.9658607,0.0674871},
{0.3239533,0.9583333,0.0708148},
{0.3110273,0.9509899,0.0740128},
{0.2989191,0.9437181,0.0766313},
{0.2873834,0.9363282,0.0790193},
{0.2763835,0.9289631,0.0810684},
{0.2660164,0.9218297,0.0828751},
{0.2560413,0.9148756,0.0844835},
{0.2463657,0.9082201,0.0860872},
{0.2370499,0.9020380,0.0874384},
{0.2278969,0.8962021,0.0889324},
{0.2195322,0.8908755,0.0899368},
{0.2113620,0.8860978,0.0909551},
{0.2034487,0.8815530,0.0916619},
{0.1956549,0.8771287,0.0922483},
{0.1883492,0.8727925,0.0926592},
{0.1812410,0.8689731,0.0930007},
{0.1746372,0.8654083,0.0929531},
{0.1687662,0.8628502,0.0926550},
{0.1631353,0.8599344,0.0921416},
{0.1579884,0.8574014,0.0912156},
{0.1530146,0.8546733,0.0902450},
{0.1483265,0.8519843,0.0892721},
{0.1433975,0.8486368,0.0883317},
{0.1388694,0.8455164,0.0873133},
{0.1348219,0.8429791,0.0860409},
{0.1316168,0.8410429,0.0846648},
{0.1286232,0.8393954,0.0830136}
};
inPtsRShWam = {
{0.7425000,0.8706000,0.5021000},
{0.7409000,0.8699000,0.5023000},
{0.7392000,0.8690000,0.5026000},
{0.7374000,0.8680000,0.5030000},
{0.7355000,0.8668000,0.5034000},
{0.7336000,0.8656000,0.5038000},
{0.7316000,0.8643000,0.5043000},
{0.7294000,0.8631000,0.5047000},
{0.7272000,0.8617000,0.5050000},
{0.7249000,0.8603000,0.5053000},
{0.7224000,0.8588000,0.5056000},
{0.7199000,0.8574000,0.5058000},
{0.7174000,0.8558000,0.5061000},
{0.7147000,0.8542000,0.5064000},
{0.7118000,0.8525000,0.5067000},
{0.7089000,0.8507000,0.5069000},
{0.7058000,0.8489000,0.5072000},
{0.7025000,0.8468000,0.5075000},
{0.6990000,0.8446000,0.5077000},
{0.6954000,0.8423000,0.5079000},
{0.6917000,0.8397000,0.5081000},
{0.6879000,0.8370000,0.5083000},
{0.6839000,0.8344000,0.5085000},
{0.6799000,0.8317000,0.5087000},
{0.6757000,0.8289000,0.5089000},
{0.6715000,0.8261000,0.5090000},
{0.6671000,0.8233000,0.5092000},
{0.6627000,0.8203000,0.5093000},
{0.6583000,0.8173000,0.5095000},
{0.6537000,0.8142000,0.5094000},
{0.6491000,0.8111000,0.5093000},
{0.6445000,0.8080000,0.5091000},
{0.6397000,0.8048000,0.5088000},
{0.6350000,0.8014000,0.5085000},
{0.6302000,0.7981000,0.5082000},
{0.6255000,0.7946000,0.5079000},
{0.6207000,0.7912000,0.5076000},
{0.6158000,0.7877000,0.5071000},
{0.6109000,0.7844000,0.5066000},
{0.6060000,0.7808000,0.5059000},
{0.6010000,0.7774000,0.5051000},
{0.5961000,0.7738000,0.5042000},
{0.5911000,0.7703000,0.5033000},
{0.5862000,0.7667000,0.5023000},
{0.5812000,0.7631000,0.5013000},
{0.5764000,0.7596000,0.5002000},
{0.5714000,0.7560000,0.4990000},
{0.5667000,0.7526000,0.4977000},
{0.5619000,0.7492000,0.4964000},
{0.5573000,0.7459000,0.4949000},
{0.5526000,0.7427000,0.4933000},
{0.5479000,0.7395000,0.4916000},
{0.5433000,0.7363000,0.4900000},
{0.5387000,0.7331000,0.4883000},
{0.5342000,0.7300000,0.4865000},
{0.5298000,0.7270000,0.4847000},
{0.5256000,0.7239000,0.4828000},
{0.5214000,0.7211000,0.4809000},
{0.5175000,0.7183000,0.4789000},
{0.5139000,0.7156000,0.4769000},
{0.5103000,0.7131000,0.4750000},
{0.5070000,0.7108000,0.4731000},
{0.5038000,0.7085000,0.4711000},
{0.5008000,0.7062000,0.4694000},
{0.4979000,0.7041000,0.4675000}
};
shoToUaVsWam = {
{0.0560511,0.1704083,-0.5199224},
{0.0539032,0.1742979,-0.5188590},
{0.0510782,0.1784503,-0.5177321},
{0.0479234,0.1824649,-0.5166332},
{0.0441176,0.1866887,-0.5154619},
{0.0396441,0.1905842,-0.5143987},
{0.0346552,0.1944270,-0.5133198},
{0.0293442,0.1977471,-0.5123817},
{0.0231976,0.2012634,-0.5113266},
{0.0165355,0.2044830,-0.5103070},
{0.0093527,0.2073999,-0.5093111},
{0.0014806,0.2095854,-0.5084995},
{-0.0070899,0.2118721,-0.5075037},
{-0.0160263,0.2136288,-0.5065628},
{-0.0253358,0.2151058,-0.5055567},
{-0.0351966,0.2164920,-0.5043733},
{-0.0456055,0.2173750,-0.5031583},
{-0.0562139,0.2185168,-0.5015879},
{-0.0672069,0.2193420,-0.4998723},
{-0.0784219,0.2198493,-0.4980123},
{-0.0898136,0.2202531,-0.4959053},
{-0.1014171,0.2203257,-0.4936306},
{-0.1129053,0.2197440,-0.4913908},
{-0.1247510,0.2189473,-0.4888755},
{-0.1364998,0.2176893,-0.4862912},
{-0.1483214,0.2162950,-0.4834431},
{-0.1602155,0.2144136,-0.4804767},
{-0.1722504,0.2122493,-0.4772631},
{-0.1842748,0.2096744,-0.4738982},
{-0.1962601,0.2070211,-0.4702385},
{-0.2078560,0.2040924,-0.4665213},
{-0.2192180,0.2007070,-0.4627744},
{-0.2298781,0.1972591,-0.4590696},
{-0.2403231,0.1937368,-0.4552042},
{-0.2502356,0.1900001,-0.4514223},
{-0.2599943,0.1862517,-0.4474520},
{-0.2694571,0.1821682,-0.4435174},
{-0.2783869,0.1781607,-0.4396129},
{-0.2869467,0.1739333,-0.4357852},
{-0.2949727,0.1701899,-0.4318872},
{-0.3020809,0.1663181,-0.4284687},
{-0.3087166,0.1625282,-0.4251807},
{-0.3147165,0.1586631,-0.4222316},
{-0.3201836,0.1551297,-0.4194249},
{-0.3251587,0.1517756,-0.4168165},
{-0.3300343,0.1486201,-0.4141128},
{-0.3343501,0.1460380,-0.4115616},
{-0.3388031,0.1436021,-0.4087676},
{-0.3423678,0.1416755,-0.4064632},
{-0.3459380,0.1401978,-0.4039449},
{-0.3491513,0.1388530,-0.4016381},
{-0.3522451,0.1376287,-0.3993517},
{-0.3549508,0.1364925,-0.3973408},
{-0.3574590,0.1358731,-0.3952993},
{-0.3595628,0.1354083,-0.3935469},
{-0.3610338,0.1358502,-0.3920450},
{-0.3624647,0.1360344,-0.3906584},
{-0.3634116,0.1363014,-0.3896844},
{-0.3644854,0.1363733,-0.3886550},
{-0.3655735,0.1363843,-0.3876279},
{-0.3669025,0.1355368,-0.3866683},
{-0.3681306,0.1347164,-0.3857867},
{-0.3689781,0.1344791,-0.3850591},
{-0.3691832,0.1348429,-0.3847352},
{-0.3692768,0.1352954,-0.3844864}
};
elOffsetVsWam = {
{-0.0300958,-0.0306955,-0.0133052},
{-0.0300665,-0.0306713,-0.0134268},
{-0.0300515,-0.0306421,-0.0135264},
{-0.0300324,-0.0306271,-0.0136027},
{-0.0299936,-0.0306380,-0.0136635},
{-0.0299656,-0.0306626,-0.0136699},
{-0.0299379,-0.0306990,-0.0136489},
{-0.0299505,-0.0307210,-0.0135716},
{-0.0299787,-0.0307423,-0.0134605},
{-0.0300087,-0.0307802,-0.0133062},
{-0.0300957,-0.0307880,-0.0130900},
{-0.0302212,-0.0307950,-0.0127806},
{-0.0303577,-0.0308022,-0.0124352},
{-0.0305013,-0.0308202,-0.0120326},
{-0.0306404,-0.0308514,-0.0115912},
{-0.0307815,-0.0308879,-0.0111100},
{-0.0309050,-0.0309536,-0.0105714},
{-0.0310259,-0.0310117,-0.0100331},
{-0.0311197,-0.0310974,-0.0094614},
{-0.0312356,-0.0311643,-0.0088389},
{-0.0313334,-0.0312405,-0.0082004},
{-0.0314188,-0.0313244,-0.0075262},
{-0.0314812,-0.0314235,-0.0068189},
{-0.0314900,-0.0315622,-0.0060998},
{-0.0314719,-0.0317138,-0.0053627},
{-0.0314221,-0.0318792,-0.0046225},
{-0.0313188,-0.0320802,-0.0038726},
{-0.0312053,-0.0322750,-0.0030910},
{-0.0310559,-0.0324847,-0.0022967},
{-0.0308799,-0.0326980,-0.0015071},
{-0.0306937,-0.0328996,-0.0007174},
{-0.0305131,-0.0330747,0.0001095},
{-0.0303333,-0.0332274,0.0009118},
{-0.0301392,-0.0333723,0.0017085},
{-0.0299244,-0.0335168,0.0024809},
{-0.0296911,-0.0336590,0.0032416},
{-0.0294305,-0.0338066,0.0039948},
{-0.0291743,-0.0339346,0.0047222},
{-0.0289466,-0.0340150,0.0054839},
{-0.0286710,-0.0341380,0.0061295},
{-0.0284608,-0.0341879,0.0067949},
{-0.0282791,-0.0342001,0.0074598},
{-0.0281070,-0.0341963,0.0080999},
{-0.0279561,-0.0341720,0.0087024},
{-0.0278035,-0.0341516,0.0092538},
{-0.0276507,-0.0341264,0.0097891},
{-0.0274787,-0.0341425,0.0102084},
{-0.0272715,-0.0341917,0.0105920},
{-0.0271308,-0.0341963,0.0109332},
{-0.0269663,-0.0342363,0.0112115},
{-0.0268090,-0.0342792,0.0114547},
{-0.0266602,-0.0343162,0.0116891},
{-0.0265395,-0.0343322,0.0119145},
{-0.0264016,-0.0343899,0.0120537},
{-0.0263429,-0.0343680,0.0122430},
{-0.0262926,-0.0343872,0.0122971},
{-0.0262654,-0.0343705,0.0124014},
{-0.0262657,-0.0343406,0.0124835},
{-0.0262679,-0.0342962,0.0126004},
{-0.0262248,-0.0343063,0.0126623},
{-0.0261784,-0.0342819,0.0128236},
{-0.0261448,-0.0342449,0.0129899},
{-0.0261551,-0.0341859,0.0131237},
{-0.0262295,-0.0340913,0.0132209},
{-0.0263093,-0.0339968,0.0133056}
};
wOffsetVsWam = {
{-0.0023682,0.0066077,-0.0444492},
{-0.0026865,0.0067548,-0.0444090},
{-0.0030478,0.0069381,-0.0443573},
{-0.0034063,0.0071367,-0.0442997},
{-0.0038134,0.0073422,-0.0442329},
{-0.0042477,0.0075485,-0.0441586},
{-0.0047397,0.0077271,-0.0440775},
{-0.0052385,0.0078991,-0.0439905},
{-0.0058210,0.0080699,-0.0438861},
{-0.0064277,0.0082314,-0.0437713},
{-0.0070823,0.0083850,-0.0436410},
{-0.0077726,0.0085139,-0.0434983},
{-0.0085009,0.0086741,-0.0433301},
{-0.0092333,0.0088210,-0.0431502},
{-0.0099693,0.0089715,-0.0429549},
{-0.0107032,0.0091687,-0.0427361},
{-0.0114267,0.0093780,-0.0425027},
{-0.0121469,0.0096329,-0.0422452},
{-0.0128583,0.0098967,-0.0419728},
{-0.0135595,0.0101813,-0.0416831},
{-0.0142377,0.0104964,-0.0413777},
{-0.0148691,0.0108580,-0.0410611},
{-0.0154472,0.0112125,-0.0407512},
{-0.0159855,0.0116128,-0.0404303},
{-0.0164579,0.0120400,-0.0401145},
{-0.0168629,0.0125374,-0.0397927},
{-0.0172030,0.0130673,-0.0394753},
{-0.0175242,0.0136132,-0.0391482},
{-0.0177838,0.0141930,-0.0388239},
{-0.0180197,0.0147896,-0.0384910},
{-0.0181968,0.0153956,-0.0381687},
{-0.0182979,0.0160267,-0.0378594},
{-0.0183442,0.0166434,-0.0375698},
{-0.0183317,0.0172894,-0.0372830},
{-0.0182641,0.0179205,-0.0370173},
{-0.0181314,0.0185939,-0.0367494},
{-0.0179486,0.0192566,-0.0364970},
{-0.0177242,0.0199064,-0.0362573},
{-0.0174448,0.0205325,-0.0360430},
{-0.0171681,0.0211547,-0.0358153},
{-0.0167888,0.0217463,-0.0356403},
{-0.0164339,0.0222534,-0.0354924},
{-0.0160351,0.0227224,-0.0353775},
{-0.0156493,0.0231413,-0.0352786},
{-0.0152835,0.0235124,-0.0351935},
{-0.0148943,0.0238942,-0.0351031},
{-0.0145755,0.0242416,-0.0349986},
{-0.0142630,0.0246174,-0.0348647},
{-0.0139448,0.0249408,-0.0347635},
{-0.0137023,0.0252589,-0.0346300},
{-0.0134298,0.0255830,-0.0344986},
{-0.0131600,0.0258973,-0.0343678},
{-0.0128422,0.0262071,-0.0342530},
{-0.0126333,0.0264925,-0.0341108},
{-0.0123691,0.0267378,-0.0340161},
{-0.0121890,0.0269776,-0.0338915},
{-0.0119779,0.0271888,-0.0337979},
{-0.0117660,0.0273661,-0.0337292},
{-0.0115599,0.0275207,-0.0336746},
{-0.0113892,0.0276909,-0.0335931},
{-0.0111480,0.0278349,-0.0335550},
{-0.0109139,0.0279586,-0.0335292},
{-0.0106712,0.0280827,-0.0335036},
{-0.0104501,0.0281668,-0.0335027},
{-0.0102574,0.0282326,-0.0335068}
};
laToWrVsWam = {
{-0.2023399,-0.2203980,-0.0219837},
{-0.2017947,-0.2209545,-0.0214008},
{-0.2012485,-0.2215076,-0.0208188},
{-0.2006344,-0.2221070,-0.0203542},
{-0.1997894,-0.2229194,-0.0197778},
{-0.1989321,-0.2237427,-0.0191109},
{-0.1979734,-0.2246752,-0.0180991},
{-0.1972424,-0.2254039,-0.0169863},
{-0.1964622,-0.2261886,-0.0155337},
{-0.1956231,-0.2270167,-0.0139651},
{-0.1950700,-0.2276003,-0.0120731},
{-0.1946991,-0.2280250,-0.0098412},
{-0.1943262,-0.2284284,-0.0076031},
{-0.1939984,-0.2287728,-0.0052553},
{-0.1936482,-0.2291112,-0.0029086},
{-0.1933606,-0.2293710,-0.0007828},
{-0.1930426,-0.2296368,0.0012310},
{-0.1927824,-0.2298387,0.0030227},
{-0.1924501,-0.2300887,0.0047048},
{-0.1924085,-0.2300829,0.0063912},
{-0.1924197,-0.2300280,0.0078584},
{-0.1926312,-0.2298096,0.0089857},
{-0.1929637,-0.2294885,0.0100022},
{-0.1932489,-0.2292231,0.0105674},
{-0.1937176,-0.2288162,0.0107996},
{-0.1943950,-0.2282567,0.0104622},
{-0.1951358,-0.2276584,0.0096780},
{-0.1961052,-0.2268558,0.0088985},
{-0.1972614,-0.2258925,0.0077777},
{-0.1985176,-0.2248285,0.0065495},
{-0.2000216,-0.2235270,0.0051983},
{-0.2019833,-0.2217855,0.0037341},
{-0.2041078,-0.2198519,0.0022653},
{-0.2064456,-0.2176692,0.0005668},
{-0.2088136,-0.2153958,-0.0012483},
{-0.2113788,-0.2128554,-0.0034075},
{-0.2139625,-0.2102087,-0.0056875},
{-0.2166195,-0.2073944,-0.0079723},
{-0.2195727,-0.2041741,-0.0100376},
{-0.2220852,-0.2013039,-0.0124459},
{-0.2249959,-0.1978866,-0.0147557},
{-0.2278043,-0.1945090,-0.0164761},
{-0.2305470,-0.1910902,-0.0182373},
{-0.2331348,-0.1877711,-0.0197533},
{-0.2354395,-0.1847170,-0.0211631},
{-0.2377553,-0.1815419,-0.0226927},
{-0.2395346,-0.1789878,-0.0242187},
{-0.2411743,-0.1765225,-0.0259762},
{-0.2427883,-0.1740637,-0.0274898},
{-0.2440897,-0.1720064,-0.0288795},
{-0.2453509,-0.1699205,-0.0304956},
{-0.2465925,-0.1678263,-0.0320385},
{-0.2479093,-0.1655432,-0.0337110},
{-0.2488026,-0.1638965,-0.0351455},
{-0.2500147,-0.1617947,-0.0362643},
{-0.2508024,-0.1603091,-0.0374054},
{-0.2517400,-0.1586020,-0.0383715},
{-0.2525902,-0.1570190,-0.0392838},
{-0.2534820,-0.1553971,-0.0399825},
{-0.2540927,-0.1541506,-0.0409208},
{-0.2549238,-0.1525255,-0.0418309},
{-0.2557461,-0.1509264,-0.0426049},
{-0.2566105,-0.1492356,-0.0433566},
{-0.2574388,-0.1476590,-0.0438418},
{-0.2581838,-0.1462476,-0.0441899}
};
elToWrVsWam = {
{-0.2047081,-0.2137903,-0.0664329},
{-0.2044812,-0.2141997,-0.0658097},
{-0.2042963,-0.2145695,-0.0651761},
{-0.2040407,-0.2149703,-0.0646539},
{-0.2036028,-0.2155772,-0.0640107},
{-0.2031798,-0.2161943,-0.0632694},
{-0.2027131,-0.2169481,-0.0621767},
{-0.2024808,-0.2175048,-0.0609768},
{-0.2022832,-0.2181187,-0.0594198},
{-0.2020508,-0.2187853,-0.0577364},
{-0.2021523,-0.2192154,-0.0557141},
{-0.2024717,-0.2195111,-0.0533395},
{-0.2028272,-0.2197543,-0.0509332},
{-0.2032317,-0.2199518,-0.0484055},
{-0.2036175,-0.2201396,-0.0458636},
{-0.2040638,-0.2202023,-0.0435190},
{-0.2044693,-0.2202588,-0.0412718},
{-0.2049293,-0.2202057,-0.0392225},
{-0.2053084,-0.2201921,-0.0372680},
{-0.2059679,-0.2199015,-0.0352919},
{-0.2066575,-0.2195317,-0.0335192},
{-0.2075003,-0.2189516,-0.0320754},
{-0.2084108,-0.2182760,-0.0307491},
{-0.2092343,-0.2176102,-0.0298629},
{-0.2101754,-0.2167762,-0.0293150},
{-0.2112579,-0.2157193,-0.0293305},
{-0.2123388,-0.2145911,-0.0297973},
{-0.2136295,-0.2132426,-0.0302497},
{-0.2150452,-0.2116995,-0.0310462},
{-0.2165373,-0.2100389,-0.0319415},
{-0.2182184,-0.2081314,-0.0329704},
{-0.2202811,-0.2057588,-0.0341252},
{-0.2224520,-0.2032085,-0.0353044},
{-0.2247773,-0.2003798,-0.0367162},
{-0.2270776,-0.1974753,-0.0382657},
{-0.2295102,-0.1942614,-0.0401569},
{-0.2319110,-0.1909522,-0.0421845},
{-0.2343437,-0.1874880,-0.0442296},
{-0.2370176,-0.1836417,-0.0460806},
{-0.2392533,-0.1801492,-0.0482612},
{-0.2417847,-0.1761403,-0.0503960},
{-0.2442382,-0.1722555,-0.0519685},
{-0.2465821,-0.1683678,-0.0536148},
{-0.2487841,-0.1646298,-0.0550319},
{-0.2507229,-0.1612046,-0.0563566},
{-0.2526497,-0.1576477,-0.0577958},
{-0.2541101,-0.1547462,-0.0592173},
{-0.2554373,-0.1519051,-0.0608409},
{-0.2567331,-0.1491229,-0.0622533},
{-0.2577920,-0.1467475,-0.0635095},
{-0.2587807,-0.1443375,-0.0649941},
{-0.2597525,-0.1419290,-0.0664063},
{-0.2607515,-0.1393361,-0.0679640},
{-0.2614358,-0.1374040,-0.0692564},
{-0.2623838,-0.1350570,-0.0702804},
{-0.2629914,-0.1333314,-0.0712970},
{-0.2637179,-0.1314132,-0.0721694},
{-0.2643563,-0.1296529,-0.0730130},
{-0.2650420,-0.1278764,-0.0736571},
{-0.2654819,-0.1264596,-0.0745140},
{-0.2660718,-0.1246906,-0.0753859},
{-0.2666599,-0.1229678,-0.0761341},
{-0.2672816,-0.1211529,-0.0768602},
{-0.2678889,-0.1194923,-0.0773444},
{-0.2684412,-0.1180150,-0.0776967}
};
wrToEeVsWam = {
{-0.0001671,-0.0555124,0.0227671},
{-0.0002701,-0.0553379,0.0231871},
{-0.0003137,-0.0551923,0.0235310},
{-0.0000915,-0.0551033,0.0237406},
{-0.0000323,-0.0549806,0.0240237},
{0.0002664,-0.0548550,0.0243075},
{0.0003144,-0.0547336,0.0245791},
{0.0005558,-0.0545638,0.0249497},
{0.0007097,-0.0543511,0.0254058},
{0.0006927,-0.0541461,0.0258403},
{0.0009103,-0.0539409,0.0262593},
{0.0010517,-0.0536987,0.0267458},
{0.0011317,-0.0534749,0.0271875},
{0.0014052,-0.0532957,0.0275244},
{0.0015594,-0.0530782,0.0279334},
{0.0013401,-0.0525414,0.0289414},
{0.0015799,-0.0523190,0.0293297},
{0.0016640,-0.0519667,0.0299448},
{0.0017287,-0.0516636,0.0304613},
{0.0019465,-0.0513777,0.0309280},
{0.0020683,-0.0510829,0.0314047},
{0.0023036,-0.0508245,0.0318051},
{0.0026228,-0.0507217,0.0319442},
{0.0028938,-0.0506244,0.0320749},
{0.0031900,-0.0506501,0.0320061},
{0.0034406,-0.0507103,0.0318846},
{0.0036006,-0.0507940,0.0317333},
{0.0035439,-0.0508961,0.0315758},
{0.0034986,-0.0510013,0.0314107},
{0.0032323,-0.0510233,0.0314035},
{0.0029159,-0.0510850,0.0313341},
{0.0025089,-0.0510475,0.0314302},
{0.0019421,-0.0509238,0.0316701},
{0.0014477,-0.0509455,0.0316617},
{0.0005769,-0.0507140,0.0320586},
{-0.0000810,-0.0505929,0.0322545},
{-0.0007723,-0.0505096,0.0323757},
{-0.0018419,-0.0501992,0.0328124},
{-0.0027065,-0.0499927,0.0330666},
{-0.0038854,-0.0496229,0.0335032},
{-0.0047146,-0.0492144,0.0339959},
{-0.0060199,-0.0487533,0.0344510},
{-0.0068154,-0.0484024,0.0347959},
{-0.0074750,-0.0485205,0.0344948},
{-0.0084953,-0.0481385,0.0347925},
{-0.0091966,-0.0478724,0.0349808},
{-0.0098980,-0.0478967,0.0347554},
{-0.0105433,-0.0478330,0.0346531},
{-0.0110816,-0.0478392,0.0344762},
{-0.0116009,-0.0478462,0.0342952},
{-0.0121373,-0.0477537,0.0342385},
{-0.0125317,-0.0477833,0.0340546},
{-0.0127927,-0.0476293,0.0341731},
{-0.0133346,-0.0475480,0.0340790},
{-0.0136196,-0.0473861,0.0341916},
{-0.0140815,-0.0472728,0.0341612},
{-0.0144305,-0.0471504,0.0341848},
{-0.0147460,-0.0470757,0.0341531},
{-0.0150151,-0.0471608,0.0339176},
{-0.0153017,-0.0472385,0.0336806},
{-0.0155523,-0.0472978,0.0334820},
{-0.0157414,-0.0474662,0.0331537},
{-0.0158841,-0.0474398,0.0331235},
{-0.0160956,-0.0473313,0.0331765},
{-0.0163495,-0.0472897,0.0331116}
};
shoToElVsWam = {
{0.0259553,0.1397128,-0.5332276},
{0.0238368,0.1436266,-0.5322858},
{0.0210266,0.1478082,-0.5312585},
{0.0178909,0.1518379,-0.5302360},
{0.0141239,0.1560506,-0.5291254},
{0.0096785,0.1599216,-0.5280686},
{0.0047173,0.1637279,-0.5269686},
{-0.0006063,0.1670260,-0.5259534},
{-0.0067812,0.1705211,-0.5247872},
{-0.0134733,0.1737028,-0.5236132},
{-0.0207430,0.1766119,-0.5224012},
{-0.0287406,0.1787904,-0.5212801},
{-0.0374476,0.1810698,-0.5199388},
{-0.0465276,0.1828085,-0.5185954},
{-0.0559761,0.1842544,-0.5171479},
{-0.0659781,0.1856041,-0.5154833},
{-0.0765105,0.1864214,-0.5137297},
{-0.0872398,0.1875051,-0.5116210},
{-0.0983266,0.1882446,-0.5093337},
{-0.1096575,0.1886851,-0.5068512},
{-0.1211470,0.1890127,-0.5041058},
{-0.1328359,0.1890014,-0.5011568},
{-0.1443865,0.1883206,-0.4982097},
{-0.1562410,0.1873851,-0.4949753},
{-0.1679717,0.1859756,-0.4916539},
{-0.1797436,0.1844158,-0.4880656},
{-0.1915343,0.1823334,-0.4843492},
{-0.2034557,0.1799743,-0.4803541},
{-0.2153307,0.1771896,-0.4761949},
{-0.2271400,0.1743231,-0.4717456},
{-0.2385497,0.1711928,-0.4672388},
{-0.2497311,0.1676322,-0.4626649},
{-0.2602115,0.1640318,-0.4581578},
{-0.2704623,0.1603645,-0.4534957},
{-0.2801600,0.1564833,-0.4489414},
{-0.2896854,0.1525926,-0.4442104},
{-0.2988875,0.1483615,-0.4395226},
{-0.3075612,0.1442261,-0.4348907},
{-0.3158933,0.1399183,-0.4303014},
{-0.3236437,0.1360519,-0.4257577},
{-0.3305417,0.1321302,-0.4216738},
{-0.3369958,0.1283281,-0.4177209},
{-0.3428235,0.1244668,-0.4141317},
{-0.3481397,0.1209577,-0.4107225},
{-0.3529621,0.1176239,-0.4075627},
{-0.3576850,0.1144937,-0.4043237},
{-0.3618288,0.1118955,-0.4013532},
{-0.3660746,0.1094104,-0.3981756},
{-0.3694986,0.1074792,-0.3955301},
{-0.3729043,0.1059615,-0.3927334},
{-0.3759604,0.1045738,-0.3901834},
{-0.3789053,0.1033125,-0.3876626},
{-0.3814903,0.1021603,-0.3854263},
{-0.3838606,0.1014833,-0.3832456},
{-0.3859057,0.1010403,-0.3813039},
{-0.3873265,0.1014630,-0.3797479},
{-0.3887302,0.1016639,-0.3782569},
{-0.3896773,0.1019608,-0.3772010},
{-0.3907533,0.1020771,-0.3760547},
{-0.3917983,0.1020780,-0.3749656},
{-0.3930809,0.1012550,-0.3738447},
{-0.3942753,0.1004714,-0.3727968},
{-0.3951333,0.1002932,-0.3719354},
{-0.3954127,0.1007515,-0.3715143},
{-0.3955861,0.1012986,-0.3711809}
};
shoToLaVsWam = {
{0.0235871,0.1463205,-0.5776768},
{0.0211503,0.1503814,-0.5766948},
{0.0179788,0.1547462,-0.5756159},
{0.0144846,0.1589745,-0.5745357},
{0.0103105,0.1633928,-0.5733583},
{0.0054308,0.1674700,-0.5722271},
{-0.0000224,0.1714551,-0.5710461},
{-0.0058447,0.1749251,-0.5699438},
{-0.0126022,0.1785910,-0.5686733},
{-0.0199009,0.1819342,-0.5673846},
{-0.0278253,0.1849968,-0.5660421},
{-0.0365132,0.1873043,-0.5647784},
{-0.0459485,0.1897439,-0.5632689},
{-0.0557609,0.1916295,-0.5617456},
{-0.0659454,0.1932259,-0.5601029},
{-0.0766813,0.1947728,-0.5582194},
{-0.0879372,0.1957994,-0.5562324},
{-0.0993867,0.1971380,-0.5538662},
{-0.1111849,0.1981412,-0.5513066},
{-0.1232169,0.1988664,-0.5485344},
{-0.1353848,0.1995090,-0.5454834},
{-0.1477049,0.1998594,-0.5422179},
{-0.1598337,0.1995331,-0.5389609},
{-0.1722265,0.1989980,-0.5354056},
{-0.1844296,0.1980156,-0.5317685},
{-0.1966064,0.1969532,-0.5278583},
{-0.2087373,0.1954007,-0.5238245},
{-0.2209800,0.1935875,-0.5195023},
{-0.2331144,0.1913826,-0.5150188},
{-0.2451597,0.1891127,-0.5102366},
{-0.2567465,0.1865884,-0.5054075},
{-0.2680289,0.1836590,-0.5005243},
{-0.2785557,0.1806752,-0.4957276},
{-0.2887940,0.1776539,-0.4907788},
{-0.2984241,0.1744037,-0.4859587},
{-0.3078168,0.1711866,-0.4809598},
{-0.3168361,0.1676181,-0.4760196},
{-0.3252855,0.1641324,-0.4711480},
{-0.3333382,0.1604508,-0.4663443},
{-0.3408118,0.1572066,-0.4615730},
{-0.3473305,0.1538766,-0.4573141},
{-0.3534297,0.1505816,-0.4532133},
{-0.3588586,0.1471892,-0.4495092},
{-0.3637890,0.1440990,-0.4460011},
{-0.3682456,0.1411363,-0.4427562},
{-0.3725793,0.1383879,-0.4394268},
{-0.3764042,0.1361371,-0.4363517},
{-0.3803376,0.1340278,-0.4330403},
{-0.3834434,0.1324200,-0.4302935},
{-0.3866066,0.1312204,-0.4273634},
{-0.3893902,0.1301568,-0.4246820},
{-0.3920653,0.1292098,-0.4220304},
{-0.3943325,0.1283674,-0.4196793},
{-0.3964938,0.1279758,-0.4173564},
{-0.3982748,0.1277781,-0.4153200},
{-0.3995155,0.1284407,-0.4136394},
{-0.4007081,0.1288527,-0.4120548},
{-0.4014434,0.1293269,-0.4109301},
{-0.4023133,0.1295978,-0.4097293},
{-0.4031875,0.1297689,-0.4085587},
{-0.4042289,0.1290899,-0.4073997},
{-0.4051892,0.1284300,-0.4063260},
{-0.4058045,0.1283758,-0.4054390},
{-0.4058628,0.1289183,-0.4050170},
{-0.4058435,0.1295312,-0.4046877}
};
shoToWrVsWam = {
{-0.1787528,-0.0740775,-0.5996605},
{-0.1806444,-0.0705732,-0.5980956},
{-0.1832697,-0.0667614,-0.5964347},
{-0.1861498,-0.0631325,-0.5948899},
{-0.1894789,-0.0595265,-0.5931361},
{-0.1935012,-0.0562727,-0.5913380},
{-0.1979958,-0.0532202,-0.5891453},
{-0.2030871,-0.0504788,-0.5869302},
{-0.2090644,-0.0475976,-0.5842070},
{-0.2155241,-0.0450825,-0.5813497},
{-0.2228953,-0.0426035,-0.5781152},
{-0.2312124,-0.0407207,-0.5746196},
{-0.2402748,-0.0386845,-0.5708720},
{-0.2497593,-0.0371433,-0.5670009},
{-0.2595936,-0.0358852,-0.5630115},
{-0.2700419,-0.0345983,-0.5590022},
{-0.2809798,-0.0338374,-0.5550014},
{-0.2921691,-0.0327007,-0.5508435},
{-0.3036350,-0.0319475,-0.5466018},
{-0.3156254,-0.0312165,-0.5421432},
{-0.3278045,-0.0305190,-0.5376250},
{-0.3403362,-0.0299502,-0.5332322},
{-0.3527974,-0.0299555,-0.5289588},
{-0.3654753,-0.0302251,-0.5248382},
{-0.3781471,-0.0308006,-0.5209689},
{-0.3910015,-0.0313035,-0.5173961},
{-0.4038731,-0.0322577,-0.5141465},
{-0.4170852,-0.0332683,-0.5106038},
{-0.4303759,-0.0345099,-0.5072410},
{-0.4436773,-0.0357159,-0.5036871},
{-0.4567682,-0.0369386,-0.5002092},
{-0.4700122,-0.0381266,-0.4967902},
{-0.4826635,-0.0391768,-0.4934622},
{-0.4952396,-0.0400153,-0.4902119},
{-0.5072376,-0.0409920,-0.4872070},
{-0.5191955,-0.0416688,-0.4843673},
{-0.5307986,-0.0425907,-0.4817071},
{-0.5419050,-0.0432620,-0.4791203},
{-0.5529109,-0.0437233,-0.4763819},
{-0.5628970,-0.0440973,-0.4740189},
{-0.5723264,-0.0440100,-0.4720698},
{-0.5812340,-0.0439274,-0.4696894},
{-0.5894057,-0.0439010,-0.4677465},
{-0.5969238,-0.0436721,-0.4657544},
{-0.6036851,-0.0435807,-0.4639193},
{-0.6103346,-0.0431540,-0.4621195},
{-0.6159388,-0.0428507,-0.4605704},
{-0.6215119,-0.0424947,-0.4590165},
{-0.6262317,-0.0416437,-0.4577833},
{-0.6306963,-0.0407860,-0.4562429},
{-0.6347411,-0.0397637,-0.4551776},
{-0.6386578,-0.0386165,-0.4540689},
{-0.6422418,-0.0371758,-0.4533903},
{-0.6452964,-0.0359208,-0.4525020},
{-0.6482895,-0.0340167,-0.4515844},
{-0.6503179,-0.0318684,-0.4510448},
{-0.6524481,-0.0297493,-0.4504263},
{-0.6540336,-0.0276921,-0.4502140},
{-0.6557953,-0.0257993,-0.4497118},
{-0.6572802,-0.0243817,-0.4494795},
{-0.6591527,-0.0234356,-0.4492306},
{-0.6609353,-0.0224963,-0.4489309},
{-0.6624149,-0.0208598,-0.4487956},
{-0.6633016,-0.0187407,-0.4488588},
{-0.6640273,-0.0167165,-0.4488776}
};
shoToThVsWam = {
{-0.2188402,-0.0683169,-0.6439303},
{-0.2202013,-0.0653931,-0.6429110},
{-0.2223197,-0.0620660,-0.6417453},
{-0.2249783,-0.0589137,-0.6404372},
{-0.2281181,-0.0557016,-0.6388787},
{-0.2323305,-0.0528420,-0.6369507},
{-0.2370428,-0.0499468,-0.6345833},
{-0.2425133,-0.0474340,-0.6320556},
{-0.2488314,-0.0448632,-0.6290524},
{-0.2557822,-0.0424195,-0.6257590},
{-0.2635740,-0.0402567,-0.6221577},
{-0.2723033,-0.0386857,-0.6182934},
{-0.2817295,-0.0368037,-0.6142075},
{-0.2917344,-0.0354172,-0.6098391},
{-0.3020854,-0.0343929,-0.6053462},
{-0.3127761,-0.0336556,-0.6011080},
{-0.3242979,-0.0329710,-0.5965080},
{-0.3359906,-0.0320690,-0.5918225},
{-0.3479930,-0.0313138,-0.5869993},
{-0.3604773,-0.0307402,-0.5819939},
{-0.3731789,-0.0301217,-0.5768806},
{-0.3861992,-0.0296312,-0.5719166},
{-0.3991767,-0.0295556,-0.5670218},
{-0.4123332,-0.0296634,-0.5623084},
{-0.4255386,-0.0299974,-0.5577575},
{-0.4388960,-0.0301746,-0.5535186},
{-0.4522235,-0.0307215,-0.5496412},
{-0.4657088,-0.0311613,-0.5456938},
{-0.4792445,-0.0319892,-0.5419614},
{-0.4926729,-0.0327859,-0.5381957},
{-0.5058264,-0.0334286,-0.5345744},
{-0.5190270,-0.0342871,-0.5311822},
{-0.5315337,-0.0350906,-0.5280310},
{-0.5440313,-0.0353411,-0.5248171},
{-0.5557026,-0.0359897,-0.5222231},
{-0.5674391,-0.0362445,-0.5196254},
{-0.5787380,-0.0367524,-0.5173122},
{-0.5894958,-0.0370152,-0.5151216},
{-0.5999099,-0.0372322,-0.5131102},
{-0.6094877,-0.0371251,-0.5111766},
{-0.6186050,-0.0367893,-0.5095686},
{-0.6269116,-0.0362188,-0.5078224},
{-0.6347959,-0.0359536,-0.5061725},
{-0.6421351,-0.0347606,-0.5041799},
{-0.6484831,-0.0343432,-0.5027497},
{-0.6548397,-0.0336640,-0.5012250},
{-0.6602285,-0.0325736,-0.4997215},
{-0.6656794,-0.0315751,-0.4981316},
{-0.6702344,-0.0300726,-0.4968969},
{-0.6745438,-0.0286672,-0.4953649},
{-0.6784234,-0.0271716,-0.4943349},
{-0.6821543,-0.0256446,-0.4933090},
{-0.6856060,-0.0241114,-0.4927459},
{-0.6884187,-0.0224855,-0.4919983},
{-0.6911692,-0.0206724,-0.4913746},
{-0.6929444,-0.0182977,-0.4910300},
{-0.6949070,-0.0161257,-0.4905716},
{-0.6963094,-0.0139144,-0.4904996},
{-0.6979153,-0.0117083,-0.4900522},
{-0.6994032,-0.0098121,-0.4896465},
{-0.7011957,-0.0085553,-0.4893674},
{-0.7028414,-0.0072432,-0.4890708},
{-0.7042821,-0.0055229,-0.4889444},
{-0.7050258,-0.0033378,-0.4891309},
{-0.7056438,-0.0011634,-0.4892034}
};
shoToPiVsWam = {
{-0.2189628,-0.1090563,-0.6272219},
{-0.2203986,-0.1058239,-0.6259701},
{-0.2225486,-0.1023289,-0.6245794},
{-0.2250449,-0.0990238,-0.6231562},
{-0.2281416,-0.0956527,-0.6214221},
{-0.2321370,-0.0926810,-0.6192971},
{-0.2368143,-0.0897281,-0.6167187},
{-0.2421076,-0.0872629,-0.6138435},
{-0.2483125,-0.0846052,-0.6104754},
{-0.2552744,-0.0821155,-0.6068147},
{-0.2629063,-0.0798177,-0.6028988},
{-0.2715316,-0.0780822,-0.5986711},
{-0.2808960,-0.0761870,-0.5941844},
{-0.2906961,-0.0747989,-0.5895005},
{-0.3009349,-0.0735535,-0.5847371},
{-0.3117893,-0.0723436,-0.5797975},
{-0.3231295,-0.0716620,-0.5748181},
{-0.3347584,-0.0705490,-0.5696492},
{-0.3467062,-0.0697739,-0.5643229},
{-0.3590236,-0.0691102,-0.5588962},
{-0.3716312,-0.0683475,-0.5533802},
{-0.3844686,-0.0678125,-0.5480234},
{-0.3971982,-0.0678173,-0.5429248},
{-0.4101374,-0.0680784,-0.5379693},
{-0.4231119,-0.0685287,-0.5334094},
{-0.4362702,-0.0688773,-0.5291839},
{-0.4494661,-0.0696209,-0.5253390},
{-0.4629769,-0.0703951,-0.5213532},
{-0.4765426,-0.0713769,-0.5177033},
{-0.4901741,-0.0722312,-0.5139181},
{-0.5035598,-0.0731375,-0.5102181},
{-0.5170757,-0.0739884,-0.5067378},
{-0.5300256,-0.0746355,-0.5034376},
{-0.5429017,-0.0750906,-0.5001136},
{-0.5552525,-0.0755526,-0.4972136},
{-0.5675025,-0.0758124,-0.4943996},
{-0.5793433,-0.0763352,-0.4919404},
{-0.5909357,-0.0762602,-0.4894693},
{-0.6020326,-0.0764428,-0.4871751},
{-0.6125309,-0.0759926,-0.4849349},
{-0.6223032,-0.0753948,-0.4829010},
{-0.6316425,-0.0745326,-0.4807484},
{-0.6401437,-0.0739332,-0.4788695},
{-0.6480317,-0.0730356,-0.4769690},
{-0.6551619,-0.0721885,-0.4753966},
{-0.6620588,-0.0712426,-0.4737660},
{-0.6680070,-0.0702144,-0.4724080},
{-0.6739507,-0.0691003,-0.4709461},
{-0.6789422,-0.0676641,-0.4698059},
{-0.6836497,-0.0662229,-0.4684457},
{-0.6879432,-0.0646269,-0.4674802},
{-0.6919781,-0.0631030,-0.4666129},
{-0.6956440,-0.0614847,-0.4659313},
{-0.6988626,-0.0597261,-0.4653070},
{-0.7018289,-0.0577606,-0.4646135},
{-0.7039532,-0.0552551,-0.4643230},
{-0.7061468,-0.0528510,-0.4639451},
{-0.7077873,-0.0505569,-0.4639157},
{-0.7095967,-0.0483984,-0.4636650},
{-0.7112750,-0.0464623,-0.4635153},
{-0.7132384,-0.0451795,-0.4634412},
{-0.7150422,-0.0440331,-0.4633742},
{-0.7165695,-0.0422208,-0.4633211},
{-0.7174869,-0.0399815,-0.4634458},
{-0.7182723,-0.0376905,-0.4636276}
};
shoToEeVsWam = {
{-0.1789199,-0.1295899,-0.5768934},
{-0.1809145,-0.1259111,-0.5749085},
{-0.1835834,-0.1219537,-0.5729037},
{-0.1862414,-0.1182358,-0.5711493},
{-0.1895112,-0.1145071,-0.5691125},
{-0.1932349,-0.1111277,-0.5670305},
{-0.1976813,-0.1079538,-0.5645661},
{-0.2025313,-0.1050425,-0.5619805},
{-0.2083547,-0.1019487,-0.5588012},
{-0.2148313,-0.0992285,-0.5555093},
{-0.2219850,-0.0965444,-0.5518559},
{-0.2301606,-0.0944194,-0.5478738},
{-0.2391431,-0.0921593,-0.5436845},
{-0.2483541,-0.0904390,-0.5394765},
{-0.2580342,-0.0889634,-0.5350781},
{-0.2687017,-0.0871396,-0.5300608},
{-0.2793999,-0.0861563,-0.5256718},
{-0.2905051,-0.0846674,-0.5208987},
{-0.3019063,-0.0836111,-0.5161405},
{-0.3136789,-0.0825942,-0.5112151},
{-0.3257362,-0.0816019,-0.5062203},
{-0.3380326,-0.0807747,-0.5014270},
{-0.3501745,-0.0806771,-0.4970145},
{-0.3625816,-0.0808495,-0.4927633},
{-0.3749571,-0.0814508,-0.4889628},
{-0.3875609,-0.0820138,-0.4855115},
{-0.4002725,-0.0830518,-0.4824132},
{-0.4135413,-0.0841644,-0.4790279},
{-0.4268773,-0.0855112,-0.4758304},
{-0.4404450,-0.0867391,-0.4722836},
{-0.4538523,-0.0880235,-0.4688751},
{-0.4675032,-0.0891741,-0.4653599},
{-0.4807213,-0.0901006,-0.4617921},
{-0.4937919,-0.0909607,-0.4585502},
{-0.5066608,-0.0917060,-0.4551484},
{-0.5192766,-0.0922617,-0.4521128},
{-0.5315709,-0.0931002,-0.4493314},
{-0.5437469,-0.0934611,-0.4463079},
{-0.5556173,-0.0937161,-0.4433153},
{-0.5667824,-0.0937202,-0.4405156},
{-0.5770410,-0.0932244,-0.4380739},
{-0.5872539,-0.0926807,-0.4352384},
{-0.5962210,-0.0923034,-0.4329505},
{-0.6043987,-0.0921925,-0.4312596},
{-0.6121804,-0.0917192,-0.4291267},
{-0.6195313,-0.0910264,-0.4271388},
{-0.6258368,-0.0907474,-0.4258150},
{-0.6320552,-0.0903278,-0.4243634},
{-0.6373133,-0.0894829,-0.4233072},
{-0.6422972,-0.0886322,-0.4219477},
{-0.6468784,-0.0875174,-0.4209391},
{-0.6511895,-0.0863998,-0.4200144},
{-0.6550345,-0.0848051,-0.4192172},
{-0.6586310,-0.0834687,-0.4184230},
{-0.6619090,-0.0814028,-0.4173928},
{-0.6643993,-0.0791412,-0.4168836},
{-0.6668786,-0.0768997,-0.4162415},
{-0.6687796,-0.0747678,-0.4160609},
{-0.6708104,-0.0729601,-0.4157941},
{-0.6725819,-0.0716202,-0.4157990},
{-0.6747050,-0.0707334,-0.4157487},
{-0.6766766,-0.0699626,-0.4157772},
{-0.6782990,-0.0682995,-0.4156722},
{-0.6793972,-0.0660720,-0.4156823},
{-0.6803768,-0.0640062,-0.4157660}
};
xyzEulersCh = {
{0.1042258,-2.9725803,-0.1690853},
{0.1019957,-2.9625760,-0.1696178},
{0.1049906,-2.9604553,-0.1712126},
{0.1029953,-2.9499653,-0.1721232},
{0.1065935,-2.9486577,-0.1750017},
{0.1063623,-2.9420959,-0.1778255},
{0.1102805,-2.9398414,-0.1807038},
{0.1118057,-2.9376770,-0.1845163},
{0.1157817,-2.9350735,-0.1869072},
{0.1173459,-2.9292267,-0.1900263},
{0.1212137,-2.9264802,-0.1927805},
{0.1251874,-2.9236228,-0.1955300},
{0.1289189,-2.9191739,-0.1978282},
{0.1323196,-2.9131588,-0.2007250},
{0.1372659,-2.9096053,-0.2037812},
{0.1427174,-2.9103533,-0.2048887},
{0.1475266,-2.9052196,-0.2062617},
{0.1534961,-2.9026428,-0.2087568},
{0.1593790,-2.9010008,-0.2089737},
{0.1649382,-2.9000257,-0.2111281},
{0.1725920,-2.8915310,-0.2115527},
{0.1848825,-2.8827289,-0.2136747},
{0.1855145,-2.8691072,-0.2151980},
{0.1922213,-2.8628095,-0.2162487},
{0.1987561,-2.8579536,-0.2163503},
{0.2046816,-2.8506047,-0.2174409},
{0.2092559,-2.8349244,-0.2189480},
{0.2198986,-2.8443562,-0.2179989},
{0.2270483,-2.8355819,-0.2188266},
{0.2366504,-2.8314870,-0.2182696},
{0.2474213,-2.8264762,-0.2179480},
{0.2583327,-2.8234085,-0.2169978},
{0.2705734,-2.8182183,-0.2166699},
{0.2830741,-2.8163537,-0.2147248},
{0.2954702,-2.8156038,-0.2133372},
{0.3103576,-2.8166960,-0.2111416},
{0.3257757,-2.8172560,-0.2092328},
{0.3409564,-2.8193918,-0.2073304},
{0.3574199,-2.8207595,-0.2043546},
{0.3739437,-2.8241604,-0.2021727},
{0.3911060,-2.8251279,-0.1992944},
{0.4082295,-2.8271341,-0.1972324},
{0.4255035,-2.8262921,-0.1940969},
{0.4438672,-2.8253938,-0.1906754},
{0.4622784,-2.8242586,-0.1876392},
{0.4807284,-2.8270725,-0.1833156},
{0.4976919,-2.8232644,-0.1793861},
{0.5145213,-2.8217695,-0.1749380},
{0.5315260,-2.8249792,-0.1702276},
{0.5499377,-2.8249365,-0.1669508},
{0.5685330,-2.8287886,-0.1634952},
{0.5864742,-2.8388179,-0.1592785},
{0.6023713,-2.8397580,-0.1555093},
{0.6227449,-2.8469376,-0.1523058},
{0.6402630,-2.8538612,-0.1479800},
{0.6160411,-2.7838438,-0.1561445},
{0.5982157,-2.7282514,-0.1630848},
{0.5816896,-2.6766855,-0.1708444},
{0.5648209,-2.6289079,-0.1781803},
{0.5462269,-2.5855588,-0.1869756},
{0.5264053,-2.5321073,-0.1967622},
{0.5181935,-2.4473249,-0.2047648},
{0.5073742,-2.3686491,-0.2144046},
{0.4960511,-2.2968848,-0.2259769},
{0.4837987,-2.2281077,-0.2385315}
};
xyzEulersChInDeg = {
{5.9716966,-170.3163067,-9.6878721},
{5.8439246,-169.7431007,-9.7183817},
{6.0155208,-169.6215961,-9.8097598},
{5.9011964,-169.0205589,-9.8619318},
{6.1073597,-168.9456399,-10.0268574},
{6.0941114,-168.5696754,-10.1886525},
{6.3186054,-168.4405057,-10.3535670},
{6.4059923,-168.3164920,-10.5720034},
{6.6338004,-168.1673214,-10.7089915},
{6.7234235,-167.8323252,-10.8877042},
{6.9450349,-167.6749671,-11.0455083},
{7.1727125,-167.5112459,-11.2030428},
{7.3865104,-167.2563440,-11.3347236},
{7.5813537,-166.9117041,-11.5006952},
{7.8647593,-166.7081021,-11.6758050},
{8.1771070,-166.7509633,-11.7392570},
{8.4526506,-166.4568226,-11.8179234},
{8.7946792,-166.3091836,-11.9608816},
{9.1317453,-166.2151007,-11.9733092},
{9.4502609,-166.1592328,-12.0967500},
{9.8887923,-165.6725254,-12.1210757},
{10.5929844,-165.1681999,-12.2426601},
{10.6291980,-164.3877317,-12.3299360},
{11.0134708,-164.0269026,-12.3901387},
{11.3878879,-163.7486786,-12.3959582},
{11.7273942,-163.3276193,-12.4584445},
{11.9894816,-162.4292019,-12.5447971},
{12.5992641,-162.9696079,-12.4904176},
{13.0089073,-162.4668733,-12.5378432},
{13.5590702,-162.2322551,-12.5059246},
{14.1761981,-161.9451567,-12.4875030},
{14.8013736,-161.7693893,-12.4330604},
{15.5027125,-161.4720138,-12.4142684},
{16.2189527,-161.3651792,-12.3028242},
{16.9291933,-161.3222162,-12.2233192},
{17.7821831,-161.3847904,-12.0975226},
{18.6655743,-161.4168800,-11.9881573},
{19.5353602,-161.5392533,-11.8791580},
{20.4786519,-161.6176137,-11.7086569},
{21.4253954,-161.8124722,-11.5836424},
{22.4087226,-161.8679066,-11.4187303},
{23.3898289,-161.9828509,-11.3005851},
{24.3795539,-161.9346079,-11.1209335},
{25.4317166,-161.8831396,-10.9248974},
{26.4866012,-161.8181007,-10.7509367},
{27.5437090,-161.9793241,-10.5032080},
{28.5156466,-161.7611358,-10.2780688},
{29.4799008,-161.6754857,-10.0232111},
{30.4541977,-161.8593850,-9.7533208},
{31.5091094,-161.8569395,-9.5655775},
{32.5745399,-162.0776491,-9.3675870},
{33.6024976,-162.6522857,-9.1259884},
{34.5133358,-162.7061504,-8.9100289},
{35.6806537,-163.1175073,-8.7264795},
{36.6843658,-163.5142035,-8.4786308},
{35.2965540,-159.5025013,-8.9464195},
{34.2752322,-156.3172906,-9.3440683},
{33.3283590,-153.3627834,-9.7886607},
{32.3618564,-150.6253264,-10.2089792},
{31.2964954,-148.1416092,-10.7129117},
{30.1608032,-145.0790630,-11.2736450},
{29.6903001,-140.2213897,-11.7321614},
{29.0704023,-135.7135943,-12.2844759},
{28.4216339,-131.6018057,-12.9475235},
{27.7196227,-127.6611699,-13.6668506}
};
$label = ("Spine");
setKeyframe -attribute "rotateZ" -t 3.8900000sec -value -0.1690853 $label;
setKeyframe -attribute "rotateZ" -t 3.9000000sec -value -0.1696178 $label;
setKeyframe -attribute "rotateZ" -t 3.9100000sec -value -0.1712126 $label;
setKeyframe -attribute "rotateZ" -t 3.9200000sec -value -0.1721232 $label;
setKeyframe -attribute "rotateZ" -t 3.9300000sec -value -0.1750017 $label;
setKeyframe -attribute "rotateZ" -t 3.9400000sec -value -0.1778255 $label;
setKeyframe -attribute "rotateZ" -t 3.9500000sec -value -0.1807038 $label;
setKeyframe -attribute "rotateZ" -t 3.9600000sec -value -0.1845163 $label;
setKeyframe -attribute "rotateZ" -t 3.9700000sec -value -0.1869072 $label;
setKeyframe -attribute "rotateZ" -t 3.9800000sec -value -0.1900263 $label;
setKeyframe -attribute "rotateZ" -t 3.9900000sec -value -0.1927805 $label;
setKeyframe -attribute "rotateZ" -t 4.0000000sec -value -0.1955300 $label;
setKeyframe -attribute "rotateZ" -t 4.0100000sec -value -0.1978282 $label;
setKeyframe -attribute "rotateZ" -t 4.0200000sec -value -0.2007250 $label;
setKeyframe -attribute "rotateZ" -t 4.0300000sec -value -0.2037812 $label;
setKeyframe -attribute "rotateZ" -t 4.0400000sec -value -0.2048887 $label;
setKeyframe -attribute "rotateZ" -t 4.0500000sec -value -0.2062617 $label;
setKeyframe -attribute "rotateZ" -t 4.0600000sec -value -0.2087568 $label;
setKeyframe -attribute "rotateZ" -t 4.0700000sec -value -0.2089737 $label;
setKeyframe -attribute "rotateZ" -t 4.0800000sec -value -0.2111281 $label;
setKeyframe -attribute "rotateZ" -t 4.0900000sec -value -0.2115527 $label;
setKeyframe -attribute "rotateZ" -t 4.1000000sec -value -0.2136747 $label;
setKeyframe -attribute "rotateZ" -t 4.1100000sec -value -0.2151980 $label;
setKeyframe -attribute "rotateZ" -t 4.1200000sec -value -0.2162487 $label;
setKeyframe -attribute "rotateZ" -t 4.1300000sec -value -0.2163503 $label;
setKeyframe -attribute "rotateZ" -t 4.1400000sec -value -0.2174409 $label;
setKeyframe -attribute "rotateZ" -t 4.1500000sec -value -0.2189480 $label;
setKeyframe -attribute "rotateZ" -t 4.1600000sec -value -0.2179989 $label;
setKeyframe -attribute "rotateZ" -t 4.1700000sec -value -0.2188266 $label;
setKeyframe -attribute "rotateZ" -t 4.1800000sec -value -0.2182696 $label;
setKeyframe -attribute "rotateZ" -t 4.1900000sec -value -0.2179480 $label;
setKeyframe -attribute "rotateZ" -t 4.2000000sec -value -0.2169978 $label;
setKeyframe -attribute "rotateZ" -t 4.2100000sec -value -0.2166699 $label;
setKeyframe -attribute "rotateZ" -t 4.2200000sec -value -0.2147248 $label;
setKeyframe -attribute "rotateZ" -t 4.2300000sec -value -0.2133372 $label;
setKeyframe -attribute "rotateZ" -t 4.2400000sec -value -0.2111416 $label;
setKeyframe -attribute "rotateZ" -t 4.2500000sec -value -0.2092328 $label;
setKeyframe -attribute "rotateZ" -t 4.2600000sec -value -0.2073304 $label;
setKeyframe -attribute "rotateZ" -t 4.2700000sec -value -0.2043546 $label;
setKeyframe -attribute "rotateZ" -t 4.2800000sec -value -0.2021727 $label;
setKeyframe -attribute "rotateZ" -t 4.2900000sec -value -0.1992944 $label;
setKeyframe -attribute "rotateZ" -t 4.3000000sec -value -0.1972324 $label;
setKeyframe -attribute "rotateZ" -t 4.3100000sec -value -0.1940969 $label;
setKeyframe -attribute "rotateZ" -t 4.3200000sec -value -0.1906754 $label;
setKeyframe -attribute "rotateZ" -t 4.3300000sec -value -0.1876392 $label;
setKeyframe -attribute "rotateZ" -t 4.3400000sec -value -0.1833156 $label;
setKeyframe -attribute "rotateZ" -t 4.3500000sec -value -0.1793861 $label;
setKeyframe -attribute "rotateZ" -t 4.3600000sec -value -0.1749380 $label;
setKeyframe -attribute "rotateZ" -t 4.3700000sec -value -0.1702276 $label;
setKeyframe -attribute "rotateZ" -t 4.3800000sec -value -0.1669508 $label;
setKeyframe -attribute "rotateZ" -t 4.3900000sec -value -0.1634952 $label;
setKeyframe -attribute "rotateZ" -t 4.4000000sec -value -0.1592785 $label;
setKeyframe -attribute "rotateZ" -t 4.4100000sec -value -0.1555093 $label;
setKeyframe -attribute "rotateZ" -t 4.4200000sec -value -0.1523058 $label;
setKeyframe -attribute "rotateZ" -t 4.4300000sec -value -0.1479800 $label;
setKeyframe -attribute "rotateZ" -t 4.4400000sec -value -0.1561445 $label;
setKeyframe -attribute "rotateZ" -t 4.4500000sec -value -0.1630848 $label;
setKeyframe -attribute "rotateZ" -t 4.4600000sec -value -0.1708444 $label;
setKeyframe -attribute "rotateZ" -t 4.4700000sec -value -0.1781803 $label;
setKeyframe -attribute "rotateZ" -t 4.4800000sec -value -0.1869756 $label;
setKeyframe -attribute "rotateZ" -t 4.4900000sec -value -0.1967622 $label;
setKeyframe -attribute "rotateZ" -t 4.5000000sec -value -0.2047648 $label;
setKeyframe -attribute "rotateZ" -t 4.5100000sec -value -0.2144046 $label;
setKeyframe -attribute "rotateZ" -t 4.5200000sec -value -0.2259769 $label;
setKeyframe -attribute "rotateZ" -t 4.5300000sec -value -0.2385315 $label;
setKeyframe -attribute "rotateX" -t 3.8900000sec -value 0.1042258 $label;
setKeyframe -attribute "rotateX" -t 3.9000000sec -value 0.1019957 $label;
setKeyframe -attribute "rotateX" -t 3.9100000sec -value 0.1049906 $label;
setKeyframe -attribute "rotateX" -t 3.9200000sec -value 0.1029953 $label;
setKeyframe -attribute "rotateX" -t 3.9300000sec -value 0.1065935 $label;
setKeyframe -attribute "rotateX" -t 3.9400000sec -value 0.1063623 $label;
setKeyframe -attribute "rotateX" -t 3.9500000sec -value 0.1102805 $label;
setKeyframe -attribute "rotateX" -t 3.9600000sec -value 0.1118057 $label;
setKeyframe -attribute "rotateX" -t 3.9700000sec -value 0.1157817 $label;
setKeyframe -attribute "rotateX" -t 3.9800000sec -value 0.1173459 $label;
setKeyframe -attribute "rotateX" -t 3.9900000sec -value 0.1212137 $label;
setKeyframe -attribute "rotateX" -t 4.0000000sec -value 0.1251874 $label;
setKeyframe -attribute "rotateX" -t 4.0100000sec -value 0.1289189 $label;
setKeyframe -attribute "rotateX" -t 4.0200000sec -value 0.1323196 $label;
setKeyframe -attribute "rotateX" -t 4.0300000sec -value 0.1372659 $label;
setKeyframe -attribute "rotateX" -t 4.0400000sec -value 0.1427174 $label;
setKeyframe -attribute "rotateX" -t 4.0500000sec -value 0.1475266 $label;
setKeyframe -attribute "rotateX" -t 4.0600000sec -value 0.1534961 $label;
setKeyframe -attribute "rotateX" -t 4.0700000sec -value 0.1593790 $label;
setKeyframe -attribute "rotateX" -t 4.0800000sec -value 0.1649382 $label;
setKeyframe -attribute "rotateX" -t 4.0900000sec -value 0.1725920 $label;
setKeyframe -attribute "rotateX" -t 4.1000000sec -value 0.1848825 $label;
setKeyframe -attribute "rotateX" -t 4.1100000sec -value 0.1855145 $label;
setKeyframe -attribute "rotateX" -t 4.1200000sec -value 0.1922213 $label;
setKeyframe -attribute "rotateX" -t 4.1300000sec -value 0.1987561 $label;
setKeyframe -attribute "rotateX" -t 4.1400000sec -value 0.2046816 $label;
setKeyframe -attribute "rotateX" -t 4.1500000sec -value 0.2092559 $label;
setKeyframe -attribute "rotateX" -t 4.1600000sec -value 0.2198986 $label;
setKeyframe -attribute "rotateX" -t 4.1700000sec -value 0.2270483 $label;
setKeyframe -attribute "rotateX" -t 4.1800000sec -value 0.2366504 $label;
setKeyframe -attribute "rotateX" -t 4.1900000sec -value 0.2474213 $label;
setKeyframe -attribute "rotateX" -t 4.2000000sec -value 0.2583327 $label;
setKeyframe -attribute "rotateX" -t 4.2100000sec -value 0.2705734 $label;
setKeyframe -attribute "rotateX" -t 4.2200000sec -value 0.2830741 $label;
setKeyframe -attribute "rotateX" -t 4.2300000sec -value 0.2954702 $label;
setKeyframe -attribute "rotateX" -t 4.2400000sec -value 0.3103576 $label;
setKeyframe -attribute "rotateX" -t 4.2500000sec -value 0.3257757 $label;
setKeyframe -attribute "rotateX" -t 4.2600000sec -value 0.3409564 $label;
setKeyframe -attribute "rotateX" -t 4.2700000sec -value 0.3574199 $label;
setKeyframe -attribute "rotateX" -t 4.2800000sec -value 0.3739437 $label;
setKeyframe -attribute "rotateX" -t 4.2900000sec -value 0.3911060 $label;
setKeyframe -attribute "rotateX" -t 4.3000000sec -value 0.4082295 $label;
setKeyframe -attribute "rotateX" -t 4.3100000sec -value 0.4255035 $label;
setKeyframe -attribute "rotateX" -t 4.3200000sec -value 0.4438672 $label;
setKeyframe -attribute "rotateX" -t 4.3300000sec -value 0.4622784 $label;
setKeyframe -attribute "rotateX" -t 4.3400000sec -value 0.4807284 $label;
setKeyframe -attribute "rotateX" -t 4.3500000sec -value 0.4976919 $label;
setKeyframe -attribute "rotateX" -t 4.3600000sec -value 0.5145213 $label;
setKeyframe -attribute "rotateX" -t 4.3700000sec -value 0.5315260 $label;
setKeyframe -attribute "rotateX" -t 4.3800000sec -value 0.5499377 $label;
setKeyframe -attribute "rotateX" -t 4.3900000sec -value 0.5685330 $label;
setKeyframe -attribute "rotateX" -t 4.4000000sec -value 0.5864742 $label;
setKeyframe -attribute "rotateX" -t 4.4100000sec -value 0.6023713 $label;
setKeyframe -attribute "rotateX" -t 4.4200000sec -value 0.6227449 $label;
setKeyframe -attribute "rotateX" -t 4.4300000sec -value 0.6402630 $label;
setKeyframe -attribute "rotateX" -t 4.4400000sec -value 0.6160411 $label;
setKeyframe -attribute "rotateX" -t 4.4500000sec -value 0.5982157 $label;
setKeyframe -attribute "rotateX" -t 4.4600000sec -value 0.5816896 $label;
setKeyframe -attribute "rotateX" -t 4.4700000sec -value 0.5648209 $label;
setKeyframe -attribute "rotateX" -t 4.4800000sec -value 0.5462269 $label;
setKeyframe -attribute "rotateX" -t 4.4900000sec -value 0.5264053 $label;
setKeyframe -attribute "rotateX" -t 4.5000000sec -value 0.5181935 $label;
setKeyframe -attribute "rotateX" -t 4.5100000sec -value 0.5073742 $label;
setKeyframe -attribute "rotateX" -t 4.5200000sec -value 0.4960511 $label;
setKeyframe -attribute "rotateX" -t 4.5300000sec -value 0.4837987 $label;
setKeyframe -attribute "rotateY" -t 3.8900000sec -value -2.9725803 $label;
setKeyframe -attribute "rotateY" -t 3.9000000sec -value -2.9625760 $label;
setKeyframe -attribute "rotateY" -t 3.9100000sec -value -2.9604553 $label;
setKeyframe -attribute "rotateY" -t 3.9200000sec -value -2.9499653 $label;
setKeyframe -attribute "rotateY" -t 3.9300000sec -value -2.9486577 $label;
setKeyframe -attribute "rotateY" -t 3.9400000sec -value -2.9420959 $label;
setKeyframe -attribute "rotateY" -t 3.9500000sec -value -2.9398414 $label;
setKeyframe -attribute "rotateY" -t 3.9600000sec -value -2.9376770 $label;
setKeyframe -attribute "rotateY" -t 3.9700000sec -value -2.9350735 $label;
setKeyframe -attribute "rotateY" -t 3.9800000sec -value -2.9292267 $label;
setKeyframe -attribute "rotateY" -t 3.9900000sec -value -2.9264802 $label;
setKeyframe -attribute "rotateY" -t 4.0000000sec -value -2.9236228 $label;
setKeyframe -attribute "rotateY" -t 4.0100000sec -value -2.9191739 $label;
setKeyframe -attribute "rotateY" -t 4.0200000sec -value -2.9131588 $label;
setKeyframe -attribute "rotateY" -t 4.0300000sec -value -2.9096053 $label;
setKeyframe -attribute "rotateY" -t 4.0400000sec -value -2.9103533 $label;
setKeyframe -attribute "rotateY" -t 4.0500000sec -value -2.9052196 $label;
setKeyframe -attribute "rotateY" -t 4.0600000sec -value -2.9026428 $label;
setKeyframe -attribute "rotateY" -t 4.0700000sec -value -2.9010008 $label;
setKeyframe -attribute "rotateY" -t 4.0800000sec -value -2.9000257 $label;
setKeyframe -attribute "rotateY" -t 4.0900000sec -value -2.8915310 $label;
setKeyframe -attribute "rotateY" -t 4.1000000sec -value -2.8827289 $label;
setKeyframe -attribute "rotateY" -t 4.1100000sec -value -2.8691072 $label;
setKeyframe -attribute "rotateY" -t 4.1200000sec -value -2.8628095 $label;
setKeyframe -attribute "rotateY" -t 4.1300000sec -value -2.8579536 $label;
setKeyframe -attribute "rotateY" -t 4.1400000sec -value -2.8506047 $label;
setKeyframe -attribute "rotateY" -t 4.1500000sec -value -2.8349244 $label;
setKeyframe -attribute "rotateY" -t 4.1600000sec -value -2.8443562 $label;
setKeyframe -attribute "rotateY" -t 4.1700000sec -value -2.8355819 $label;
setKeyframe -attribute "rotateY" -t 4.1800000sec -value -2.8314870 $label;
setKeyframe -attribute "rotateY" -t 4.1900000sec -value -2.8264762 $label;
setKeyframe -attribute "rotateY" -t 4.2000000sec -value -2.8234085 $label;
setKeyframe -attribute "rotateY" -t 4.2100000sec -value -2.8182183 $label;
setKeyframe -attribute "rotateY" -t 4.2200000sec -value -2.8163537 $label;
setKeyframe -attribute "rotateY" -t 4.2300000sec -value -2.8156038 $label;
setKeyframe -attribute "rotateY" -t 4.2400000sec -value -2.8166960 $label;
setKeyframe -attribute "rotateY" -t 4.2500000sec -value -2.8172560 $label;
setKeyframe -attribute "rotateY" -t 4.2600000sec -value -2.8193918 $label;
setKeyframe -attribute "rotateY" -t 4.2700000sec -value -2.8207595 $label;
setKeyframe -attribute "rotateY" -t 4.2800000sec -value -2.8241604 $label;
setKeyframe -attribute "rotateY" -t 4.2900000sec -value -2.8251279 $label;
setKeyframe -attribute "rotateY" -t 4.3000000sec -value -2.8271341 $label;
setKeyframe -attribute "rotateY" -t 4.3100000sec -value -2.8262921 $label;
setKeyframe -attribute "rotateY" -t 4.3200000sec -value -2.8253938 $label;
setKeyframe -attribute "rotateY" -t 4.3300000sec -value -2.8242586 $label;
setKeyframe -attribute "rotateY" -t 4.3400000sec -value -2.8270725 $label;
setKeyframe -attribute "rotateY" -t 4.3500000sec -value -2.8232644 $label;
setKeyframe -attribute "rotateY" -t 4.3600000sec -value -2.8217695 $label;
setKeyframe -attribute "rotateY" -t 4.3700000sec -value -2.8249792 $label;
setKeyframe -attribute "rotateY" -t 4.3800000sec -value -2.8249365 $label;
setKeyframe -attribute "rotateY" -t 4.3900000sec -value -2.8287886 $label;
setKeyframe -attribute "rotateY" -t 4.4000000sec -value -2.8388179 $label;
setKeyframe -attribute "rotateY" -t 4.4100000sec -value -2.8397580 $label;
setKeyframe -attribute "rotateY" -t 4.4200000sec -value -2.8469376 $label;
setKeyframe -attribute "rotateY" -t 4.4300000sec -value -2.8538612 $label;
setKeyframe -attribute "rotateY" -t 4.4400000sec -value -2.7838438 $label;
setKeyframe -attribute "rotateY" -t 4.4500000sec -value -2.7282514 $label;
setKeyframe -attribute "rotateY" -t 4.4600000sec -value -2.6766855 $label;
setKeyframe -attribute "rotateY" -t 4.4700000sec -value -2.6289079 $label;
setKeyframe -attribute "rotateY" -t 4.4800000sec -value -2.5855588 $label;
setKeyframe -attribute "rotateY" -t 4.4900000sec -value -2.5321073 $label;
setKeyframe -attribute "rotateY" -t 4.5000000sec -value -2.4473249 $label;
setKeyframe -attribute "rotateY" -t 4.5100000sec -value -2.3686491 $label;
setKeyframe -attribute "rotateY" -t 4.5200000sec -value -2.2968848 $label;
setKeyframe -attribute "rotateY" -t 4.5300000sec -value -2.2281077 $label;
xyzEulersChF3Pts = {
{1.7389054,-3.0105114,1.4215648},
{1.7391255,-3.0109620,1.4113621},
{1.7407232,-3.0074005,1.4099828},
{1.7412847,-3.0074491,1.3993871},
{1.7441930,-3.0031901,1.3991042},
{1.7467932,-3.0017927,1.3929649},
{1.7496816,-2.9970297,1.3918405},
{1.7534423,-2.9944616,1.3905299},
{1.7558426,-2.9896493,1.3890475},
{1.7587873,-2.9864639,1.3840412},
{1.7615441,-2.9816384,1.3824965},
{1.7643000,-2.9766794,1.3808872},
{1.7665423,-2.9717274,1.3776092},
{1.7693076,-2.9666616,1.3728437},
{1.7723852,-2.9605102,1.3708750},
{1.7737235,-2.9550998,1.3729287},
{1.7750685,-2.9490904,1.3691114},
{1.7776937,-2.9422257,1.3682963},
{1.7780889,-2.9360913,1.3679543},
{1.7804477,-2.9300200,1.3686146},
{1.7808512,-2.9207031,1.3619528},
{1.7831785,-2.9064240,1.3563850},
{1.7840864,-2.9026443,1.3434182},
{1.7851772,-2.8945384,1.3389104},
{1.7853865,-2.8871160,1.3355670},
{1.7864311,-2.8795330,1.3298799},
{1.7873492,-2.8714047,1.3157591},
{1.7875614,-2.8632261,1.3272266},
{1.7883610,-2.8541985,1.3203631},
{1.7881905,-2.8441012,1.3183004},
{1.7883062,-2.8326152,1.3156605},
{1.7879288,-2.8215602,1.3147856},
{1.7881875,-2.8086109,1.3122990},
{1.7870337,-2.7965139,1.3126299},
{1.7865343,-2.7846050,1.3142201},
{1.7855336,-2.7708370,1.3179030},
{1.7848782,-2.7563596,1.3212578},
{1.7843312,-2.7424182,1.3261149},
{1.7827565,-2.7273123,1.3300233},
{1.7821670,-2.7123382,1.3362801},
{1.7808021,-2.6964069,1.3399018},
{1.7804042,-2.6805106,1.3449008},
{1.7787516,-2.6641519,1.3465209},
{1.7769297,-2.6467712,1.3481256},
{1.7755640,-2.6292072,1.3496413},
{1.7729663,-2.6125828,1.3543488},
{1.7703438,-2.5961377,1.3521686},
{1.7672175,-2.5803453,1.3518704},
{1.7640027,-2.5652138,1.3560743},
{1.7624925,-2.5478299,1.3581340},
{1.7609769,-2.5309117,1.3639834},
{1.7586999,-2.5157116,1.3753099},
{1.7563139,-2.5009640,1.3772052},
{1.7554705,-2.4826208,1.3867750},
{1.7528043,-2.4671903,1.3944820},
{1.7566355,-2.4789233,1.3241696},
{1.7594826,-2.4860527,1.2684033},
{1.7628605,-2.4916691,1.2171210},
{1.7651224,-2.4978087,1.1688472},
{1.7683858,-2.5052574,1.1252632},
{1.7705627,-2.5111607,1.0709265},
{1.7670218,-2.5006098,0.9844421},
{1.7631995,-2.4923215,0.9035175},
{1.7598794,-2.4840082,0.8297604},
{1.7553866,-2.4759639,0.7582710}
};
inPtsRPi = {
{-0.0952274,0.6310245,0.6678685},
{-0.1000763,0.6276168,0.6688966},
{-0.1006385,0.6271868,0.6674505},
{-0.1055175,0.6232785,0.6681824},
{-0.1056778,0.6226530,0.6662317},
{-0.1083636,0.6192689,0.6662486},
{-0.1079851,0.6182154,0.6644316},
{-0.1075507,0.6150572,0.6638966},
{-0.1060850,0.6130957,0.6620277},
{-0.1064960,0.6091481,0.6614849},
{-0.1046861,0.6061530,0.6597694},
{-0.1024804,0.6027047,0.6579987},
{-0.1006508,0.5986792,0.6562077},
{-0.0998612,0.5941335,0.6543303},
{-0.0976294,0.5900378,0.6518892},
{-0.0913537,0.5858350,0.6498504},
{-0.0884640,0.5810636,0.6474331},
{-0.0848205,0.5766557,0.6448152},
{-0.0790591,0.5718305,0.6425290},
{-0.0741416,0.5664179,0.6403111},
{-0.0724166,0.5623357,0.6362453},
{-0.0721638,0.5608367,0.6293497},
{-0.0736862,0.5522547,0.6282365},
{-0.0713080,0.5466267,0.6245505},
{-0.0677881,0.5404050,0.6212333},
{-0.0664754,0.5338178,0.6180599},
{-0.0696725,0.5266184,0.6145698},
{-0.0590949,0.5209753,0.6111614},
{-0.0589275,0.5142403,0.6073998},
{-0.0558645,0.5083436,0.6033207},
{-0.0536060,0.5029847,0.5986588},
{-0.0503311,0.4973872,0.5945458},
{-0.0488713,0.4926013,0.5897978},
{-0.0449289,0.4875098,0.5855110},
{-0.0413140,0.4823649,0.5817140},
{-0.0367213,0.4784104,0.5770723},
{-0.0330261,0.4749301,0.5722811},
{-0.0287387,0.4711639,0.5683818},
{-0.0247146,0.4683310,0.5637854},
{-0.0205063,0.4655425,0.5597217},
{-0.0172624,0.4636074,0.5554277},
{-0.0142413,0.4617916,0.5513764},
{-0.0122538,0.4605794,0.5469986},
{-0.0103637,0.4602440,0.5421507},
{-0.0091313,0.4602825,0.5371603},
{-0.0055552,0.4602814,0.5324621},
{-0.0052899,0.4605347,0.5275875},
{-0.0039374,0.4607047,0.5231511},
{-0.0005522,0.4608395,0.5188936},
{0.0001965,0.4621248,0.5136613},
{0.0025840,0.4634047,0.5086329},
{0.0078837,0.4639563,0.5042053},
{0.0088511,0.4646070,0.4999694},
{0.0117583,0.4670634,0.4941411},
{0.0152550,0.4684132,0.4895119},
{-0.0192075,0.4563110,0.4976335},
{-0.0456507,0.4449172,0.5033377},
{-0.0696038,0.4331331,0.5081256},
{-0.0904273,0.4204583,0.5128528},
{-0.1088174,0.4066423,0.5179667},
{-0.1301674,0.3919457,0.5221813},
{-0.1637733,0.3802788,0.5191237},
{-0.1936540,0.3663439,0.5170819},
{-0.2202054,0.3516612,0.5150719},
{-0.2445676,0.3361734,0.5130841}
};
inPtsRTh = {
{-0.1251604,0.6335552,0.7152515},
{-0.1304255,0.6298350,0.7160991},
{-0.1313986,0.6295543,0.7145172},
{-0.1364063,0.6251942,0.7152293},
{-0.1369095,0.6246731,0.7130291},
{-0.1399550,0.6207666,0.7128495},
{-0.1400594,0.6195626,0.7106736},
{-0.1401674,0.6161550,0.7099610},
{-0.1392546,0.6140119,0.7077274},
{-0.1402258,0.6097646,0.7066998},
{-0.1389595,0.6064726,0.7046209},
{-0.1372918,0.6028105,0.7023723},
{-0.1360377,0.5986349,0.7002965},
{-0.1357098,0.5937057,0.6981675},
{-0.1338573,0.5895521,0.6952477},
{-0.1284508,0.5852934,0.6921571},
{-0.1259818,0.5803083,0.6895126},
{-0.1229121,0.5757030,0.6861913},
{-0.1176751,0.5707260,0.6834811},
{-0.1132425,0.5650895,0.6808082},
{-0.1119601,0.5607443,0.6763203},
{-0.1121464,0.5591021,0.6689401},
{-0.1137850,0.5496809,0.6677246},
{-0.1116291,0.5438250,0.6639746},
{-0.1080852,0.5373725,0.6607003},
{-0.1066513,0.5304603,0.6574666},
{-0.1097444,0.5227354,0.6539893},
{-0.0993256,0.5178088,0.6507349},
{-0.0990664,0.5111873,0.6469227},
{-0.0961384,0.5057826,0.6427188},
{-0.0941200,0.5010753,0.6380577},
{-0.0910764,0.4960916,0.6336563},
{-0.0899465,0.4919133,0.6283296},
{-0.0862853,0.4879110,0.6239451},
{-0.0832168,0.4837090,0.6194343},
{-0.0790096,0.4808833,0.6143140},
{-0.0756864,0.4784369,0.6090378},
{-0.0718875,0.4758172,0.6041217},
{-0.0684147,0.4741781,0.5989056},
{-0.0647560,0.4725655,0.5937461},
{-0.0621062,0.4717904,0.5885227},
{-0.0597378,0.4711309,0.5832421},
{-0.0581452,0.4710249,0.5779231},
{-0.0565170,0.4719274,0.5728913},
{-0.0555479,0.4730893,0.5666641},
{-0.0520666,0.4742848,0.5610557},
{-0.0519562,0.4753488,0.5557594},
{-0.0505748,0.4764278,0.5507105},
{-0.0471332,0.4777329,0.5460145},
{-0.0463648,0.4799160,0.5402022},
{-0.0439466,0.4821881,0.5344744},
{-0.0384232,0.4840715,0.5295917},
{-0.0375270,0.4854174,0.5247239},
{-0.0344908,0.4889779,0.5181072},
{-0.0309218,0.4913437,0.5127639},
{-0.0669728,0.4757960,0.5207948},
{-0.0944449,0.4615370,0.5263143},
{-0.1192471,0.4470933,0.5309552},
{-0.1406294,0.4321141,0.5357576},
{-0.1593043,0.4161387,0.5409042},
{-0.1809717,0.3987029,0.5451682},
{-0.2151296,0.3833431,0.5420545},
{-0.2450970,0.3656734,0.5397384},
{-0.2717596,0.3475668,0.5373946},
{-0.2957943,0.3288893,0.5351061}
};
inPtsRW = {
{-0.0767888,0.6920474,0.7107823},
{-0.0817514,0.6886779,0.7125675},
{-0.0820685,0.6881797,0.7116842},
{-0.0873962,0.6842845,0.7131109},
{-0.0877046,0.6837032,0.7114332},
{-0.0913780,0.6804385,0.7117632},
{-0.0918555,0.6795779,0.7096316},
{-0.0926844,0.6765786,0.7091489},
{-0.0924195,0.6748711,0.7070621},
{-0.0945060,0.6712261,0.7059273},
{-0.0939390,0.6685646,0.7039685},
{-0.0930562,0.6654168,0.7018213},
{-0.0926274,0.6617013,0.6996344},
{-0.0934576,0.6574420,0.6973358},
{-0.0926153,0.6538468,0.6942892},
{-0.0875972,0.6498253,0.6915307},
{-0.0863874,0.6453822,0.6884260},
{-0.0843303,0.6411571,0.6848825},
{-0.0800723,0.6364526,0.6815629},
{-0.0765279,0.6311179,0.6785842},
{-0.0765902,0.6273879,0.6733830},
{-0.0781245,0.6260831,0.6651038},
{-0.0815726,0.6173041,0.6633119},
{-0.0806081,0.6116588,0.6586631},
{-0.0781839,0.6055275,0.6543410},
{-0.0780583,0.5987558,0.6500154},
{-0.0829109,0.5913782,0.6453300},
{-0.0721064,0.5859357,0.6407604},
{-0.0727435,0.5792227,0.6358232},
{-0.0700882,0.5736483,0.6304553},
{-0.0682693,0.5685226,0.6244372},
{-0.0651041,0.5632191,0.6190330},
{-0.0637731,0.5587253,0.6127914},
{-0.0598481,0.5540235,0.6070995},
{-0.0559435,0.5492621,0.6017631},
{-0.0509998,0.5456385,0.5955560},
{-0.0467759,0.5424357,0.5892255},
{-0.0418927,0.5390351,0.5833272},
{-0.0370087,0.5365025,0.5774192},
{-0.0320588,0.5339883,0.5711912},
{-0.0285502,0.5323765,0.5650659},
{-0.0247256,0.5305808,0.5588912},
{-0.0224152,0.5297347,0.5526368},
{-0.0201092,0.5295590,0.5457071},
{-0.0182571,0.5297221,0.5385732},
{-0.0139525,0.5298393,0.5320768},
{-0.0133396,0.5299744,0.5251644},
{-0.0115978,0.5300490,0.5186673},
{-0.0075433,0.5300743,0.5126279},
{-0.0062206,0.5311700,0.5055126},
{-0.0030829,0.5321931,0.4986365},
{0.0034651,0.5327032,0.4927514},
{0.0047129,0.5331689,0.4872689},
{0.0087824,0.5352981,0.4796672},
{0.0131937,0.5366244,0.4739375},
{-0.0258371,0.5243793,0.4825236},
{-0.0558385,0.5126823,0.4884529},
{-0.0830925,0.5002995,0.4934392},
{-0.1068880,0.4870308,0.4983642},
{-0.1280462,0.4724704,0.5034113},
{-0.1527385,0.4567028,0.5077074},
{-0.1914051,0.4429519,0.5037168},
{-0.2259415,0.4265651,0.5008969},
{-0.2566217,0.4094076,0.4981482},
{-0.2845753,0.3912718,0.4953109}
};
inPtsRLA = {
{-0.0773467,0.7720795,0.7998813},
{-0.0836060,0.7685383,0.8021400},
{-0.0846041,0.7684035,0.8012206},
{-0.0911472,0.7643293,0.8028152},
{-0.0921627,0.7638661,0.8011928},
{-0.0968609,0.7603988,0.8014108},
{-0.0981967,0.7597474,0.7990621},
{-0.0999305,0.7567349,0.7984428},
{-0.1006549,0.7552631,0.7957798},
{-0.1040857,0.7516007,0.7945050},
{-0.1046620,0.7492297,0.7919263},
{-0.1050650,0.7464626,0.7892026},
{-0.1060071,0.7431064,0.7864296},
{-0.1084064,0.7391842,0.7836249},
{-0.1089844,0.7358942,0.7797778},
{-0.1047243,0.7323647,0.7763899},
{-0.1047238,0.7282448,0.7725217},
{-0.1037563,0.7245932,0.7679017},
{-0.1001332,0.7204131,0.7637212},
{-0.0973900,0.7156109,0.7596430},
{-0.0986687,0.7125794,0.7531730},
{-0.1014229,0.7125318,0.7430629},
{-0.1063398,0.7039807,0.7405078},
{-0.1060476,0.6991444,0.7348345},
{-0.1039572,0.6937986,0.7293757},
{-0.1041015,0.6880127,0.7238230},
{-0.1096891,0.6808716,0.7182658},
{-0.0976863,0.6772054,0.7120803},
{-0.0985627,0.6716461,0.7053373},
{-0.0956096,0.6673978,0.6979532},
{-0.0935254,0.6637593,0.6897547},
{-0.0897987,0.6601287,0.6820553},
{-0.0881147,0.6573032,0.6732097},
{-0.0832292,0.6543377,0.6650103},
{-0.0782726,0.6513333,0.6570337},
{-0.0719026,0.6495678,0.6478888},
{-0.0662617,0.6482032,0.6382960},
{-0.0599047,0.6465048,0.6293616},
{-0.0537650,0.6457439,0.6195854},
{-0.0470388,0.6448622,0.6101648},
{-0.0416887,0.6446169,0.6001909},
{-0.0364676,0.6443733,0.5903028},
{-0.0325733,0.6445987,0.5802114},
{-0.0288012,0.6455138,0.5693265},
{-0.0256226,0.6465419,0.5584523},
{-0.0194611,0.6474315,0.5480687},
{-0.0179913,0.6482224,0.5377806},
{-0.0151043,0.6487951,0.5280140},
{-0.0093212,0.6491987,0.5186884},
{-0.0066634,0.6506376,0.5081337},
{-0.0016100,0.6518604,0.4979414},
{0.0075393,0.6523204,0.4887494},
{0.0102750,0.6526765,0.4800144},
{0.0163279,0.6546529,0.4693449},
{0.0224367,0.6555302,0.4604352},
{-0.0245928,0.6438674,0.4695348},
{-0.0608518,0.6320616,0.4755325},
{-0.0938148,0.6194977,0.4803019},
{-0.1228824,0.6056260,0.4850537},
{-0.1486093,0.5903656,0.4903216},
{-0.1791915,0.5735552,0.4944809},
{-0.2271665,0.5570521,0.4883928},
{-0.2699039,0.5375122,0.4837078},
{-0.3079106,0.5168301,0.4790537},
{-0.3426783,0.4949615,0.4746030}
};
inPtsREl = {
{-0.1206125,0.8923609,0.8825222},
{-0.1282148,0.8881375,0.8850368},
{-0.1297849,0.8878152,0.8840421},
{-0.1377852,0.8829787,0.8861402},
{-0.1393996,0.8824149,0.8844196},
{-0.1454204,0.8781431,0.8851090},
{-0.1477408,0.8770589,0.8827834},
{-0.1506101,0.8734586,0.8822069},
{-0.1525309,0.8715188,0.8796336},
{-0.1576689,0.8671056,0.8784039},
{-0.1597098,0.8641486,0.8755522},
{-0.1617526,0.8608268,0.8722889},
{-0.1645123,0.8569315,0.8690714},
{-0.1689984,0.8523143,0.8655733},
{-0.1713176,0.8485960,0.8609989},
{-0.1681802,0.8449682,0.8570194},
{-0.1698338,0.8403304,0.8524272},
{-0.1701582,0.8363555,0.8471766},
{-0.1676139,0.8318480,0.8424330},
{-0.1659294,0.8268243,0.8376202},
{-0.1687931,0.8233517,0.8299327},
{-0.1732237,0.8233544,0.8180011},
{-0.1803118,0.8137120,0.8147458},
{-0.1811542,0.8087405,0.8078693},
{-0.1798077,0.8034624,0.8013477},
{-0.1809902,0.7976747,0.7947602},
{-0.1884376,0.7905494,0.7876738},
{-0.1749236,0.7880842,0.7804022},
{-0.1764094,0.7827462,0.7724406},
{-0.1732880,0.7790790,0.7636024},
{-0.1712202,0.7763137,0.7536619},
{-0.1671659,0.7736597,0.7438821},
{-0.1654685,0.7719243,0.7326040},
{-0.1600870,0.7703655,0.7218730},
{-0.1544165,0.7687274,0.7113957},
{-0.1468810,0.7687719,0.6993793},
{-0.1399909,0.7690048,0.6868733},
{-0.1320442,0.7690375,0.6747442},
{-0.1242186,0.7698393,0.6618173},
{-0.1156565,0.7705867,0.6490587},
{-0.1089421,0.7718822,0.6354964},
{-0.1022790,0.7729910,0.6219064},
{-0.0974799,0.7740962,0.6079732},
{-0.0929321,0.7758794,0.5932484},
{-0.0889897,0.7775797,0.5785294},
{-0.0814411,0.7792657,0.5646122},
{-0.0793754,0.7802511,0.5510132},
{-0.0754360,0.7811841,0.5381542},
{-0.0682510,0.7822633,0.5259044},
{-0.0647491,0.7840948,0.5123954},
{-0.0582537,0.7859743,0.4992695},
{-0.0468012,0.7871085,0.4875759},
{-0.0428610,0.7874893,0.4762645},
{-0.0346618,0.7896863,0.4625421},
{-0.0264848,0.7906243,0.4509639},
{-0.0826928,0.7753990,0.4613067},
{-0.1258750,0.7601210,0.4675917},
{-0.1652325,0.7441177,0.4726433},
{-0.2001911,0.7268011,0.4776985},
{-0.2312108,0.7081851,0.4836555},
{-0.2676245,0.6862809,0.4881272},
{-0.3240706,0.6618016,0.4800486},
{-0.3743085,0.6342733,0.4736275},
{-0.4187023,0.6059414,0.4673203},
{-0.4591748,0.5762002,0.4611042}
};
inPtsRUA = {
{0.0096391,0.9095064,0.8780088},
{0.0016997,0.9071864,0.8796447},
{0.0000399,0.9078230,0.8778480},
{-0.0083508,0.9052091,0.8788753},
{-0.0101243,0.9055399,0.8763860},
{-0.0164828,0.9031265,0.8762358},
{-0.0191301,0.9032152,0.8731751},
{-0.0222867,0.9010707,0.8720601},
{-0.0246346,0.9007275,0.8687043},
{-0.0304839,0.8985784,0.8669038},
{-0.0330931,0.8977265,0.8634008},
{-0.0358483,0.8965115,0.8596390},
{-0.0394287,0.8951065,0.8558018},
{-0.0447288,0.8932840,0.8517279},
{-0.0479931,0.8919757,0.8467268},
{-0.0456567,0.8903193,0.8420653},
{-0.0485368,0.8885376,0.8367891},
{-0.0500338,0.8871201,0.8308247},
{-0.0487016,0.8850839,0.8252617},
{-0.0482822,0.8824524,0.8199163},
{-0.0528566,0.8821193,0.8114063},
{-0.0591753,0.8850524,0.7988061},
{-0.0685229,0.8793470,0.7950772},
{-0.0712903,0.8771975,0.7875061},
{-0.0718916,0.8746331,0.7804538},
{-0.0750830,0.8715667,0.7731526},
{-0.0855454,0.8679397,0.7653972},
{-0.0729233,0.8664406,0.7573445},
{-0.0767477,0.8636931,0.7485210},
{-0.0756413,0.8620933,0.7387958},
{-0.0755575,0.8611983,0.7278385},
{-0.0733502,0.8600818,0.7172140},
{-0.0735082,0.8599969,0.7049260},
{-0.0695882,0.8597416,0.6934251},
{-0.0652219,0.8590216,0.6819903},
{-0.0586896,0.8596876,0.6689541},
{-0.0529342,0.8606147,0.6553195},
{-0.0459109,0.8609564,0.6421826},
{-0.0390520,0.8618440,0.6277873},
{-0.0310707,0.8624630,0.6139354},
{-0.0250580,0.8635298,0.5990239},
{-0.0188264,0.8643725,0.5844158},
{-0.0145629,0.8654715,0.5693361},
{-0.0103210,0.8670324,0.5536248},
{-0.0067923,0.8686186,0.5377344},
{0.0007396,0.8696337,0.5225226},
{0.0021877,0.8704155,0.5076883},
{0.0055891,0.8707702,0.4933157},
{0.0127781,0.8708062,0.4795868},
{0.0162530,0.8716609,0.4644460},
{0.0228462,0.8721539,0.4498393},
{0.0347507,0.8717363,0.4367775},
{0.0384419,0.8712797,0.4242009},
{0.0471872,0.8718908,0.4088990},
{0.0558669,0.8713036,0.3958059},
{-0.0065626,0.8621861,0.4068489},
{-0.0550266,0.8514888,0.4136487},
{-0.0992593,0.8392236,0.4189997},
{-0.1390714,0.8252330,0.4246012},
{-0.1746371,0.8096666,0.4312261},
{-0.2172150,0.7912454,0.4362115},
{-0.2827940,0.7701415,0.4270782},
{-0.3417646,0.7450295,0.4198003},
{-0.3938745,0.7182261,0.4126752},
{-0.4415292,0.6893098,0.4055646}
};
inPtsRSh = {
{0.2177124,0.9016904,0.8372041},
{0.2089310,0.9018683,0.8372248},
{0.2064425,0.9032245,0.8341172},
{0.1972230,0.9034743,0.8336840},
{0.1945811,0.9047876,0.8301877},
{0.1873417,0.9048989,0.8290403},
{0.1840178,0.9066543,0.8250376},
{0.1799559,0.9063357,0.8233223},
{0.1766271,0.9079656,0.8190074},
{0.1698528,0.9087040,0.8162911},
{0.1662132,0.9099463,0.8120354},
{0.1623834,0.9112663,0.8077436},
{0.1576554,0.9128749,0.8031175},
{0.1511024,0.9144942,0.7986008},
{0.1467103,0.9162395,0.7931845},
{0.1476761,0.9169666,0.7877444},
{0.1433003,0.9188078,0.7818529},
{0.1404790,0.9204234,0.7753832},
{0.1402552,0.9214179,0.7687828},
{0.1392057,0.9218298,0.7628004},
{0.1328071,0.9256873,0.7531109},
{0.1248978,0.9325032,0.7395827},
{0.1130693,0.9324449,0.7350352},
{0.1082890,0.9343514,0.7266536},
{0.1055969,0.9354734,0.7185845},
{0.0998412,0.9367250,0.7106423},
{0.0863430,0.9388688,0.7022821},
{0.0974668,0.9386315,0.6934846},
{0.0908213,0.9405268,0.6841705},
{0.0891952,0.9423994,0.6735439},
{0.0865581,0.9450519,0.6618045},
{0.0860387,0.9471623,0.6503137},
{0.0831283,0.9501170,0.6373099},
{0.0843660,0.9523494,0.6244616},
{0.0862871,0.9540469,0.6121535},
{0.0904532,0.9565577,0.5978439},
{0.0939580,0.9591716,0.5831684},
{0.0988231,0.9609066,0.5689674},
{0.1035332,0.9632760,0.5536299},
{0.1096340,0.9648124,0.5384579},
{0.1136958,0.9668548,0.5224392},
{0.1182669,0.9683608,0.5065664},
{0.1206668,0.9702151,0.4900964},
{0.1230677,0.9722692,0.4725586},
{0.1250535,0.9739877,0.4551114},
{0.1312070,0.9747684,0.4382242},
{0.1307060,0.9758148,0.4215879},
{0.1323608,0.9763757,0.4055023},
{0.1385944,0.9757127,0.3901557},
{0.1408851,0.9760659,0.3732599},
{0.1468601,0.9753398,0.3570144},
{0.1588720,0.9728106,0.3422344},
{0.1619150,0.9714277,0.3279092},
{0.1708269,0.9696889,0.3107921},
{0.1794958,0.9670205,0.2959805},
{0.1089444,0.9682283,0.3079225},
{0.0534888,0.9650199,0.3150522},
{0.0023509,0.9591639,0.3211029},
{-0.0443532,0.9508810,0.3270543},
{-0.0865708,0.9404205,0.3342527},
{-0.1372912,0.9274532,0.3398888},
{-0.2149727,0.9117590,0.3295323},
{-0.2854395,0.8905929,0.3210771},
{-0.3479467,0.8666024,0.3127121},
{-0.4059671,0.8394946,0.3043961}
};
inPtsRCh = {
{0.1467512,0.8630494,0.7000732},
{0.1373895,0.8637092,0.6998605},
{0.1344624,0.8649747,0.6966262},
{0.1245844,0.8656941,0.6960056},
{0.1215074,0.8669220,0.6925629},
{0.1140465,0.8673403,0.6914929},
{0.1103274,0.8688756,0.6875437},
{0.1061071,0.8690380,0.6855370},
{0.1023112,0.8705007,0.6812859},
{0.0953527,0.8713790,0.6786331},
{0.0913777,0.8726504,0.6742881},
{0.0873325,0.8738983,0.6699372},
{0.0822841,0.8752788,0.6652668},
{0.0755778,0.8767737,0.6607405},
{0.0710224,0.8784470,0.6552078},
{0.0713338,0.8793632,0.6497648},
{0.0664795,0.8810693,0.6439333},
{0.0631059,0.8827789,0.6375793},
{0.0619392,0.8841681,0.6312079},
{0.0602514,0.8851240,0.6253928},
{0.0531558,0.8884971,0.6162526},
{0.0451222,0.8938990,0.6032126},
{0.0326260,0.8945608,0.5988112},
{0.0270741,0.8964219,0.5909100},
{0.0233258,0.8979741,0.5833845},
{0.0168343,0.8994559,0.5758203},
{0.0027919,0.9011098,0.5677871},
{0.0123172,0.9024426,0.5594749},
{0.0047548,0.9041550,0.5506834},
{0.0022692,0.9060882,0.5406533},
{-0.0011655,0.9084346,0.5293969},
{-0.0026287,0.9104525,0.5184068},
{-0.0059417,0.9129835,0.5057264},
{-0.0056176,0.9150258,0.4933830},
{-0.0046417,0.9166230,0.4813880},
{-0.0014947,0.9187881,0.4677355},
{0.0012173,0.9209292,0.4535228},
{0.0053863,0.9225665,0.4397577},
{0.0092518,0.9243213,0.4248180},
{0.0147523,0.9256495,0.4101822},
{0.0181533,0.9271637,0.3946293},
{0.0223330,0.9282518,0.3792067},
{0.0243024,0.9294290,0.3632583},
{0.0262861,0.9305656,0.3464495},
{0.0278789,0.9315166,0.3295921},
{0.0334328,0.9316636,0.3133595},
{0.0326714,0.9319315,0.2973701},
{0.0340514,0.9316199,0.2818558},
{0.0398851,0.9306897,0.2669469},
{0.0425542,0.9299169,0.2504918},
{0.0487678,0.9285051,0.2343303},
{0.0607232,0.9260039,0.2197361},
{0.0639357,0.9240131,0.2056221},
{0.0731763,0.9214935,0.1885756},
{0.0818460,0.9184210,0.1736398},
{0.0149247,0.9197690,0.1847939},
{-0.0379642,0.9166751,0.1916982},
{-0.0869143,0.9110750,0.1973243},
{-0.1317962,0.9032537,0.2031069},
{-0.1725222,0.8936311,0.2102853},
{-0.2215293,0.8803149,0.2158786},
{-0.2953491,0.8595495,0.2059340},
{-0.3621962,0.8343691,0.1979519},
{-0.4214039,0.8067985,0.1900468},
{-0.4760034,0.7764925,0.1821681}
};
inPtsMCh = {
{0.1920737,0.8630494,0.6045869},
{0.1828392,0.8637092,0.6042505},
{0.1797776,0.8649747,0.6010233},
{0.1699174,0.8656941,0.6005750},
{0.1668423,0.8669220,0.5970912},
{0.1592007,0.8673403,0.5959771},
{0.1554714,0.8688756,0.5920841},
{0.1511273,0.8690380,0.5901450},
{0.1472768,0.8705007,0.5859242},
{0.1402654,0.8713790,0.5832405},
{0.1361524,0.8726504,0.5790156},
{0.1320887,0.8738983,0.5747048},
{0.1270667,0.8752788,0.5701824},
{0.1202912,0.8767737,0.5655945},
{0.1156320,0.8784470,0.5601784},
{0.1158138,0.8793632,0.5548839},
{0.1109034,0.8810693,0.5491441},
{0.1075912,0.8827789,0.5428066},
{0.1062450,0.8841681,0.5364418},
{0.1045791,0.8851240,0.5306164},
{0.0973416,0.8884971,0.5215990},
{0.0892422,0.8938990,0.5086698},
{0.0766397,0.8945608,0.5044232},
{0.0710388,0.8964219,0.4964630},
{0.0671229,0.8979741,0.4889261},
{0.0605917,0.8994559,0.4813142},
{0.0467952,0.9011098,0.4733798},
{0.0560457,0.9024426,0.4650741},
{0.0484347,0.9041550,0.4562027},
{0.0456873,0.9060882,0.4462549},
{0.0420248,0.9084346,0.4350678},
{0.0403451,0.9104525,0.4242247},
{0.0366482,0.9129835,0.4118363},
{0.0366020,0.9150258,0.3998379},
{0.0373801,0.9166230,0.3881236},
{0.0401376,0.9187881,0.3746992},
{0.0424764,0.9209292,0.3608013},
{0.0460237,0.9225665,0.3474649},
{0.0493094,0.9243213,0.3327907},
{0.0542791,0.9256495,0.3185140},
{0.0572307,0.9271637,0.3032015},
{0.0609155,0.9282518,0.2880903},
{0.0624137,0.9294290,0.2724479},
{0.0639153,0.9305656,0.2558717},
{0.0651905,0.9315166,0.2391632},
{0.0703796,0.9316636,0.2231039},
{0.0691326,0.9319315,0.2072392},
{0.0701555,0.9316199,0.1919753},
{0.0754753,0.9306897,0.1772973},
{0.0776911,0.9299169,0.1610401},
{0.0835890,0.9285051,0.1452901},
{0.0950375,0.9260039,0.1309671},
{0.0977458,0.9240131,0.1170913},
{0.1065989,0.9214935,0.1003265},
{0.1147283,0.9184210,0.0860320},
{0.0476553,0.9197690,0.0970218},
{-0.0052287,0.9166751,0.1037238},
{-0.0538619,0.9110750,0.1090554},
{-0.0987080,0.9032537,0.1145513},
{-0.1390577,0.8936311,0.1214364},
{-0.1877008,0.8803149,0.1266537},
{-0.2609732,0.8595495,0.1165576},
{-0.3268309,0.8343691,0.1084182},
{-0.3848647,0.8067985,0.1003516},
{-0.4383577,0.7764925,0.0924638}
};
inPtsLCh = {
{0.1561210,0.8630494,0.5288409},
{0.1469119,0.8637092,0.5286722},
{0.1439452,0.8649747,0.5254267},
{0.1339636,0.8656941,0.5248887},
{0.1309534,0.8669220,0.5215119},
{0.1234507,0.8673403,0.5203542},
{0.1196953,0.8688756,0.5164335},
{0.1154703,0.8690380,0.5145925},
{0.1116530,0.8705007,0.5103743},
{0.1046914,0.8713790,0.5076827},
{0.1006362,0.8726504,0.5034434},
{0.0966094,0.8738983,0.4992117},
{0.0914930,0.8752788,0.4946509},
{0.0848304,0.8767737,0.4901371},
{0.0802255,0.8784470,0.4847540},
{0.0804804,0.8793632,0.4795139},
{0.0755221,0.8810693,0.4736494},
{0.0722152,0.8827789,0.4674407},
{0.0710535,0.8841681,0.4611705},
{0.0694029,0.8851240,0.4554066},
{0.0622035,0.8884971,0.4463271},
{0.0541254,0.8938990,0.4334198},
{0.0415440,0.8945608,0.4291600},
{0.0360208,0.8964219,0.4212357},
{0.0322494,0.8979741,0.4137135},
{0.0257807,0.8994559,0.4061303},
{0.0117367,0.9011098,0.3981632},
{0.0212616,0.9024426,0.3899825},
{0.0137605,0.9041550,0.3812017},
{0.0112182,0.9060882,0.3713131},
{0.0077539,0.9084346,0.3602189},
{0.0062533,0.9104525,0.3495086},
{0.0027661,0.9129835,0.3371427},
{0.0029574,0.9150258,0.3252922},
{0.0038283,0.9166230,0.3136577},
{0.0068646,0.9187881,0.3003436},
{0.0094019,0.9209292,0.2864731},
{0.0132901,0.9225665,0.2731224},
{0.0169398,0.9243213,0.2584256},
{0.0222349,0.9256495,0.2441991},
{0.0255189,0.9271637,0.2290067},
{0.0295882,0.9282518,0.2141079},
{0.0313869,0.9294290,0.1985181},
{0.0332594,0.9305656,0.1820793},
{0.0348146,0.9315166,0.1655437},
{0.0402723,0.9316636,0.1495562},
{0.0394301,0.9319315,0.1338157},
{0.0406633,0.9316199,0.1185550},
{0.0463413,0.9306897,0.1039106},
{0.0488656,0.9299169,0.0876558},
{0.0548955,0.9285051,0.0719188},
{0.0667032,0.9260039,0.0576679},
{0.0697111,0.9240131,0.0436832},
{0.0788369,0.9214935,0.0270237},
{0.0871829,0.9184210,0.0126432},
{0.0202979,0.9197690,0.0236587},
{-0.0325456,0.9166751,0.0303116},
{-0.0812965,0.9110750,0.0357892},
{-0.1260093,0.9032537,0.0414833},
{-0.1664956,0.8936311,0.0485883},
{-0.2152497,0.8803149,0.0539917},
{-0.2888478,0.8595495,0.0440845},
{-0.3554927,0.8343691,0.0358557},
{-0.4144029,0.8067985,0.0278423},
{-0.4688583,0.7764925,0.0197852}
};
inPtsLSh = {
{0.3072070,0.9684998,0.4134162},
{0.2970561,0.9705772,0.4133631},
{0.2944069,0.9714478,0.4101628},
{0.2835870,0.9735283,0.4097946},
{0.2811169,0.9740395,0.4064303},
{0.2733263,0.9750127,0.4054363},
{0.2699745,0.9757786,0.4013949},
{0.2661181,0.9756928,0.3998238},
{0.2626634,0.9766448,0.3954986},
{0.2555927,0.9777458,0.3929996},
{0.2519100,0.9785491,0.3888198},
{0.2482369,0.9795089,0.3845141},
{0.2431108,0.9808370,0.3799730},
{0.2363556,0.9825077,0.3754650},
{0.2320799,0.9838661,0.3701806},
{0.2327758,0.9840251,0.3647511},
{0.2277251,0.9857564,0.3588885},
{0.2249132,0.9869216,0.3527816},
{0.2238009,0.9878362,0.3464092},
{0.2227397,0.9884476,0.3409172},
{0.2152610,0.9917249,0.3316246},
{0.2075653,0.9962666,0.3184930},
{0.1939494,0.9988055,0.3146437},
{0.1883876,1.0007843,0.3068716},
{0.1845633,1.0024926,0.2993525},
{0.1779794,1.0043890,0.2920679},
{0.1629044,1.0077710,0.2843187},
{0.1740976,1.0067868,0.2761696},
{0.1664406,1.0089979,0.2676757},
{0.1641119,1.0105617,0.2577051},
{0.1610041,1.0123478,0.2465753},
{0.1599722,1.0136461,0.2357523},
{0.1569767,1.0155181,0.2234184},
{0.1575863,1.0165135,0.2114459},
{0.1592416,1.0172530,0.1998983},
{0.1632696,1.0177533,0.1864453},
{0.1667925,1.0181738,0.1725923},
{0.1717976,1.0179855,0.1591905},
{0.1764595,1.0179440,0.1444228},
{0.1831104,1.0170487,0.1301671},
{0.1874687,1.0165851,0.1147875},
{0.1926857,1.0155365,0.0998577},
{0.1953442,1.0149428,0.0841837},
{0.1981905,1.0142634,0.0674935},
{0.2008599,1.0132601,0.0510428},
{0.2074518,1.0113320,0.0349834},
{0.2072547,1.0104873,0.0192074},
{0.2092764,1.0089004,0.0040612},
{0.2158145,1.0061582,-0.0105020},
{0.2193641,1.0036580,-0.0265277},
{0.2266394,1.0000946,-0.0421182},
{0.2396961,0.9948016,-0.0562567},
{0.2434104,0.9914822,-0.0699361},
{0.2539512,0.9859851,-0.0863292},
{0.2633666,0.9804924,-0.1005905},
{0.1917603,0.9965124,-0.0877320},
{0.1345778,1.0047903,-0.0793898},
{0.0813068,1.0091836,-0.0722265},
{0.0316242,1.0106346,-0.0651145},
{-0.0138828,1.0097926,-0.0563988},
{-0.0693479,1.0058860,-0.0496012},
{-0.1529305,0.9940748,-0.0598752},
{-0.2293464,0.9767120,-0.0680478},
{-0.2974817,0.9555149,-0.0761000},
{-0.3609408,0.9305285,-0.0841924}
};
inPtsEeWam = {
{-0.2925533,0.6159484,0.6382263},
{-0.2968003,0.6097856,0.6422199},
{-0.2967849,0.6078599,0.6435492},
{-0.3012800,0.6008979,0.6470847},
{-0.3012485,0.5987700,0.6473719},
{-0.3039818,0.5926315,0.6493104},
{-0.3036447,0.5893881,0.6489856},
{-0.3036342,0.5839578,0.6498634},
{-0.3023580,0.5792919,0.6498597},
{-0.3029746,0.5717002,0.6506044},
{-0.3011069,0.5654663,0.6505158},
{-0.2987745,0.5583233,0.6502024},
{-0.2965164,0.5500710,0.6502225},
{-0.2951913,0.5409186,0.6497481},
{-0.2922776,0.5326116,0.6485334},
{-0.2852489,0.5245303,0.6487191},
{-0.2816300,0.5147146,0.6478345},
{-0.2770251,0.5056261,0.6468113},
{-0.2703541,0.4960515,0.6462974},
{-0.2643137,0.4859297,0.6456667},
{-0.2605695,0.4759221,0.6436206},
{-0.2583036,0.4685917,0.6387740},
{-0.2570271,0.4528853,0.6390891},
{-0.2524399,0.4417381,0.6370737},
{-0.2467734,0.4303085,0.6351863},
{-0.2430024,0.4179451,0.6333318},
{-0.2425362,0.4035150,0.6310576},
{-0.2308071,0.3948948,0.6290297},
{-0.2268847,0.3822260,0.6266033},
{-0.2203731,0.3711657,0.6242807},
{-0.2145896,0.3608747,0.6215434},
{-0.2077031,0.3506377,0.6195679},
{-0.2022162,0.3413184,0.6171625},
{-0.1949867,0.3324696,0.6153071},
{-0.1877137,0.3238126,0.6139852},
{-0.1801868,0.3169368,0.6121753},
{-0.1733945,0.3103814,0.6101477},
{-0.1662707,0.3038607,0.6089973},
{-0.1591853,0.2984149,0.6080411},
{-0.1526073,0.2935357,0.6069922},
{-0.1472965,0.2897727,0.6062164},
{-0.1419794,0.2861860,0.6055550},
{-0.1376308,0.2834477,0.6044582},
{-0.1340533,0.2817672,0.6024742},
{-0.1305970,0.2806543,0.6009148},
{-0.1257922,0.2802346,0.5998614},
{-0.1236164,0.2791106,0.5980775},
{-0.1206748,0.2784377,0.5967948},
{-0.1170165,0.2787369,0.5957090},
{-0.1153665,0.2802864,0.5938666},
{-0.1131780,0.2823058,0.5923538},
{-0.1089588,0.2842312,0.5913321},
{-0.1075543,0.2855835,0.5906052},
{-0.1053816,0.2896522,0.5884584},
{-0.1024058,0.2929535,0.5877543},
{-0.1230591,0.2714841,0.5946342},
{-0.1377245,0.2535066,0.5998045},
{-0.1509576,0.2364262,0.6041396},
{-0.1612774,0.2191215,0.6082149},
{-0.1697918,0.2012161,0.6118056},
{-0.1784677,0.1819963,0.6149806},
{-0.1936602,0.1673356,0.6142012},
{-0.2064926,0.1521994,0.6144713},
{-0.2179931,0.1381694,0.6147639},
{-0.2279921,0.1241726,0.6150569}
};
inPtsRPiWam = {
{-0.3393457,0.5703303,0.6551819},
{-0.3438419,0.5640548,0.6585159},
{-0.3443792,0.5624570,0.6592704},
{-0.3486650,0.5550405,0.6622933},
{-0.3489094,0.5530105,0.6621568},
{-0.3512161,0.5462778,0.6636538},
{-0.3506656,0.5427963,0.6631880},
{-0.3501781,0.5368835,0.6636421},
{-0.3485190,0.5318100,0.6633606},
{-0.3484305,0.5235823,0.6639897},
{-0.3460922,0.5168619,0.6636934},
{-0.3433031,0.5092541,0.6631732},
{-0.3404682,0.5005476,0.6630418},
{-0.3382865,0.4907189,0.6625016},
{-0.3347899,0.4818878,0.6613301},
{-0.3277778,0.4736656,0.6610993},
{-0.3232235,0.4632250,0.6603461},
{-0.3180295,0.4536945,0.6593030},
{-0.3106416,0.4437454,0.6589874},
{-0.3039850,0.4332423,0.6583817},
{-0.2992523,0.4226503,0.6567296},
{-0.2960126,0.4148435,0.6523645},
{-0.2932472,0.3983025,0.6529880},
{-0.2876367,0.3867660,0.6514781},
{-0.2810042,0.3749991,0.6503678},
{-0.2761516,0.3622858,0.6493196},
{-0.2741977,0.3473408,0.6479407},
{-0.2626202,0.3392408,0.6467907},
{-0.2579820,0.3265027,0.6452485},
{-0.2512706,0.3156625,0.6438160},
{-0.2452399,0.3057067,0.6420064},
{-0.2385130,0.2958559,0.6407779},
{-0.2333551,0.2869563,0.6390610},
{-0.2262984,0.2787058,0.6381143},
{-0.2198505,0.2707595,0.6373128},
{-0.2129754,0.2646797,0.6362293},
{-0.2069398,0.2589886,0.6348922},
{-0.2009209,0.2534653,0.6343988},
{-0.1949593,0.2490550,0.6337364},
{-0.1895754,0.2453640,0.6333193},
{-0.1850424,0.2425149,0.6330117},
{-0.1809640,0.2402178,0.6327208},
{-0.1773250,0.2383833,0.6321852},
{-0.1740199,0.2379211,0.6314632},
{-0.1714987,0.2379427,0.6304535},
{-0.1674848,0.2386521,0.6299731},
{-0.1655772,0.2386451,0.6292651},
{-0.1629678,0.2390871,0.6290223},
{-0.1597080,0.2406668,0.6288642},
{-0.1584753,0.2434345,0.6278935},
{-0.1568435,0.2467841,0.6271087},
{-0.1533268,0.2502161,0.6267205},
{-0.1522116,0.2523633,0.6263450},
{-0.1508065,0.2580172,0.6247382},
{-0.1484810,0.2623995,0.6241669},
{-0.1671475,0.2375613,0.6305649},
{-0.1801551,0.2170320,0.6353744},
{-0.1916711,0.1977284,0.6393923},
{-0.2002207,0.1785467,0.6433771},
{-0.2069765,0.1590482,0.6471057},
{-0.2134264,0.1379044,0.6502822},
{-0.2250863,0.1211384,0.6500891},
{-0.2344515,0.1040546,0.6507414},
{-0.2427397,0.0884563,0.6512209},
{-0.2496872,0.0732659,0.6518965}
};
inPtsRThWam = {
{-0.3631204,0.5718180,0.6922148},
{-0.3678159,0.5652823,0.6951960},
{-0.3686248,0.5637388,0.6956891},
{-0.3729974,0.5558627,0.6985522},
{-0.3735033,0.5538578,0.6981463},
{-0.3760450,0.5467363,0.6994608},
{-0.3758117,0.5432834,0.6988136},
{-0.3757846,0.5371524,0.6991727},
{-0.3745523,0.5319897,0.6986740},
{-0.3749310,0.5236394,0.6990986},
{-0.3729614,0.5167769,0.6985426},
{-0.3705901,0.5090660,0.6977144},
{-0.3682307,0.5002630,0.6974195},
{-0.3664341,0.4901715,0.6967516},
{-0.3632641,0.4812554,0.6952185},
{-0.3569228,0.4731871,0.6942989},
{-0.3527751,0.4625513,0.6934377},
{-0.3481055,0.4529796,0.6919957},
{-0.3412323,0.4430362,0.6915259},
{-0.3350342,0.4324416,0.6906800},
{-0.3306967,0.4217181,0.6887649},
{-0.3279407,0.4138679,0.6841660},
{-0.3253722,0.3967416,0.6848326},
{-0.3200651,0.3850515,0.6833902},
{-0.3134751,0.3732053,0.6823960},
{-0.3086880,0.3603771,0.6814864},
{-0.3067885,0.3451366,0.6802570},
{-0.2954374,0.3377457,0.6793487},
{-0.2908577,0.3251389,0.6778747},
{-0.2843033,0.3147474,0.6763672},
{-0.2785715,0.3053148,0.6746256},
{-0.2720794,0.2960502,0.6731937},
{-0.2672364,0.2877852,0.6710340},
{-0.2604968,0.2803047,0.6700437},
{-0.2545178,0.2732560,0.6686632},
{-0.2480333,0.2681364,0.6672286},
{-0.2423411,0.2634544,0.6655140},
{-0.2367334,0.2590774,0.6641688},
{-0.2312126,0.2557815,0.6629777},
{-0.2262477,0.2533532,0.6616015},
{-0.2222032,0.2514510,0.6604788},
{-0.2186644,0.2504371,0.6591325},
{-0.2152935,0.2494517,0.6577269},
{-0.2121286,0.2501427,0.6567325},
{-0.2097997,0.2511227,0.6546275},
{-0.2058574,0.2527692,0.6533509},
{-0.2039798,0.2536549,0.6521413},
{-0.2013046,0.2549057,0.6512861},
{-0.1979721,0.2574715,0.6506890},
{-0.1966411,0.2610814,0.6491056},
{-0.1949161,0.2653404,0.6476231},
{-0.1910839,0.2698538,0.6467477},
{-0.1900420,0.2725078,0.6458287},
{-0.1883872,0.2791686,0.6434108},
{-0.1859260,0.2842482,0.6422174},
{-0.2060554,0.2566279,0.6485356},
{-0.2199938,0.2337835,0.6531598},
{-0.2323525,0.2123780,0.6570425},
{-0.2414800,0.1913157,0.6610836},
{-0.2485944,0.1700423,0.6648285},
{-0.2554577,0.1466884,0.6680230},
{-0.2677475,0.1268470,0.6676992},
{-0.2774207,0.1066156,0.6681011},
{-0.2859485,0.0881058,0.6682691},
{-0.2927921,0.0702306,0.6686470}
};
inPtsRWWam = {
{-0.3249492,0.6179756,0.6886881},
{-0.3296136,0.6114656,0.6924242},
{-0.3300208,0.6096171,0.6934721},
{-0.3347080,0.6020274,0.6968973},
{-0.3350945,0.5999362,0.6969005},
{-0.3381692,0.5932627,0.6986138},
{-0.3382424,0.5900582,0.6980015},
{-0.3387139,0.5843261,0.6985386},
{-0.3379610,0.5795377,0.6981542},
{-0.3391217,0.5717781,0.6984936},
{-0.3377426,0.5653503,0.6980322},
{-0.3359676,0.5580670,0.6972832},
{-0.3342125,0.5496845,0.6969007},
{-0.3332838,0.5401778,0.6960991},
{-0.3308715,0.5317544,0.6944657},
{-0.3248301,0.5238804,0.6938068},
{-0.3215905,0.5138036,0.6925819},
{-0.3176422,0.5046606,0.6909623},
{-0.3114468,0.4950988,0.6900065},
{-0.3058887,0.4848575,0.6889145},
{-0.3025901,0.4746763,0.6864308},
{-0.3008042,0.4672930,0.6811062},
{-0.2996137,0.4508160,0.6813039},
{-0.2951750,0.4394787,0.6791285},
{-0.2894571,0.4279505,0.6772879},
{-0.2856334,0.4154442,0.6754785},
{-0.2850926,0.4006367,0.6732556},
{-0.2733791,0.3929552,0.6712655},
{-0.2694539,0.3804600,0.6688495},
{-0.2631016,0.3699821,0.6663862},
{-0.2574702,0.3603704,0.6635076},
{-0.2508624,0.3508876,0.6612478},
{-0.2458467,0.3423859,0.6583357},
{-0.2388174,0.3345189,0.6562297},
{-0.2321523,0.3270128,0.6541719},
{-0.2250130,0.3213566,0.6518120},
{-0.2185684,0.3160799,0.6492226},
{-0.2120793,0.3110393,0.6470767},
{-0.2054075,0.3069910,0.6453232},
{-0.1994276,0.3037357,0.6431006},
{-0.1946691,0.3011644,0.6412316},
{-0.1899522,0.2991899,0.6391632},
{-0.1860193,0.2975537,0.6370094},
{-0.1823629,0.2972602,0.6345078},
{-0.1793151,0.2974190,0.6316636},
{-0.1746760,0.2982187,0.6296431},
{-0.1724822,0.2982102,0.6271866},
{-0.1695423,0.2986015,0.6251742},
{-0.1657117,0.3001227,0.6234835},
{-0.1639899,0.3027687,0.6208909},
{-0.1617188,0.3059641,0.6185086},
{-0.1571232,0.3092817,0.6168796},
{-0.1557661,0.3112560,0.6154356},
{-0.1533640,0.3166579,0.6122993},
{-0.1502478,0.3208687,0.6108168},
{-0.1728268,0.2958725,0.6176209},
{-0.1888720,0.2750132,0.6226386},
{-0.2032222,0.2552470,0.6268154},
{-0.2143115,0.2355346,0.6309745},
{-0.2234332,0.2153864,0.6346486},
{-0.2327484,0.1933402,0.6378917},
{-0.2487014,0.1747009,0.6369218},
{-0.2620393,0.1555101,0.6369123},
{-0.2738044,0.1377166,0.6367843},
{-0.2837978,0.1202429,0.6367430}
};
inPtsRLAWam = {
{-0.3741026,0.8426508,0.8813146},
{-0.3816739,0.8349520,0.8856690},
{-0.3834293,0.8330672,0.8863907},
{-0.3910612,0.8242398,0.8904069},
{-0.3928579,0.8219746,0.8901938},
{-0.3985669,0.8142165,0.8923444},
{-0.4006792,0.8106903,0.8914521},
{-0.4034469,0.8043436,0.8919345},
{-0.4051375,0.7992979,0.8910085},
{-0.4096878,0.7906162,0.8911858},
{-0.4112665,0.7839898,0.8898422},
{-0.4127920,0.7765974,0.8879201},
{-0.4145872,0.7679720,0.8863486},
{-0.4177495,0.7580736,0.8842132},
{-0.4189162,0.7496217,0.8809649},
{-0.4149491,0.7421160,0.8788792},
{-0.4149743,0.7319677,0.8761136},
{-0.4137288,0.7231903,0.8726548},
{-0.4095108,0.7139803,0.8702129},
{-0.4061312,0.7042956,0.8672355},
{-0.4061004,0.6946722,0.8621790},
{-0.4076210,0.6888710,0.8528426},
{-0.4105810,0.6715475,0.8514917},
{-0.4082084,0.6610366,0.8468650},
{-0.4037794,0.6506188,0.8426640},
{-0.4014288,0.6392222,0.8383122},
{-0.4038472,0.6247742,0.8334423},
{-0.3891918,0.6206540,0.8285571},
{-0.3863070,0.6098733,0.8228458},
{-0.3796373,0.6019593,0.8167391},
{-0.3738115,0.5951879,0.8095399},
{-0.3663512,0.5890134,0.8025219},
{-0.3610345,0.5838707,0.7940444},
{-0.3524577,0.5797844,0.7863478},
{-0.3439050,0.5760744,0.7785892},
{-0.3339181,0.5747991,0.7697381},
{-0.3245997,0.5738007,0.7602963},
{-0.3147531,0.5729898,0.7511920},
{-0.3048825,0.5731437,0.7415908},
{-0.2948816,0.5738900,0.7320118},
{-0.2866256,0.5751238,0.7217937},
{-0.2786864,0.5765485,0.7112633},
{-0.2721185,0.5778364,0.7004802},
{-0.2659961,0.5801462,0.6891063},
{-0.2606696,0.5824970,0.6776200},
{-0.2524171,0.5855369,0.6671212},
{-0.2486395,0.5868473,0.6569972},
{-0.2432434,0.5885361,0.6476717},
{-0.2358312,0.5914097,0.6388183},
{-0.2316009,0.5949425,0.6288418},
{-0.2254486,0.5991159,0.6192398},
{-0.2152624,0.6035333,0.6108935},
{-0.2108783,0.6058746,0.6026875},
{-0.2037558,0.6117276,0.5924357},
{-0.1963669,0.6160975,0.5841142},
{-0.2388738,0.5874721,0.5929741},
{-0.2703084,0.5627278,0.5983818},
{-0.2986889,0.5386230,0.6026455},
{-0.3227560,0.5142152,0.6069552},
{-0.3433644,0.4894102,0.6116820},
{-0.3666144,0.4608461,0.6150768},
{-0.4035563,0.4301549,0.6092950},
{-0.4354272,0.3982466,0.6050441},
{-0.4632949,0.3674868,0.6007429},
{-0.4879126,0.3364327,0.5967538}
};
inPtsRElWam = {
{-0.3300408,0.8517717,0.8819198},
{-0.3377696,0.8448126,0.8860931},
{-0.3396146,0.8433244,0.8866400},
{-0.3474372,0.8352828,0.8904299},
{-0.3493355,0.8334107,0.8900633},
{-0.3552267,0.8263221,0.8920494},
{-0.3574858,0.8233049,0.8910058},
{-0.3604126,0.8174867,0.8913865},
{-0.3622947,0.8130436,0.8902684},
{-0.3671056,0.8051400,0.8902854},
{-0.3689229,0.7991830,0.8887548},
{-0.3707129,0.7924952,0.8866536},
{-0.3728255,0.7846652,0.8848319},
{-0.3763506,0.7756263,0.8824703},
{-0.3778495,0.7679138,0.8789834},
{-0.3741490,0.7609535,0.8765333},
{-0.3745603,0.7515691,0.8733767},
{-0.3736557,0.7434211,0.8695146},
{-0.3697764,0.7347858,0.8665647},
{-0.3667235,0.7256311,0.8631333},
{-0.3671762,0.7167550,0.8574615},
{-0.3691447,0.7115810,0.8474731},
{-0.3727247,0.6951449,0.8455696},
{-0.3707644,0.6851148,0.8402934},
{-0.3666943,0.6750517,0.8354031},
{-0.3647304,0.6640143,0.8303383},
{-0.3677183,0.6501459,0.8247256},
{-0.3529874,0.6456328,0.8190544},
{-0.3504545,0.6350452,0.8125514},
{-0.3440096,0.6270851,0.8055873},
{-0.3383872,0.6202066,0.7975323},
{-0.3310468,0.6137714,0.7896516},
{-0.3258483,0.6083519,0.7803474},
{-0.3172999,0.6038011,0.7717832},
{-0.3087119,0.5995379,0.7632300},
{-0.2986100,0.5975103,0.7535351},
{-0.2891571,0.5957079,0.7432993},
{-0.2791298,0.5940013,0.7334579},
{-0.2690766,0.5932017,0.7231350},
{-0.2588590,0.5929107,0.7128915},
{-0.2503842,0.5930874,0.7020741},
{-0.2422034,0.5934691,0.6910722},
{-0.2354381,0.5937753,0.6798526},
{-0.2291206,0.5951035,0.6680950},
{-0.2236019,0.5965123,0.6562996},
{-0.2151338,0.5984475,0.6454815},
{-0.2112706,0.5989735,0.6350536},
{-0.2057936,0.5997839,0.6254006},
{-0.1982432,0.6016439,0.6162926},
{-0.1939152,0.6042823,0.6060920},
{-0.1876300,0.6073947,0.5963004},
{-0.1773044,0.6105627,0.5877682},
{-0.1728437,0.6119830,0.5794269},
{-0.1656202,0.6166669,0.5690631},
{-0.1581555,0.6199453,0.5606603},
{-0.2010441,0.5940573,0.5695102},
{-0.2328787,0.5713454,0.5749351},
{-0.2616924,0.5490925,0.5792650},
{-0.2862611,0.5264054,0.5836201},
{-0.3074181,0.5031897,0.5883799},
{-0.3313922,0.4764908,0.5918466},
{-0.3695530,0.4482514,0.5860292},
{-0.4027210,0.4185492,0.5817394},
{-0.4318794,0.3897404,0.5774439},
{-0.4578705,0.3604822,0.5734279}
};
inPtsRUAWam = {
{-0.3272154,0.8866637,0.9101963},
{-0.3351783,0.8797086,0.9143872},
{-0.3370346,0.8783170,0.9148156},
{-0.3451662,0.8702913,0.9186123},
{-0.3471253,0.8684997,0.9181502},
{-0.3533165,0.8614271,0.9201384},
{-0.3557547,0.8585026,0.9189903},
{-0.3589431,0.8527384,0.9193178},
{-0.3610957,0.8484250,0.9180483},
{-0.3663571,0.8406001,0.9179806},
{-0.3685684,0.8348004,0.9162552},
{-0.3708518,0.8282884,0.9139269},
{-0.3735378,0.8206349,0.9118629},
{-0.3777664,0.8117610,0.9092524},
{-0.3799230,0.8042263,0.9054807},
{-0.3767133,0.7974337,0.9027558},
{-0.3778906,0.7881874,0.8993191},
{-0.3776848,0.7801925,0.8951394},
{-0.3744446,0.7716737,0.8919121},
{-0.3721034,0.7626310,0.8881746},
{-0.3735069,0.7538905,0.8820762},
{-0.3765055,0.7489285,0.8714728},
{-0.3813229,0.7323618,0.8693598},
{-0.3803219,0.7223069,0.8637542},
{-0.3771501,0.7121837,0.8585740},
{-0.3761966,0.7010206,0.8532307},
{-0.3805087,0.6868744,0.8473624},
{-0.3661632,0.6823880,0.8414252},
{-0.3647188,0.6715629,0.8346420},
{-0.3591510,0.6634326,0.8273724},
{-0.3544360,0.6563831,0.8189494},
{-0.3479488,0.6497823,0.8106881},
{-0.3436602,0.6441977,0.8009099},
{-0.3358607,0.6395102,0.7919166},
{-0.3279675,0.6351091,0.7829509},
{-0.3184635,0.6330107,0.7727851},
{-0.3096219,0.6311191,0.7620674},
{-0.3001243,0.6293495,0.7517537},
{-0.2906323,0.6284991,0.7408677},
{-0.2808157,0.6282010,0.7301395},
{-0.2728252,0.6283634,0.7187174},
{-0.2651013,0.6287555,0.7070584},
{-0.2588489,0.6290219,0.6951698},
{-0.2530041,0.6303400,0.6826884},
{-0.2479263,0.6317382,0.6701727},
{-0.2397294,0.6337399,0.6586914},
{-0.2362781,0.6341912,0.6476765},
{-0.2310992,0.6349636,0.6375253},
{-0.2236420,0.6369359,0.6278846},
{-0.2194832,0.6396419,0.6170911},
{-0.2131990,0.6429255,0.6067306},
{-0.2026417,0.6464002,0.5977026},
{-0.1982702,0.6478941,0.5888548},
{-0.1908363,0.6528817,0.5778744},
{-0.1832023,0.6564156,0.5688809},
{-0.2287204,0.6284631,0.5781855},
{-0.2625688,0.6039668,0.5838426},
{-0.2931452,0.5799778,0.5883107},
{-0.3192836,0.5555574,0.5928221},
{-0.3417664,0.5306757,0.5978516},
{-0.3673038,0.5018317,0.6015003},
{-0.4075976,0.4704307,0.5952860},
{-0.4424831,0.4376411,0.5906545},
{-0.4729910,0.4059434,0.5859468},
{-0.5000684,0.3738408,0.5815449}
};
inPtsRShWam = {
{0.2177124,0.9016904,0.8372041},
{0.2089310,0.9018683,0.8372248},
{0.2064425,0.9032245,0.8341172},
{0.1972230,0.9034743,0.8336840},
{0.1945811,0.9047876,0.8301877},
{0.1873417,0.9048989,0.8290403},
{0.1840178,0.9066543,0.8250376},
{0.1799559,0.9063357,0.8233223},
{0.1766271,0.9079656,0.8190074},
{0.1698528,0.9087040,0.8162911},
{0.1662132,0.9099463,0.8120354},
{0.1623834,0.9112663,0.8077436},
{0.1576554,0.9128749,0.8031175},
{0.1511024,0.9144942,0.7986008},
{0.1467103,0.9162395,0.7931845},
{0.1476761,0.9169666,0.7877444},
{0.1433003,0.9188078,0.7818529},
{0.1404790,0.9204234,0.7753832},
{0.1402552,0.9214179,0.7687828},
{0.1392057,0.9218298,0.7628004},
{0.1328071,0.9256873,0.7531109},
{0.1248978,0.9325032,0.7395827},
{0.1130693,0.9324449,0.7350352},
{0.1082890,0.9343514,0.7266536},
{0.1055969,0.9354734,0.7185845},
{0.0998412,0.9367250,0.7106423},
{0.0863430,0.9388688,0.7022821},
{0.0974668,0.9386315,0.6934846},
{0.0908213,0.9405268,0.6841705},
{0.0891952,0.9423994,0.6735439},
{0.0865581,0.9450519,0.6618045},
{0.0860387,0.9471623,0.6503137},
{0.0831283,0.9501170,0.6373099},
{0.0843660,0.9523494,0.6244616},
{0.0862871,0.9540469,0.6121535},
{0.0904532,0.9565577,0.5978439},
{0.0939580,0.9591716,0.5831684},
{0.0988231,0.9609066,0.5689674},
{0.1035332,0.9632760,0.5536299},
{0.1096340,0.9648124,0.5384579},
{0.1136958,0.9668548,0.5224392},
{0.1182669,0.9683608,0.5065664},
{0.1206668,0.9702151,0.4900964},
{0.1230677,0.9722692,0.4725586},
{0.1250535,0.9739877,0.4551114},
{0.1312070,0.9747684,0.4382242},
{0.1307060,0.9758148,0.4215879},
{0.1323608,0.9763757,0.4055023},
{0.1385944,0.9757127,0.3901557},
{0.1408851,0.9760659,0.3732599},
{0.1468601,0.9753398,0.3570144},
{0.1588720,0.9728106,0.3422344},
{0.1619150,0.9714277,0.3279092},
{0.1708269,0.9696889,0.3107921},
{0.1794958,0.9670205,0.2959805},
{0.1089444,0.9682283,0.3079225},
{0.0534888,0.9650199,0.3150522},
{0.0023509,0.9591639,0.3211029},
{-0.0443532,0.9508810,0.3270543},
{-0.0865708,0.9404205,0.3342527},
{-0.1372912,0.9274532,0.3398888},
{-0.2149727,0.9117590,0.3295323},
{-0.2854395,0.8905929,0.3210771},
{-0.3479467,0.8666024,0.3127121},
{-0.4059671,0.8394946,0.3043961}
};
shoToUaVsWam = {
{-0.5449278,-0.0150267,0.0729922},
{-0.5441093,-0.0221597,0.0771623},
{-0.5434771,-0.0249075,0.0806985},
{-0.5423892,-0.0331830,0.0849283},
{-0.5417064,-0.0362879,0.0879625},
{-0.5406582,-0.0434718,0.0910981},
{-0.5397725,-0.0481517,0.0939526},
{-0.5388991,-0.0535972,0.0959955},
{-0.5377228,-0.0595406,0.0990409},
{-0.5362100,-0.0681039,0.1016894},
{-0.5347816,-0.0751459,0.1042198},
{-0.5332352,-0.0829780,0.1061833},
{-0.5311932,-0.0922401,0.1087454},
{-0.5288687,-0.1027332,0.1106516},
{-0.5266333,-0.1120132,0.1122962},
{-0.5243894,-0.1195329,0.1150114},
{-0.5211909,-0.1306205,0.1174663},
{-0.5181638,-0.1402309,0.1197561},
{-0.5146998,-0.1497442,0.1231293},
{-0.5113091,-0.1591989,0.1253742},
{-0.5063139,-0.1717968,0.1289653},
{-0.5014033,-0.1835748,0.1318901},
{-0.4943922,-0.2000831,0.1343246},
{-0.4886108,-0.2120445,0.1371006},
{-0.4827470,-0.2232897,0.1399895},
{-0.4760378,-0.2357044,0.1425884},
{-0.4668517,-0.2519944,0.1450802},
{-0.4636300,-0.2562436,0.1479406},
{-0.4555401,-0.2689639,0.1504715},
{-0.4483462,-0.2789667,0.1538285},
{-0.4409941,-0.2886688,0.1571450},
{-0.4339875,-0.2973800,0.1603744},
{-0.4267885,-0.3059193,0.1636000},
{-0.4202267,-0.3128391,0.1674550},
{-0.4142546,-0.3189378,0.1707975},
{-0.4089167,-0.3235470,0.1749412},
{-0.4035799,-0.3280525,0.1788990},
{-0.3989475,-0.3315571,0.1827863},
{-0.3941655,-0.3347769,0.1872379},
{-0.3904497,-0.3366114,0.1916816},
{-0.3865210,-0.3384914,0.1962781},
{-0.3833682,-0.3396053,0.2004920},
{-0.3795156,-0.3411932,0.2050734},
{-0.3760717,-0.3419291,0.2101298},
{-0.3729798,-0.3422495,0.2150613},
{-0.3709364,-0.3410285,0.2204672},
{-0.3669841,-0.3416236,0.2260885},
{-0.3634600,-0.3414120,0.2320230},
{-0.3622364,-0.3387768,0.2377289},
{-0.3603682,-0.3364240,0.2438312},
{-0.3600591,-0.3324143,0.2497162},
{-0.3615138,-0.3264104,0.2554683},
{-0.3601852,-0.3235336,0.2609457},
{-0.3616631,-0.3168073,0.2670822},
{-0.3626981,-0.3106050,0.2729004},
{-0.3376648,-0.3397651,0.2702631},
{-0.3160576,-0.3610532,0.2687903},
{-0.2954960,-0.3791861,0.2672077},
{-0.2749304,-0.3953236,0.2657678},
{-0.2551956,-0.4097448,0.2635989},
{-0.2300126,-0.4256214,0.2616115},
{-0.1926248,-0.4413283,0.2657537},
{-0.1570436,-0.4529518,0.2695774},
{-0.1250443,-0.4606590,0.2732348},
{-0.0941014,-0.4656538,0.2771488}
};
elOffsetVsWam = {
{-0.0028254,-0.0348920,-0.0282765},
{-0.0025913,-0.0348960,-0.0282940},
{-0.0025800,-0.0349926,-0.0281756},
{-0.0022711,-0.0350084,-0.0281825},
{-0.0022102,-0.0350891,-0.0280869},
{-0.0019102,-0.0351050,-0.0280890},
{-0.0017311,-0.0351976,-0.0279844},
{-0.0014694,-0.0352517,-0.0279313},
{-0.0011990,-0.0353814,-0.0277799},
{-0.0007485,-0.0354601,-0.0276951},
{-0.0003545,-0.0356175,-0.0275004},
{0.0001389,-0.0357931,-0.0272733},
{0.0007123,-0.0359697,-0.0270310},
{0.0014157,-0.0361347,-0.0267821},
{0.0020734,-0.0363125,-0.0264972},
{0.0025643,-0.0364802,-0.0262225},
{0.0033303,-0.0366183,-0.0259424},
{0.0040292,-0.0367714,-0.0256248},
{0.0046682,-0.0368879,-0.0253474},
{0.0053799,-0.0369999,-0.0250413},
{0.0063307,-0.0371354,-0.0246147},
{0.0073608,-0.0373474,-0.0239997},
{0.0085982,-0.0372169,-0.0237902},
{0.0095575,-0.0371920,-0.0234608},
{0.0104558,-0.0371320,-0.0231709},
{0.0114662,-0.0370063,-0.0228924},
{0.0127904,-0.0367285,-0.0226368},
{0.0131759,-0.0367552,-0.0223708},
{0.0142643,-0.0365177,-0.0220905},
{0.0151414,-0.0363476,-0.0217851},
{0.0160488,-0.0361765,-0.0214172},
{0.0169020,-0.0360110,-0.0210365},
{0.0178119,-0.0358458,-0.0205625},
{0.0185608,-0.0357091,-0.0201334},
{0.0192556,-0.0355712,-0.0197209},
{0.0198535,-0.0355004,-0.0192500},
{0.0204647,-0.0354112,-0.0187681},
{0.0209945,-0.0353482,-0.0182958},
{0.0215557,-0.0352974,-0.0177327},
{0.0219567,-0.0352903,-0.0172480},
{0.0224410,-0.0352761,-0.0166433},
{0.0228979,-0.0352864,-0.0159862},
{0.0234107,-0.0352466,-0.0153172},
{0.0238835,-0.0352365,-0.0145934},
{0.0243243,-0.0352259,-0.0138731},
{0.0245955,-0.0352925,-0.0132099},
{0.0250074,-0.0352178,-0.0126229},
{0.0253056,-0.0351798,-0.0121248},
{0.0253988,-0.0352920,-0.0115920},
{0.0255680,-0.0353596,-0.0109990},
{0.0255690,-0.0355308,-0.0104302},
{0.0253374,-0.0358375,-0.0099344},
{0.0254265,-0.0359111,-0.0094279},
{0.0252161,-0.0362147,-0.0088113},
{0.0250468,-0.0364702,-0.0082206},
{0.0276762,-0.0344059,-0.0086753},
{0.0296901,-0.0326214,-0.0089075},
{0.0314528,-0.0308852,-0.0090457},
{0.0330225,-0.0291520,-0.0092019},
{0.0343483,-0.0274860,-0.0094716},
{0.0359116,-0.0253409,-0.0096537},
{0.0380446,-0.0221793,-0.0092568},
{0.0397621,-0.0190918,-0.0089151},
{0.0411116,-0.0162030,-0.0085029},
{0.0421979,-0.0133586,-0.0081170}
};
wOffsetVsWam = {
{-0.0440618,-0.0091208,-0.0006051},
{-0.0439043,-0.0098606,-0.0004241},
{-0.0438147,-0.0102572,-0.0002494},
{-0.0436240,-0.0110431,-0.0000229},
{-0.0435224,-0.0114360,0.0001305},
{-0.0433401,-0.0121056,0.0002950},
{-0.0431934,-0.0126146,0.0004463},
{-0.0430344,-0.0131431,0.0005480},
{-0.0428428,-0.0137458,0.0007401},
{-0.0425822,-0.0145238,0.0009004},
{-0.0423436,-0.0151932,0.0010874},
{-0.0420792,-0.0158978,0.0012665},
{-0.0417617,-0.0166932,0.0015167},
{-0.0413989,-0.0175527,0.0017430},
{-0.0410667,-0.0182921,0.0019815},
{-0.0408001,-0.0188375,0.0023458},
{-0.0404140,-0.0196014,0.0027369},
{-0.0400731,-0.0202308,0.0031401},
{-0.0397344,-0.0208055,0.0036481},
{-0.0394077,-0.0213355,0.0041022},
{-0.0389242,-0.0220829,0.0047175},
{-0.0384762,-0.0227101,0.0053695},
{-0.0378562,-0.0235973,0.0059221},
{-0.0374440,-0.0240782,0.0065716},
{-0.0370852,-0.0244330,0.0072609},
{-0.0366984,-0.0247921,0.0079739},
{-0.0361288,-0.0253718,0.0087167},
{-0.0362044,-0.0249787,0.0095027},
{-0.0358525,-0.0251719,0.0102944},
{-0.0356277,-0.0251258,0.0111518},
{-0.0354243,-0.0250187,0.0120077},
{-0.0353044,-0.0247579,0.0128703},
{-0.0351862,-0.0244811,0.0136970},
{-0.0351578,-0.0240167,0.0145646},
{-0.0351931,-0.0234636,0.0153592},
{-0.0353081,-0.0227112,0.0162030},
{-0.0354426,-0.0219072,0.0169970},
{-0.0356233,-0.0210115,0.0177340},
{-0.0358059,-0.0200580,0.0184558},
{-0.0360226,-0.0190207,0.0191203},
{-0.0362415,-0.0179636,0.0197196},
{-0.0364830,-0.0169206,0.0201912},
{-0.0366804,-0.0159389,0.0206277},
{-0.0368755,-0.0149573,0.0210113},
{-0.0370677,-0.0140152,0.0213204},
{-0.0372832,-0.0129106,0.0216397},
{-0.0373689,-0.0121262,0.0219437},
{-0.0374497,-0.0112478,0.0222711},
{-0.0375880,-0.0102342,0.0225257},
{-0.0376858,-0.0093398,0.0227498},
{-0.0378186,-0.0082788,0.0229394},
{-0.0379580,-0.0070294,0.0231253},
{-0.0380346,-0.0061084,0.0232606},
{-0.0381356,-0.0049394,0.0233726},
{-0.0382114,-0.0038478,0.0234539},
{-0.0378297,-0.0065851,0.0234639},
{-0.0374298,-0.0086176,0.0234468},
{-0.0369965,-0.0104696,0.0233805},
{-0.0364949,-0.0121902,0.0233350},
{-0.0359463,-0.0137795,0.0233021},
{-0.0352222,-0.0156447,0.0232301},
{-0.0340033,-0.0180965,0.0232657},
{-0.0327062,-0.0203026,0.0233047},
{-0.0314155,-0.0222536,0.0232990},
{-0.0300421,-0.0240495,0.0233259}
};
laToWrVsWam = {
{0.0491535,-0.2246752,-0.1926265},
{0.0520603,-0.2234864,-0.1932448},
{0.0534085,-0.2234501,-0.1929186},
{0.0563532,-0.2222123,-0.1935097},
{0.0577634,-0.2220385,-0.1932933},
{0.0603976,-0.2209538,-0.1937306},
{0.0624368,-0.2206321,-0.1934506},
{0.0647331,-0.2200174,-0.1933959},
{0.0671765,-0.2197602,-0.1928543},
{0.0705661,-0.2188381,-0.1926923},
{0.0735239,-0.2186394,-0.1918099},
{0.0768244,-0.2185305,-0.1906369},
{0.0803747,-0.2182874,-0.1894479},
{0.0844656,-0.2178959,-0.1881142},
{0.0880448,-0.2178673,-0.1864992},
{0.0901190,-0.2182357,-0.1850723},
{0.0933838,-0.2181641,-0.1835317},
{0.0960865,-0.2185297,-0.1816924},
{0.0980640,-0.2188815,-0.1802063},
{0.1002424,-0.2194381,-0.1783210},
{0.1035103,-0.2199959,-0.1757482},
{0.1068168,-0.2215779,-0.1717364},
{0.1109672,-0.2207315,-0.1701877},
{0.1130333,-0.2215579,-0.1677365},
{0.1143224,-0.2226682,-0.1653761},
{0.1157954,-0.2237780,-0.1628337},
{0.1187546,-0.2241374,-0.1601866},
{0.1158127,-0.2276988,-0.1572916},
{0.1168531,-0.2294133,-0.1539964},
{0.1165357,-0.2319772,-0.1503529},
{0.1163413,-0.2348175,-0.1460323},
{0.1154889,-0.2381259,-0.1412741},
{0.1151877,-0.2414849,-0.1357086},
{0.1136403,-0.2452655,-0.1301180},
{0.1117527,-0.2490616,-0.1244173},
{0.1089052,-0.2534425,-0.1179261},
{0.1060313,-0.2577208,-0.1110737},
{0.1026739,-0.2619506,-0.1041152},
{0.0994750,-0.2661527,-0.0962676},
{0.0954540,-0.2701543,-0.0889112},
{0.0919565,-0.2739594,-0.0805621},
{0.0887342,-0.2773586,-0.0721001},
{0.0860992,-0.2802827,-0.0634708},
{0.0836332,-0.2828860,-0.0545986},
{0.0813545,-0.2850780,-0.0459564},
{0.0777411,-0.2873182,-0.0374780},
{0.0761573,-0.2886371,-0.0298107},
{0.0737011,-0.2899345,-0.0224975},
{0.0701195,-0.2912870,-0.0153348},
{0.0676111,-0.2921738,-0.0079509},
{0.0637298,-0.2931518,-0.0007312},
{0.0581392,-0.2942516,0.0059861},
{0.0551122,-0.2946186,0.0127481},
{0.0503918,-0.2950697,0.0198636},
{0.0461191,-0.2952287,0.0267026},
{0.0660470,-0.2915996,0.0246468},
{0.0814364,-0.2877147,0.0242568},
{0.0954667,-0.2833760,0.0241699},
{0.1084445,-0.2786806,0.0240193},
{0.1199312,-0.2740238,0.0229666},
{0.1338659,-0.2675059,0.0228150},
{0.1548549,-0.2554540,0.0276268},
{0.1733879,-0.2427366,0.0318682},
{0.1894905,-0.2297702,0.0360414},
{0.2041148,-0.2161898,0.0399892}
};
elToWrVsWam = {
{0.0050916,-0.2337960,-0.1932317},
{0.0081560,-0.2333470,-0.1936690},
{0.0095938,-0.2337073,-0.1931680},
{0.0127293,-0.2332554,-0.1935326},
{0.0142410,-0.2334745,-0.1931628},
{0.0170575,-0.2330594,-0.1934356},
{0.0192434,-0.2332467,-0.1930043},
{0.0216987,-0.2331606,-0.1928479},
{0.0243337,-0.2335059,-0.1921142},
{0.0279838,-0.2333619,-0.1917919},
{0.0311802,-0.2338326,-0.1907226},
{0.0347453,-0.2344283,-0.1893704},
{0.0386130,-0.2349806,-0.1879312},
{0.0430668,-0.2354485,-0.1863712},
{0.0469781,-0.2361594,-0.1845178},
{0.0493189,-0.2370731,-0.1827265},
{0.0529698,-0.2377655,-0.1807948},
{0.0560134,-0.2387605,-0.1785523},
{0.0583296,-0.2396870,-0.1765582},
{0.0608347,-0.2407736,-0.1742188},
{0.0645861,-0.2420788,-0.1710307},
{0.0683405,-0.2442880,-0.1663669},
{0.0731110,-0.2443289,-0.1642656},
{0.0755893,-0.2456361,-0.1611649},
{0.0772372,-0.2471012,-0.1581152},
{0.0790971,-0.2485701,-0.1548598},
{0.0826258,-0.2495092,-0.1514699},
{0.0796083,-0.2526776,-0.1477889},
{0.0810006,-0.2545852,-0.1437020},
{0.0809080,-0.2571030,-0.1392011},
{0.0809170,-0.2598362,-0.1340247},
{0.0801845,-0.2628838,-0.1284039},
{0.0800016,-0.2659660,-0.1220117},
{0.0784824,-0.2692822,-0.1155534},
{0.0765596,-0.2725252,-0.1090581},
{0.0735971,-0.2761537,-0.1017231},
{0.0705888,-0.2796280,-0.0940767},
{0.0670505,-0.2829620,-0.0863812},
{0.0636691,-0.2862107,-0.0778118},
{0.0594314,-0.2891749,-0.0697909},
{0.0557150,-0.2919230,-0.0608425},
{0.0522512,-0.2942792,-0.0519090},
{0.0494188,-0.2962216,-0.0428432},
{0.0467577,-0.2978433,-0.0335873},
{0.0442868,-0.2990932,-0.0246360},
{0.0404578,-0.3002288,-0.0158384},
{0.0387884,-0.3007633,-0.0078670},
{0.0362513,-0.3011823,-0.0002264},
{0.0325315,-0.3015211,0.0071909},
{0.0299253,-0.3015136,0.0147989},
{0.0259112,-0.3014306,0.0222082},
{0.0201812,-0.3012810,0.0291114},
{0.0170776,-0.3007270,0.0360087},
{0.0122562,-0.3000090,0.0432363},
{0.0079077,-0.2990766,0.0501564},
{0.0282174,-0.2981847,0.0481107},
{0.0440066,-0.2963322,0.0477035},
{0.0584702,-0.2938455,0.0475504},
{0.0719496,-0.2908708,0.0473544},
{0.0839849,-0.2878033,0.0462687},
{0.0986437,-0.2831506,0.0460451},
{0.1208516,-0.2735504,0.0508925},
{0.1406817,-0.2630392,0.0551729},
{0.1580750,-0.2520238,0.0593404},
{0.1740727,-0.2402392,0.0633151}
};
wrToEeVsWam = {
{0.0323959,-0.0020272,-0.0504618},
{0.0328133,-0.0016800,-0.0502042},
{0.0332358,-0.0017572,-0.0499229},
{0.0334279,-0.0011295,-0.0498126},
{0.0338461,-0.0011662,-0.0495286},
{0.0341874,-0.0006312,-0.0493034},
{0.0345976,-0.0006701,-0.0490159},
{0.0350797,-0.0003684,-0.0486752},
{0.0356031,-0.0002458,-0.0482945},
{0.0361472,-0.0000779,-0.0478892},
{0.0366357,0.0001160,-0.0475164},
{0.0371931,0.0002563,-0.0470808},
{0.0376961,0.0003864,-0.0466782},
{0.0380925,0.0007408,-0.0463510},
{0.0385939,0.0008571,-0.0459323},
{0.0395812,0.0006499,-0.0450878},
{0.0399605,0.0009110,-0.0447474},
{0.0406171,0.0009655,-0.0441511},
{0.0410926,0.0009527,-0.0437091},
{0.0415750,0.0010722,-0.0432477},
{0.0420207,0.0012458,-0.0428102},
{0.0425006,0.0012986,-0.0423321},
{0.0425867,0.0020692,-0.0422149},
{0.0427351,0.0022595,-0.0420548},
{0.0426837,0.0023579,-0.0421016},
{0.0426310,0.0025009,-0.0421467},
{0.0425564,0.0028783,-0.0421980},
{0.0425720,0.0019396,-0.0422358},
{0.0425692,0.0017660,-0.0422462},
{0.0427285,0.0011837,-0.0421055},
{0.0428807,0.0005043,-0.0419642},
{0.0431593,-0.0002498,-0.0416799},
{0.0436306,-0.0010674,-0.0411732},
{0.0438308,-0.0020493,-0.0409227},
{0.0444386,-0.0032002,-0.0401867},
{0.0448262,-0.0044198,-0.0396368},
{0.0451739,-0.0056985,-0.0390749},
{0.0458086,-0.0071786,-0.0380794},
{0.0462223,-0.0085761,-0.0372821},
{0.0468203,-0.0102000,-0.0361084},
{0.0473726,-0.0113917,-0.0350152},
{0.0479728,-0.0130038,-0.0336082},
{0.0483884,-0.0141059,-0.0325512},
{0.0483096,-0.0154930,-0.0320335},
{0.0487181,-0.0167647,-0.0307488},
{0.0488838,-0.0179841,-0.0297817},
{0.0488658,-0.0190995,-0.0291091},
{0.0488675,-0.0201638,-0.0283794},
{0.0486952,-0.0213858,-0.0277745},
{0.0486234,-0.0224823,-0.0270243},
{0.0485408,-0.0236583,-0.0261549},
{0.0481643,-0.0250505,-0.0255474},
{0.0482118,-0.0256725,-0.0248304},
{0.0479823,-0.0270057,-0.0238409},
{0.0478421,-0.0279152,-0.0230625},
{0.0497676,-0.0243884,-0.0229866},
{0.0511475,-0.0215066,-0.0228341},
{0.0522646,-0.0188208,-0.0226758},
{0.0530341,-0.0164131,-0.0227596},
{0.0536414,-0.0141703,-0.0228430},
{0.0542807,-0.0113440,-0.0229111},
{0.0550412,-0.0073653,-0.0227205},
{0.0555467,-0.0033107,-0.0224410},
{0.0558112,0.0004528,-0.0220205},
{0.0558057,0.0039297,-0.0216860}
};
shoToElVsWam = {
{-0.5477533,-0.0499188,0.0447157},
{-0.5467006,-0.0570557,0.0488683},
{-0.5460571,-0.0599001,0.0525229},
{-0.5446603,-0.0681915,0.0567459},
{-0.5439166,-0.0713770,0.0598756},
{-0.5425685,-0.0785768,0.0630091},
{-0.5415035,-0.0833493,0.0659682},
{-0.5403685,-0.0888490,0.0680642},
{-0.5389218,-0.0949220,0.0712610},
{-0.5369584,-0.1035640,0.0739943},
{-0.5351361,-0.1107633,0.0767194},
{-0.5330963,-0.1187711,0.0789100},
{-0.5304809,-0.1282097,0.0817144},
{-0.5274530,-0.1388678,0.0838695},
{-0.5245598,-0.1483257,0.0857989},
{-0.5218251,-0.1560131,0.0887889},
{-0.5178606,-0.1672388,0.0915239},
{-0.5141347,-0.1770023,0.0941314},
{-0.5100315,-0.1866321,0.0977819},
{-0.5059292,-0.1961987,0.1003329},
{-0.4999833,-0.2089322,0.1043506},
{-0.4940426,-0.2209222,0.1078904},
{-0.4857941,-0.2373000,0.1105344},
{-0.4790534,-0.2492366,0.1136398},
{-0.4722912,-0.2604217,0.1168186},
{-0.4645716,-0.2727107,0.1196960},
{-0.4540613,-0.2887229,0.1224435},
{-0.4504542,-0.2929988,0.1255697},
{-0.4412758,-0.3054816,0.1283810},
{-0.4332048,-0.3153143,0.1320434},
{-0.4249453,-0.3248453,0.1357278},
{-0.4170856,-0.3333910,0.1393380},
{-0.4089766,-0.3417652,0.1430375},
{-0.4016659,-0.3485482,0.1473216},
{-0.3949991,-0.3545090,0.1510765},
{-0.3890632,-0.3590474,0.1556912},
{-0.3831151,-0.3634637,0.1601309},
{-0.3779529,-0.3669053,0.1644905},
{-0.3726098,-0.3700742,0.1695051},
{-0.3684929,-0.3719017,0.1744335},
{-0.3640799,-0.3737675,0.1796348},
{-0.3604703,-0.3748917,0.1845057},
{-0.3561049,-0.3764398,0.1897562},
{-0.3521883,-0.3771657,0.1955364},
{-0.3486554,-0.3774754,0.2011882},
{-0.3463408,-0.3763209,0.2072573},
{-0.3419766,-0.3768413,0.2134657},
{-0.3381544,-0.3765918,0.2198982},
{-0.3368376,-0.3740689,0.2261369},
{-0.3348002,-0.3717835,0.2328322},
{-0.3344901,-0.3679451,0.2392860},
{-0.3361764,-0.3622479,0.2455338},
{-0.3347587,-0.3594447,0.2515177},
{-0.3364470,-0.3530220,0.2582709},
{-0.3376513,-0.3470752,0.2646798},
{-0.3099886,-0.3741710,0.2615877},
{-0.2863674,-0.3936745,0.2598828},
{-0.2640432,-0.4100713,0.2581621},
{-0.2419079,-0.4244756,0.2565659},
{-0.2208473,-0.4372308,0.2541272},
{-0.1941010,-0.4509624,0.2519578},
{-0.1545803,-0.4635076,0.2564969},
{-0.1172815,-0.4720436,0.2606623},
{-0.0839327,-0.4768620,0.2647318},
{-0.0519035,-0.4790124,0.2690318}
};
shoToLaVsWam = {
{-0.5918151,-0.0590396,0.0441105},
{-0.5906049,-0.0669163,0.0484441},
{-0.5898718,-0.0701573,0.0522735},
{-0.5882842,-0.0792346,0.0567229},
{-0.5874390,-0.0828130,0.0600061},
{-0.5859086,-0.0906824,0.0633041},
{-0.5846970,-0.0959640,0.0664145},
{-0.5834029,-0.1019921,0.0686122},
{-0.5817646,-0.1086677,0.0720011},
{-0.5795407,-0.1180878,0.0748947},
{-0.5774797,-0.1259566,0.0778068},
{-0.5751754,-0.1346689,0.0801766},
{-0.5722426,-0.1449030,0.0832311},
{-0.5688518,-0.1564205,0.0856125},
{-0.5656265,-0.1666178,0.0877804},
{-0.5626252,-0.1748506,0.0911347},
{-0.5582746,-0.1868401,0.0942607},
{-0.5542078,-0.1972331,0.0972715},
{-0.5497659,-0.2074375,0.1014300},
{-0.5453369,-0.2175343,0.1044351},
{-0.5389074,-0.2310151,0.1090681},
{-0.5325188,-0.2436323,0.1132599},
{-0.5236503,-0.2608973,0.1164565},
{-0.5164974,-0.2733148,0.1202114},
{-0.5093764,-0.2848546,0.1240795},
{-0.5012699,-0.2975028,0.1276699},
{-0.4901902,-0.3140946,0.1311601},
{-0.4866586,-0.3179775,0.1350725},
{-0.4771283,-0.3306535,0.1386753},
{-0.4688325,-0.3404401,0.1431952},
{-0.4603696,-0.3498640,0.1477355},
{-0.4523900,-0.3581489,0.1522082},
{-0.4441628,-0.3662463,0.1567345},
{-0.4368237,-0.3725649,0.1618862},
{-0.4301922,-0.3779726,0.1664358},
{-0.4243713,-0.3817586,0.1718942},
{-0.4185577,-0.3853709,0.1771279},
{-0.4135763,-0.3879167,0.1822245},
{-0.4084157,-0.3901322,0.1879610},
{-0.4045156,-0.3909224,0.1935538},
{-0.4003214,-0.3917311,0.1993545},
{-0.3969533,-0.3918123,0.2046969},
{-0.3927853,-0.3923787,0.2103839},
{-0.3890638,-0.3921230,0.2165477},
{-0.3857232,-0.3914906,0.2225086},
{-0.3836241,-0.3892315,0.2288970},
{-0.3793455,-0.3889675,0.2354093},
{-0.3756041,-0.3878396,0.2421694},
{-0.3744256,-0.3843030,0.2486626},
{-0.3724860,-0.3811234,0.2555819},
{-0.3723087,-0.3762239,0.2622254},
{-0.3741344,-0.3692773,0.2686591},
{-0.3727933,-0.3655530,0.2747783},
{-0.3745826,-0.3579614,0.2816435},
{-0.3758627,-0.3509230,0.2881337},
{-0.3478182,-0.3807562,0.2850516},
{-0.3237972,-0.4022921,0.2833296},
{-0.3010397,-0.4205409,0.2815425},
{-0.2784028,-0.4366658,0.2799009},
{-0.2567936,-0.4510104,0.2774293},
{-0.2293232,-0.4666071,0.2751879},
{-0.1885836,-0.4816041,0.2797626},
{-0.1499877,-0.4923462,0.2839670},
{-0.1153482,-0.4991156,0.2880308},
{-0.0819455,-0.5030619,0.2923577}
};
shoToWrVsWam = {
{-0.5426616,-0.2837148,-0.1485160},
{-0.5385446,-0.2904027,-0.1448007},
{-0.5364633,-0.2936074,-0.1406451},
{-0.5319310,-0.3014469,-0.1367867},
{-0.5296756,-0.3048515,-0.1332872},
{-0.5255110,-0.3116362,-0.1304265},
{-0.5222601,-0.3165960,-0.1270361},
{-0.5186698,-0.3220095,-0.1247837},
{-0.5145881,-0.3284279,-0.1208532},
{-0.5089746,-0.3369259,-0.1177975},
{-0.5039558,-0.3445960,-0.1140031},
{-0.4983510,-0.3531994,-0.1104604},
{-0.4918679,-0.3631904,-0.1062168},
{-0.4843862,-0.3743164,-0.1025017},
{-0.4775818,-0.3844851,-0.0987188},
{-0.4725062,-0.3930862,-0.0939376},
{-0.4648908,-0.4050043,-0.0892710},
{-0.4581212,-0.4157628,-0.0844209},
{-0.4517020,-0.4263191,-0.0787763},
{-0.4450945,-0.4369724,-0.0738859},
{-0.4353972,-0.4510110,-0.0666801},
{-0.4257020,-0.4652102,-0.0584765},
{-0.4126830,-0.4816288,-0.0537313},
{-0.4034640,-0.4948727,-0.0475251},
{-0.3950540,-0.5075229,-0.0412966},
{-0.3854745,-0.5212808,-0.0351638},
{-0.3714356,-0.5382321,-0.0290265},
{-0.3708459,-0.5456763,-0.0222192},
{-0.3602752,-0.5600668,-0.0153210},
{-0.3522968,-0.5724173,-0.0071577},
{-0.3440283,-0.5846815,0.0017031},
{-0.3369011,-0.5962748,0.0109341},
{-0.3289750,-0.6077311,0.0210258},
{-0.3231834,-0.6178305,0.0317681},
{-0.3184394,-0.6270342,0.0420185},
{-0.3154662,-0.6352011,0.0539682},
{-0.3125264,-0.6430917,0.0660542},
{-0.3109024,-0.6498673,0.0781093},
{-0.3089407,-0.6562850,0.0916933},
{-0.3090616,-0.6610767,0.1046427},
{-0.3083649,-0.6656905,0.1187924},
{-0.3082191,-0.6691709,0.1325967},
{-0.3066860,-0.6726614,0.1469130},
{-0.3054306,-0.6750089,0.1619491},
{-0.3043687,-0.6765686,0.1765522},
{-0.3058830,-0.6765497,0.1914189},
{-0.3031882,-0.6776046,0.2055986},
{-0.3019031,-0.6777741,0.2196719},
{-0.3043061,-0.6755900,0.2333278},
{-0.3048749,-0.6732972,0.2476310},
{-0.3085789,-0.6693757,0.2614942},
{-0.3159952,-0.6635289,0.2746452},
{-0.3176811,-0.6601717,0.2875264},
{-0.3241908,-0.6530310,0.3015072},
{-0.3297436,-0.6461518,0.3148363},
{-0.2817712,-0.6723558,0.3096984},
{-0.2423608,-0.6900067,0.3075863},
{-0.2055731,-0.7039169,0.3057125},
{-0.1699583,-0.7153464,0.3039202},
{-0.1368624,-0.7250342,0.3003959},
{-0.0954572,-0.7341130,0.2980029},
{-0.0337287,-0.7370580,0.3073894},
{0.0234002,-0.7350828,0.3158352},
{0.0741423,-0.7288858,0.3240722},
{0.1221692,-0.7192517,0.3323469}
};
shoToThVsWam = {
{-0.5808328,-0.3298724,-0.1449893},
{-0.5767469,-0.3365861,-0.1420289},
{-0.5750673,-0.3394856,-0.1384280},
{-0.5702205,-0.3476116,-0.1351318},
{-0.5680844,-0.3509298,-0.1320414},
{-0.5633867,-0.3581627,-0.1295795},
{-0.5598295,-0.3633709,-0.1262240},
{-0.5557405,-0.3691833,-0.1241496},
{-0.5511794,-0.3759758,-0.1203334},
{-0.5447838,-0.3850646,-0.1171925},
{-0.5391746,-0.3931694,-0.1134928},
{-0.5329736,-0.4022003,-0.1100292},
{-0.5258861,-0.4126119,-0.1056980},
{-0.5175365,-0.4243227,-0.1018492},
{-0.5099744,-0.4349841,-0.0979660},
{-0.5045989,-0.4437796,-0.0934455},
{-0.4960754,-0.4562565,-0.0884151},
{-0.4885845,-0.4674438,-0.0833875},
{-0.4814875,-0.4783817,-0.0772569},
{-0.4742399,-0.4893883,-0.0721203},
{-0.4635038,-0.5039692,-0.0643460},
{-0.4528385,-0.5186354,-0.0554166},
{-0.4384415,-0.5357033,-0.0502026},
{-0.4283541,-0.5492999,-0.0432635},
{-0.4190721,-0.5622681,-0.0361885},
{-0.4085292,-0.5763479,-0.0291559},
{-0.3931315,-0.5937322,-0.0220251},
{-0.3929042,-0.6008859,-0.0141360},
{-0.3816789,-0.6153879,-0.0062958},
{-0.3734985,-0.6276519,0.0028233},
{-0.3651296,-0.6397371,0.0128212},
{-0.3581182,-0.6511121,0.0228801},
{-0.3503647,-0.6623318,0.0337241},
{-0.3448627,-0.6720447,0.0455821},
{-0.3408049,-0.6807909,0.0565097},
{-0.3384865,-0.6884214,0.0693847},
{-0.3362991,-0.6957172,0.0823456},
{-0.3355565,-0.7018291,0.0952014},
{-0.3347458,-0.7074945,0.1093478},
{-0.3358817,-0.7114592,0.1231435},
{-0.3358990,-0.7154038,0.1380396},
{-0.3369314,-0.7179237,0.1525661},
{-0.3359603,-0.7207634,0.1676305},
{-0.3351962,-0.7221265,0.1841739},
{-0.3348533,-0.7228649,0.1995161},
{-0.3370644,-0.7219992,0.2151268},
{-0.3346858,-0.7221599,0.2305533},
{-0.3336654,-0.7214699,0.2457838},
{-0.3365665,-0.7182412,0.2605334},
{-0.3375261,-0.7149845,0.2758457},
{-0.3417762,-0.7099994,0.2906087},
{-0.3499559,-0.7029569,0.3045134},
{-0.3519569,-0.6989199,0.3179195},
{-0.3592141,-0.6905203,0.3326187},
{-0.3654218,-0.6827723,0.3462369},
{-0.3149998,-0.7116003,0.3406131},
{-0.2734826,-0.7312365,0.3381075},
{-0.2347033,-0.7467859,0.3359396},
{-0.1971268,-0.7595653,0.3340293},
{-0.1620236,-0.7703783,0.3305758},
{-0.1181665,-0.7807648,0.3281342},
{-0.0527747,-0.7849119,0.3381669},
{0.0080188,-0.7839773,0.3470240},
{0.0619982,-0.7784966,0.3555570},
{0.1131749,-0.7692640,0.3642509}
};
shoToPiVsWam = {
{-0.5570581,-0.3313602,-0.1820222},
{-0.5527729,-0.3378135,-0.1787090},
{-0.5508217,-0.3407675,-0.1748468},
{-0.5458880,-0.3484338,-0.1713907},
{-0.5434905,-0.3517772,-0.1680309},
{-0.5385578,-0.3586211,-0.1653865},
{-0.5346833,-0.3638579,-0.1618496},
{-0.5301340,-0.3694522,-0.1596802},
{-0.5251461,-0.3761556,-0.1556468},
{-0.5182833,-0.3851217,-0.1523014},
{-0.5123054,-0.3930844,-0.1483420},
{-0.5056865,-0.4020123,-0.1445704},
{-0.4981236,-0.4123273,-0.1400757},
{-0.4893889,-0.4237753,-0.1360992},
{-0.4815002,-0.4343517,-0.1318544},
{-0.4754540,-0.4433010,-0.1266452},
{-0.4665237,-0.4555828,-0.1215068},
{-0.4585085,-0.4667289,-0.1160802},
{-0.4508968,-0.4776724,-0.1097954},
{-0.4431908,-0.4885875,-0.1044187},
{-0.4320593,-0.5030370,-0.0963812},
{-0.4209104,-0.5176598,-0.0872182},
{-0.4063165,-0.5341424,-0.0820472},
{-0.3959257,-0.5475854,-0.0751756},
{-0.3866011,-0.5604743,-0.0682167},
{-0.3759928,-0.5744392,-0.0613227},
{-0.3605407,-0.5915280,-0.0543415},
{-0.3600870,-0.5993907,-0.0466939},
{-0.3488032,-0.6140241,-0.0389220},
{-0.3404658,-0.6267369,-0.0297279},
{-0.3317980,-0.6393452,-0.0197980},
{-0.3245517,-0.6513064,-0.0095358},
{-0.3164834,-0.6631608,0.0017511},
{-0.3106644,-0.6736436,0.0136527},
{-0.3061376,-0.6832875,0.0251593},
{-0.3034286,-0.6918781,0.0383854},
{-0.3008978,-0.7001830,0.0517238},
{-0.2997440,-0.7074413,0.0654314},
{-0.2984925,-0.7142210,0.0801065},
{-0.2992094,-0.7194484,0.0948613},
{-0.2987381,-0.7243399,0.1105724},
{-0.2992310,-0.7281430,0.1261544},
{-0.2979917,-0.7318318,0.1420888},
{-0.2970876,-0.7343480,0.1589045},
{-0.2965522,-0.7360450,0.1753421},
{-0.2986918,-0.7361163,0.1917489},
{-0.2962833,-0.7371697,0.2076772},
{-0.2953286,-0.7372885,0.2235200},
{-0.2983024,-0.7350459,0.2387085},
{-0.2993604,-0.7326314,0.2546336},
{-0.3037036,-0.7285557,0.2700943},
{-0.3121988,-0.7225945,0.2844862},
{-0.3141265,-0.7190644,0.2984358},
{-0.3216333,-0.7116718,0.3139460},
{-0.3279768,-0.7046210,0.3281863},
{-0.2760919,-0.7306670,0.3226424},
{-0.2336439,-0.7479879,0.3203221},
{-0.1940219,-0.7614355,0.3182893},
{-0.1558674,-0.7723343,0.3163229},
{-0.1204057,-0.7813724,0.3128530},
{-0.0761352,-0.7895488,0.3103934},
{-0.0101136,-0.7906206,0.3205568},
{0.0509880,-0.7865383,0.3296644},
{0.1052070,-0.7781460,0.3385088},
{0.1562799,-0.7662287,0.3475004}
};
shoToEeVsWam = {
{-0.5102657,-0.2857421,-0.1989778},
{-0.5057313,-0.2920827,-0.1950049},
{-0.5032275,-0.2953646,-0.1905679},
{-0.4985031,-0.3025764,-0.1865993},
{-0.4958296,-0.3060176,-0.1828158},
{-0.4913236,-0.3122674,-0.1797299},
{-0.4876625,-0.3172662,-0.1760520},
{-0.4835901,-0.3223779,-0.1734589},
{-0.4789850,-0.3286737,-0.1691477},
{-0.4728274,-0.3370038,-0.1656867},
{-0.4673201,-0.3444800,-0.1615195},
{-0.4611579,-0.3529430,-0.1575412},
{-0.4541718,-0.3628039,-0.1528950},
{-0.4462937,-0.3735756,-0.1488527},
{-0.4389879,-0.3836279,-0.1446511},
{-0.4329250,-0.3924363,-0.1390254},
{-0.4249303,-0.4040933,-0.1340183},
{-0.4175041,-0.4147973,-0.1285720},
{-0.4106093,-0.4253664,-0.1224854},
{-0.4035194,-0.4359002,-0.1171336},
{-0.3933765,-0.4497652,-0.1094903},
{-0.3832014,-0.4639116,-0.1008086},
{-0.3700964,-0.4795596,-0.0959461},
{-0.3607289,-0.4926133,-0.0895799},
{-0.3523703,-0.5051649,-0.0833982},
{-0.3428435,-0.5187799,-0.0773105},
{-0.3288792,-0.5353538,-0.0712245},
{-0.3282739,-0.5437367,-0.0644550},
{-0.3177060,-0.5583009,-0.0575672},
{-0.3095683,-0.5712336,-0.0492632},
{-0.3011476,-0.5841772,-0.0402610},
{-0.2937418,-0.5965246,-0.0307458},
{-0.2853445,-0.6087986,-0.0201474},
{-0.2793527,-0.6198797,-0.0091545},
{-0.2740009,-0.6302344,0.0018317},
{-0.2706400,-0.6396210,0.0143314},
{-0.2673525,-0.6487902,0.0269793},
{-0.2650938,-0.6570459,0.0400299},
{-0.2627184,-0.6648611,0.0544113},
{-0.2622412,-0.6712766,0.0685343},
{-0.2609923,-0.6770822,0.0837772},
{-0.2602463,-0.6821748,0.0989885},
{-0.2582976,-0.6867673,0.1143618},
{-0.2571209,-0.6905019,0.1299156},
{-0.2556506,-0.6933334,0.1458034},
{-0.2569992,-0.6945338,0.1616373},
{-0.2543224,-0.6967042,0.1764896},
{-0.2530356,-0.6979379,0.1912925},
{-0.2556109,-0.6969758,0.2055533},
{-0.2562516,-0.6957795,0.2206067},
{-0.2600381,-0.6930340,0.2353394},
{-0.2678309,-0.6885794,0.2490978},
{-0.2694693,-0.6858442,0.2626960},
{-0.2762085,-0.6800367,0.2776663},
{-0.2819016,-0.6740670,0.2917737},
{-0.2320035,-0.6967442,0.2867118},
{-0.1912133,-0.7115133,0.2847522},
{-0.1533085,-0.7227377,0.2830367},
{-0.1169242,-0.7317595,0.2811606},
{-0.0832210,-0.7392045,0.2775529},
{-0.0411765,-0.7454569,0.2750918},
{0.0213125,-0.7444233,0.2846689},
{0.0789470,-0.7383935,0.2933942},
{0.1299536,-0.7284330,0.3020518},
{0.1779749,-0.7153220,0.3106608}
};
(* 
WARNING: Logging before InitGoogleLogging() is written to STDERR
W1215 11:18:45.598619  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          4.569590e+03
Final                            2.016279e+02
Change                           4.367963e+03

Minimizer iterations                      173
Successful steps                          168
Unsuccessful steps                          5
Line search steps                         268

Time (in seconds):
Preprocessor                           0.0001

  Residual evaluation                  0.0122
    Line search cost evaluation        0.0000
  Jacobian evaluation                  1.6038
    Line search gradient evaluation    1.1357
  Linear solver                        0.0027
  Line search polynomial minimization  0.0020
Minimizer                              1.6237

Postprocessor                          0.0000
Total                                  1.6238

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:18:45.856487  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:18:45.856518  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0032
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0032

Postprocessor                          0.0000
Total                                  0.0032

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA0 = {
{-0.4842216,-0.0212992,-0.4736113}
};
fitErrEl0 = {
{-0.3466928,0.3638771,-0.2600345}
};
fitErrLa0 = {
{-0.3531767,0.3604182,-0.2847402}
};
fitErrWr0 = {
{-0.3938596,0.4119234,-0.5525586}
};
fitErrEe0 = {
{-0.3794310,0.4651322,-0.6180588}
};
rMatsBase0 = {
{0.5555800,0.7608863,-0.3352356},
{0.8296651,-0.4808206,0.2836679},
{0.0546508,-0.4357335,-0.8984151}
};
outThetasWam0 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          4.834082e+03
Final                            1.931708e+02
Change                           4.640912e+03

Minimizer iterations                      268
Successful steps                          185
Unsuccessful steps                         83
Line search steps                         419

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0191
    Line search cost evaluation        0.0000
  Jacobian evaluation                  2.0264
    Line search gradient evaluation    1.5082
  Linear solver                        0.0041
  Line search polynomial minimization  0.0029
Minimizer                              2.0566

Postprocessor                          0.0000
Total                                  2.0566

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:18:47.917270  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:18:47.917311  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0031
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0031

Postprocessor                          0.0000
Total                                  0.0032

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA1 = {
{-0.4936858,-0.0273462,-0.4704969}
};
fitErrEl1 = {
{-0.3462366,0.3599323,-0.2518977}
};
fitErrLa1 = {
{-0.3526593,0.3564955,-0.2763814}
};
fitErrWr1 = {
{-0.3938069,0.4090517,-0.5411299}
};
fitErrEe1 = {
{-0.3796352,0.4625802,-0.6056348}
};
rMatsBase1 = {
{0.5507207,0.7575182,-0.3505322},
{0.8333138,-0.4748781,0.2829821},
{0.0479041,-0.4479474,-0.8927756}
};
outThetasWam1 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.004412e+03
Final                            1.891270e+02
Change                           4.815285e+03

Minimizer iterations                       63
Successful steps                           63
Unsuccessful steps                          0
Line search steps                          63

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0045
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.5151
    Line search gradient evaluation    0.3393
  Linear solver                        0.0010
  Line search polynomial minimization  0.0004
Minimizer                              0.5221

Postprocessor                          0.0000
Total                                  0.5221

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:18:48.443600  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:18:48.443630  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0030
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0031

Postprocessor                          0.0000
Total                                  0.0031

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA2 = {
{-0.4891040,-0.0304959,-0.4665787}
};
fitErrEl2 = {
{-0.3442718,0.3574731,-0.2468218}
};
fitErrLa2 = {
{-0.3506862,0.3541997,-0.2711013}
};
fitErrWr2 = {
{-0.3933592,0.4063309,-0.5334698}
};
fitErrEe2 = {
{-0.3793396,0.4596900,-0.5972826}
};
rMatsBase2 = {
{0.5469601,0.7619327,-0.3468330},
{0.8355656,-0.4713172,0.2822944},
{0.0516210,-0.4442055,-0.8944365}
};
outThetasWam2 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 
W1215 11:18:48.902382  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.270056e+03
Final                            1.806144e+02
Change                           5.089442e+03

Minimizer iterations                      128
Successful steps                           93
Unsuccessful steps                         35
Line search steps                         196

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0091
    Line search cost evaluation        0.0000
  Jacobian evaluation                  1.0042
    Line search gradient evaluation    0.7417
  Linear solver                        0.0022
  Line search polynomial minimization  0.0015
Minimizer                              1.0190

Postprocessor                          0.0000
Total                                  1.0191

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:18:49.466882  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:18:49.466910  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0001

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0031
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0031

Postprocessor                          0.0000
Total                                  0.0031

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA3 = {
{-0.4993149,-0.0374182,-0.4633660}
};
fitErrEl3 = {
{-0.3421498,0.3529099,-0.2368323}
};
fitErrLa3 = {
{-0.3484073,0.3495163,-0.2607348}
};
fitErrWr3 = {
{-0.3902238,0.4031772,-0.5194874}
};
fitErrEe3 = {
{-0.3764298,0.4572223,-0.5823486}
};
rMatsBase3 = {
{0.5393146,0.7584209,-0.3659749},
{0.8408653,-0.4614386,0.2828781},
{0.0456657,-0.4602958,-0.8865903}
};
outThetasWam3 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 
W1215 11:18:51.958288  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:18:52.719249  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.410359e+03
Final                            1.771309e+02
Change                           5.233228e+03

Minimizer iterations                      371
Successful steps                          337
Unsuccessful steps                         34
Line search steps                         778

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0289
    Line search cost evaluation        0.0000
  Jacobian evaluation                  4.2266
    Line search gradient evaluation    3.2057
  Linear solver                        0.0067
  Line search polynomial minimization  0.0071
Minimizer                              4.2763

Postprocessor                          0.0000
Total                                  4.2764

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:18:53.747593  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:18:53.747622  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0032
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0032

Postprocessor                          0.0000
Total                                  0.0033

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA4 = {
{-0.4684702,-0.0432818,-0.4570949}
};
fitErrEl4 = {
{-0.3398797,0.3504009,-0.2316674}
};
fitErrLa4 = {
{-0.3460923,0.3470726,-0.2553537}
};
fitErrWr4 = {
{-0.3885273,0.4006687,-0.5117805}
};
fitErrEe4 = {
{-0.3747210,0.4546295,-0.5739358}
};
rMatsBase4 = {
{0.5273475,0.7866362,-0.3211045},
{0.8459532,-0.4508987,0.2846989},
{0.0791688,-0.4217747,-0.9032377}
};
outThetasWam4 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.588582e+03
Final                            1.714278e+02
Change                           5.417154e+03

Minimizer iterations                      197
Successful steps                          136
Unsuccessful steps                         61
Line search steps                         413

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0150
    Line search cost evaluation        0.0000
  Jacobian evaluation                  1.8520
    Line search gradient evaluation    1.4564
  Linear solver                        0.0041
  Line search polynomial minimization  0.0037
Minimizer                              1.8791

Postprocessor                          0.0000
Total                                  1.8792

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:18:55.630889  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:18:55.631228  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0033
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0033

Postprocessor                          0.0000
Total                                  0.0034

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA5 = {
{-0.4978434,-0.0476775,-0.4572167}
};
fitErrEl5 = {
{-0.3376491,0.3460366,-0.2237600}
};
fitErrLa5 = {
{-0.3437308,0.3425671,-0.2471764}
};
fitErrWr5 = {
{-0.3850903,0.3975046,-0.5003163}
};
fitErrEe5 = {
{-0.3712543,0.4520517,-0.5615015}
};
rMatsBase5 = {
{0.5269881,0.7646993,-0.3708348},
{0.8485335,-0.4489412,0.2800762},
{0.0476910,-0.4622626,-0.8854597}
};
outThetasWam5 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 
W1215 11:18:55.946033  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:18:56.410742  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.720953e+03
Final                            1.678698e+02
Change                           5.553083e+03

Minimizer iterations                      187
Successful steps                          141
Unsuccessful steps                         46
Line search steps                         403

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0140
    Line search cost evaluation        0.0000
  Jacobian evaluation                  1.8346
    Line search gradient evaluation    1.4320
  Linear solver                        0.0040
  Line search polynomial minimization  0.0038
Minimizer                              1.8605

Postprocessor                          0.0000
Total                                  1.8606

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:18:57.496459  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:18:57.496497  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0001

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0031
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0031

Postprocessor                          0.0000
Total                                  0.0033

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA6 = {
{-0.4945312,-0.0525863,-0.4541656}
};
fitErrEl6 = {
{-0.3344559,0.3422640,-0.2177739}
};
fitErrLa6 = {
{-0.3404652,0.3387822,-0.2409694}
};
fitErrWr6 = {
{-0.3816376,0.3939832,-0.4908231}
};
fitErrEe6 = {
{-0.3677618,0.4484796,-0.5511196}
};
rMatsBase6 = {
{0.5208868,0.7688216,-0.3709317},
{0.8521226,-0.4425363,0.2793720},
{0.0506364,-0.4616005,-0.8856416}
};
outThetasWam6 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.818288e+03
Final                            1.647899e+02
Change                           5.653498e+03

Minimizer iterations                      110
Successful steps                           96
Unsuccessful steps                         14
Line search steps                         239

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0090
    Line search cost evaluation        0.0000
  Jacobian evaluation                  1.2464
    Line search gradient evaluation    0.9579
  Linear solver                        0.0027
  Line search polynomial minimization  0.0025
Minimizer                              1.2632

Postprocessor                          0.0000
Total                                  1.2633

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:18:58.764106  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:18:58.764142  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0032
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0033

Postprocessor                          0.0000
Total                                  0.0033

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA7 = {
{-0.4951868,-0.0579520,-0.4522474}
};
fitErrEl7 = {
{-0.3318180,0.3381612,-0.2124603}
};
fitErrLa7 = {
{-0.3377534,0.3345895,-0.2355143}
};
fitErrWr7 = {
{-0.3780639,0.3904956,-0.4821271}
};
fitErrEe7 = {
{-0.3639929,0.4453119,-0.5414457}
};
rMatsBase7 = {
{0.5154855,0.7699878,-0.3760233},
{0.8554684,-0.4370900,0.2777158},
{0.0494818,-0.4648345,-0.8840138}
};
outThetasWam7 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 
W1215 11:18:58.986280  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.951275e+03
Final                            1.611563e+02
Change                           5.790118e+03

Minimizer iterations                      325
Successful steps                          230
Unsuccessful steps                         95
Line search steps                         645

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0264
    Line search cost evaluation        0.0000
  Jacobian evaluation                  3.1625
    Line search gradient evaluation    2.4497
  Linear solver                        0.0071
  Line search polynomial minimization  0.0064
Minimizer                              3.2097

Postprocessor                          0.0000
Total                                  3.2097

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:19:01.978183  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:19:01.978219  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0032
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0032

Postprocessor                          0.0000
Total                                  0.0033

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA8 = {
{-0.4901843,-0.0642378,-0.4488807}
};
fitErrEl8 = {
{-0.3270727,0.3330115,-0.2053577}
};
fitErrLa8 = {
{-0.3329041,0.3293950,-0.2281240}
};
fitErrWr8 = {
{-0.3725827,0.3855841,-0.4703139}
};
fitErrEe8 = {
{-0.3583506,0.4405281,-0.5284756}
};
rMatsBase8 = {
{0.5076807,0.7751884,-0.3759565},
{0.8599872,-0.4297353,0.2752264},
{0.0517905,-0.4630449,-0.8848204}
};
outThetasWam8 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 
W1215 11:19:02.146481  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:02.359321  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:04.127427  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:04.747897  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:04.778940  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:05.419024  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.053822e+03
Final                            1.576821e+02
Change                           5.896140e+03

Minimizer iterations                      501
Successful steps                          402
Unsuccessful steps                         99
Line search steps                        1121

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0370
    Line search cost evaluation        0.0000
  Jacobian evaluation                  5.2358
    Line search gradient evaluation    4.0801
  Linear solver                        0.0092
  Line search polynomial minimization  0.0093
Minimizer                              5.3011

Postprocessor                          0.0000
Total                                  5.3012

Termination:                   NO_CONVERGENCE (Maximum number of iterations reached. Number of iterations: 500.)

*) 
(* 
W1215 11:19:07.283704  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:19:07.283736  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0032
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0032

Postprocessor                          0.0000
Total                                  0.0033

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA9 = {
{-0.4845757,-0.0732224,-0.4458575}
};
fitErrEl9 = {
{-0.3225033,0.3261590,-0.1978000}
};
fitErrLa9 = {
{-0.3282120,0.3223744,-0.2203518}
};
fitErrWr9 = {
{-0.3662743,0.3796374,-0.4574066}
};
fitErrEe9 = {
{-0.3518528,0.4347798,-0.5141683}
};
rMatsBase9 = {
{0.4988448,0.7819030,-0.3738737},
{0.8652997,-0.4248836,0.2659519},
{0.0490958,-0.4561815,-0.8885314}
};
outThetasWam9 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.140894e+03
Final                            1.548879e+02
Change                           5.986006e+03

Minimizer iterations                      174
Successful steps                          114
Unsuccessful steps                         60
Line search steps                         298

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0139
    Line search cost evaluation        0.0000
  Jacobian evaluation                  1.4860
    Line search gradient evaluation    1.1339
  Linear solver                        0.0033
  Line search polynomial minimization  0.0025
Minimizer                              1.5090

Postprocessor                          0.0000
Total                                  1.5091

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:19:08.797099  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:19:08.797325  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0034
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0034

Postprocessor                          0.0000
Total                                  0.0034

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA10 = {
{-0.4773219,-0.0809340,-0.4427399}
};
fitErrEl10 = {
{-0.3164771,0.3194061,-0.1909885}
};
fitErrLa10 = {
{-0.3220869,0.3155617,-0.2132854}
};
fitErrWr10 = {
{-0.3590660,0.3730039,-0.4446941}
};
fitErrEe10 = {
{-0.3445309,0.4283362,-0.5001303}
};
rMatsBase10 = {
{0.4901622,0.7881312,-0.3722769},
{0.8700325,-0.4165368,0.2637054},
{0.0527674,-0.4531515,-0.8898704}
};
outThetasWam10 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 
W1215 11:19:09.159409  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:09.271497  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:09.504916  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:09.529879  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:09.685112  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:10.025312  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:10.347996  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:10.558419  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:10.653200  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:10.752869  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:11.134466  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:11.407066  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.199258e+03
Final                            1.524092e+02
Change                           6.046848e+03

Minimizer iterations                      311
Successful steps                          261
Unsuccessful steps                         50
Line search steps                         704

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0228
    Line search cost evaluation        0.0000
  Jacobian evaluation                  3.4596
    Line search gradient evaluation    2.6945
  Linear solver                        0.0068
  Line search polynomial minimization  0.0067
Minimizer                              3.5032

Postprocessor                          0.0000
Total                                  3.5032

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:19:12.304757  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:19:12.304790  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0031
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0031

Postprocessor                          0.0000
Total                                  0.0031

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA11 = {
{-0.4725957,-0.0890760,-0.4404296}
};
fitErrEl11 = {
{-0.3095910,0.3115417,-0.1845313}
};
fitErrLa11 = {
{-0.3151118,0.3076429,-0.2065994}
};
fitErrWr11 = {
{-0.3506844,0.3651576,-0.4313821}
};
fitErrEe11 = {
{-0.3359707,0.4206230,-0.4852921}
};
rMatsBase11 = {
{0.4819737,0.7914148,-0.3759839},
{0.8744725,-0.4076702,0.2628744},
{0.0547652,-0.4554861,-0.8885568}
};
outThetasWam11 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 
W1215 11:19:12.808372  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.258033e+03
Final                            1.497259e+02
Change                           6.108307e+03

Minimizer iterations                       72
Successful steps                           58
Unsuccessful steps                         14
Line search steps                         134

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0052
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.6734
    Line search gradient evaluation    0.5099
  Linear solver                        0.0014
  Line search polynomial minimization  0.0012
Minimizer                              0.6828

Postprocessor                          0.0000
Total                                  0.6828

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:19:12.991760  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:19:12.991791  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0030
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0030

Postprocessor                          0.0000
Total                                  0.0031

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA12 = {
{-0.4706070,-0.0984190,-0.4378725}
};
fitErrEl12 = {
{-0.3015178,0.3023161,-0.1766427}
};
fitErrLa12 = {
{-0.3069132,0.2983568,-0.1983712}
};
fitErrWr12 = {
{-0.3409684,0.3559840,-0.4156924}
};
fitErrEe12 = {
{-0.3261583,0.4115533,-0.4679453}
};
rMatsBase12 = {
{0.4724954,0.7922263,-0.3861678},
{0.8793600,-0.3944694,0.2666831},
{0.0589420,-0.4655870,-0.8830371}
};
outThetasWam12 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 
W1215 11:19:13.296572  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:13.324837  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.262118e+03
Final                            1.477014e+02
Change                           6.114416e+03

Minimizer iterations                       75
Successful steps                           65
Unsuccessful steps                         10
Line search steps                         132

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0054
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.7007
    Line search gradient evaluation    0.5192
  Linear solver                        0.0015
  Line search polynomial minimization  0.0011
Minimizer                              0.7102

Postprocessor                          0.0000
Total                                  0.7102

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:19:13.706094  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:19:13.706194  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0031
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0031

Postprocessor                          0.0000
Total                                  0.0032

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA13 = {
{-0.4663975,-0.1092346,-0.4357503}
};
fitErrEl13 = {
{-0.2928720,0.2916779,-0.1693639}
};
fitErrLa13 = {
{-0.2981691,0.2876844,-0.1908116}
};
fitErrWr13 = {
{-0.3304673,0.3453604,-0.3995744}
};
fitErrEe13 = {
{-0.3157276,0.4012156,-0.4500551}
};
rMatsBase13 = {
{0.4628318,0.7943571,-0.3934254},
{0.8842785,-0.3827173,0.2675424},
{0.0619536,-0.4717247,-0.8795667}
};
outThetasWam13 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 
W1215 11:19:14.151930  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:14.693820  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:15.134600  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:16.182870  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.253217e+03
Final                            1.457636e+02
Change                           6.107454e+03

Minimizer iterations                      245
Successful steps                          196
Unsuccessful steps                         49
Line search steps                         507

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0188
    Line search cost evaluation        0.0000
  Jacobian evaluation                  2.6020
    Line search gradient evaluation    2.0054
  Linear solver                        0.0050
  Line search polynomial minimization  0.0047
Minimizer                              2.6356

Postprocessor                          0.0000
Total                                  2.6356

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:19:16.346124  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:19:16.346153  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0032
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0032

Postprocessor                          0.0000
Total                                  0.0032

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA14 = {
{-0.4605835,-0.1188129,-0.4336811}
};
fitErrEl14 = {
{-0.2838334,0.2816052,-0.1626668}
};
fitErrLa14 = {
{-0.2890501,0.2776812,-0.1837793}
};
fitErrWr14 = {
{-0.3200571,0.3348392,-0.3839802}
};
fitErrEe14 = {
{-0.3052735,0.3907015,-0.4326529}
};
rMatsBase14 = {
{0.4530700,0.7970970,-0.3992041},
{0.8887048,-0.3685716,0.2726879},
{0.0702234,-0.4783214,-0.8753727}
};
outThetasWam14 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.312537e+03
Final                            1.430052e+02
Change                           6.169532e+03

Minimizer iterations                      104
Successful steps                           84
Unsuccessful steps                         20
Line search steps                         180

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0086
    Line search cost evaluation        0.0000
  Jacobian evaluation                  1.0175
    Line search gradient evaluation    0.7557
  Linear solver                        0.0025
  Line search polynomial minimization  0.0020
Minimizer                              1.0330

Postprocessor                          0.0000
Total                                  1.0330

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:19:17.383575  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:19:17.383610  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0032
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0032

Postprocessor                          0.0000
Total                                  0.0033

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA15 = {
{-0.4565400,-0.1267101,-0.4307403}
};
fitErrEl15 = {
{-0.2746687,0.2731895,-0.1545705}
};
fitErrLa15 = {
{-0.2797287,0.2693442,-0.1750912}
};
fitErrWr15 = {
{-0.3100076,0.3257696,-0.3682665}
};
fitErrEe15 = {
{-0.2945060,0.3813517,-0.4149749}
};
rMatsBase15 = {
{0.4436476,0.7978833,-0.4081165},
{0.8936409,-0.3594507,0.2687027},
{0.0676956,-0.4839189,-0.8724906}
};
outThetasWam15 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.308851e+03
Final                            1.406012e+02
Change                           6.168250e+03

Minimizer iterations                       43
Successful steps                           33
Unsuccessful steps                         10
Line search steps                          56

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0036
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.3546
    Line search gradient evaluation    0.2516
  Linear solver                        0.0011
  Line search polynomial minimization  0.0007
Minimizer                              0.3611

Postprocessor                          0.0000
Total                                  0.3611

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:19:17.749063  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:19:17.749099  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0032
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0032

Postprocessor                          0.0000
Total                                  0.0033

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA16 = {
{-0.4505846,-0.1382008,-0.4279302}
};
fitErrEl16 = {
{-0.2634917,0.2613674,-0.1453689}
};
fitErrLa16 = {
{-0.2683997,0.2576495,-0.1652602}
};
fitErrWr16 = {
{-0.2975185,0.3133340,-0.3487887}
};
fitErrEe16 = {
{-0.2820586,0.3690148,-0.3935355}
};
rMatsBase16 = {
{0.4311115,0.8000805,-0.4171498},
{0.8993823,-0.3438960,0.2699020},
{0.0724872,-0.4915350,-0.8678358}
};
outThetasWam16 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.309242e+03
Final                            1.377589e+02
Change                           6.171483e+03

Minimizer iterations                      108
Successful steps                           76
Unsuccessful steps                         32
Line search steps                         176

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0084
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.8956
    Line search gradient evaluation    0.6710
  Linear solver                        0.0026
  Line search polynomial minimization  0.0020
Minimizer                              0.9111

Postprocessor                          0.0000
Total                                  0.9111

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:19:18.664486  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:19:18.664520  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0031
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0031

Postprocessor                          0.0000
Total                                  0.0032

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA17 = {
{-0.4440445,-0.1482613,-0.4251676}
};
fitErrEl17 = {
{-0.2518020,0.2502780,-0.1363857}
};
fitErrLa17 = {
{-0.2565646,0.2467893,-0.1555586}
};
fitErrWr17 = {
{-0.2849627,0.3011036,-0.3295266}
};
fitErrEe17 = {
{-0.2692425,0.3566379,-0.3721328}
};
rMatsBase17 = {
{0.4185705,0.8018205,-0.4264770},
{0.9049623,-0.3287170,0.2701635},
{0.0764324,-0.4990281,-0.8632086}
};
outThetasWam17 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.338747e+03
Final                            1.346231e+02
Change                           6.204124e+03

Minimizer iterations                       25
Successful steps                           25
Unsuccessful steps                          0
Line search steps                          12

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0018
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.1667
    Line search gradient evaluation    0.0950
  Linear solver                        0.0004
  Line search polynomial minimization  0.0001
Minimizer                              0.1694

Postprocessor                          0.0000
Total                                  0.1695

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:19:18.838153  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:19:18.838186  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0031
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0031

Postprocessor                          0.0000
Total                                  0.0032

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA18 = {
{-0.4373428,-0.1581404,-0.4213387}
};
fitErrEl18 = {
{-0.2397626,0.2393262,-0.1259127}
};
fitErrLa18 = {
{-0.2443075,0.2360189,-0.1441851}
};
fitErrWr18 = {
{-0.2721387,0.2890329,-0.3094521}
};
fitErrEe18 = {
{-0.2562251,0.3443648,-0.3501734}
};
rMatsBase18 = {
{0.4051498,0.8034204,-0.4363133},
{0.9106277,-0.3121825,0.2707385},
{0.0813074,-0.5070086,-0.8580975}
};
outThetasWam18 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.333112e+03
Final                            1.312580e+02
Change                           6.201854e+03

Minimizer iterations                       41
Successful steps                           40
Unsuccessful steps                          1
Line search steps                          43

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0030
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.3148
    Line search gradient evaluation    0.2024
  Linear solver                        0.0007
  Line search polynomial minimization  0.0004
Minimizer                              0.3195

Postprocessor                          0.0000
Total                                  0.3196

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:19:19.162003  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:19:19.162032  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0001

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0032
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0032

Postprocessor                          0.0000
Total                                  0.0032

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA19 = {
{-0.4299347,-0.1680789,-0.4185002}
};
fitErrEl19 = {
{-0.2268675,0.2277931,-0.1161861}
};
fitErrLa19 = {
{-0.2312370,0.2247951,-0.1335562}
};
fitErrWr19 = {
{-0.2585398,0.2759230,-0.2889382}
};
fitErrEe19 = {
{-0.2424739,0.3311084,-0.3275981}
};
rMatsBase19 = {
{0.3908947,0.8048247,-0.4466079},
{0.9164110,-0.2949781,0.2705159},
{0.0859784,-0.5150196,-0.8528555}
};
outThetasWam19 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.267902e+03
Final                            1.263648e+02
Change                           6.141537e+03

Minimizer iterations                      197
Successful steps                          146
Unsuccessful steps                         51
Line search steps                         204

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0141
    Line search cost evaluation        0.0000
  Jacobian evaluation                  1.2277
    Line search gradient evaluation    0.8200
  Linear solver                        0.0033
  Line search polynomial minimization  0.0015
Minimizer                              1.2497

Postprocessor                          0.0000
Total                                  1.2497

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:19:20.416070  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:19:20.416517  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0036
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0036

Postprocessor                          0.0000
Total                                  0.0037

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA20 = {
{-0.4186902,-0.1812696,-0.4139272}
};
fitErrEl20 = {
{-0.2080049,0.2114408,-0.1019506}
};
fitErrLa20 = {
{-0.2121265,0.2089610,-0.1179575}
};
fitErrWr20 = {
{-0.2390588,0.2569221,-0.2592995}
};
fitErrEe20 = {
{-0.2231267,0.3117593,-0.2952284}
};
rMatsBase20 = {
{0.3705562,0.8061194,-0.4613672},
{0.9241796,-0.2704662,0.2697036},
{0.0926290,-0.5263265,-0.8452220}
};
outThetasWam20 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.211262e+03
Final                            1.184467e+02
Change                           6.092816e+03

Minimizer iterations                      303
Successful steps                          227
Unsuccessful steps                         76
Line search steps                         513

Time (in seconds):
Preprocessor                           0.0001

  Residual evaluation                  0.0224
    Line search cost evaluation        0.0000
  Jacobian evaluation                  2.5288
    Line search gradient evaluation    1.8782
  Linear solver                        0.0061
  Line search polynomial minimization  0.0049
Minimizer                              2.5685

Postprocessor                          0.0000
Total                                  2.5686

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:19:22.989466  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:19:22.989544  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0033
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0033

Postprocessor                          0.0000
Total                                  0.0033

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA21 = {
{-0.4042971,-0.1943113,-0.4093632}
};
fitErrEl21 = {
{-0.1843933,0.1925785,-0.0861701}
};
fitErrLa21 = {
{-0.1882141,0.1908020,-0.1004421}
};
fitErrWr21 = {
{-0.2145348,0.2338923,-0.2250070}
};
fitErrEe21 = {
{-0.1986617,0.2881246,-0.2579048}
};
rMatsBase21 = {
{0.3461675,0.8058750,-0.4803474},
{0.9336307,-0.2455921,0.2608030},
{0.0922051,-0.5387486,-0.8374056}
};
outThetasWam21 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 
W1215 11:19:23.708750  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.964533e+03
Final                            1.132802e+02
Change                           5.851252e+03

Minimizer iterations                       85
Successful steps                           80
Unsuccessful steps                          5
Line search steps                          88

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0064
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.7115
    Line search gradient evaluation    0.4635
  Linear solver                        0.0015
  Line search polynomial minimization  0.0008
Minimizer                              0.7218

Postprocessor                          0.0000
Total                                  0.7218

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:19:23.715728  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:19:23.715760  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0032
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0032

Postprocessor                          0.0000
Total                                  0.0033

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA22 = {
{-0.3884148,-0.2116961,-0.4052437}
};
fitErrEl22 = {
{-0.1583764,0.1697530,-0.0673153}
};
fitErrLa22 = {
{-0.1618472,0.1687544,-0.0796125}
};
fitErrWr22 = {
{-0.1872531,0.2073785,-0.1854804}
};
fitErrEe22 = {
{-0.1719411,0.2613188,-0.2148313}
};
rMatsBase22 = {
{0.3152687,0.8062681,-0.5005371},
{0.9441113,-0.2129899,0.2515732},
{0.0962261,-0.5518759,-0.8283559}
};
outThetasWam22 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 
W1215 11:19:25.548560  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.890721e+03
Final                            1.053185e+02
Change                           5.785402e+03

Minimizer iterations                      270
Successful steps                          227
Unsuccessful steps                         43
Line search steps                         433

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0213
    Line search cost evaluation        0.0000
  Jacobian evaluation                  2.5445
    Line search gradient evaluation    1.8451
  Linear solver                        0.0058
  Line search polynomial minimization  0.0042
Minimizer                              2.5817

Postprocessor                          0.0000
Total                                  2.5818

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
W1215 11:19:26.301703  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:19:26.301973  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.0033
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.0033

Postprocessor                          0.0000
Total                                  0.0034

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA23 = {
{-0.3717860,-0.2254953,-0.4001806}
};
fitErrEl23 = {
{-0.1281352,0.1443326,-0.0491016}
};
fitErrLa23 = {
{-0.1311128,0.1439324,-0.0591557}
};
fitErrWr23 = {
{-0.1542720,0.1772302,-0.1462688}
};
fitErrEe23 = {
{-0.1387754,0.2304608,-0.1721989}
};
rMatsBase23 = {
{0.2887559,0.7981179,-0.5287985},
{0.9540639,-0.1937879,0.2284915},
{0.0798884,-0.5704858,-0.8174129}
};
outThetasWam23 = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.858428e+03
Final                            4.776751e-23
Change                           5.858428e+03

Minimizer iterations                      239
Successful steps                          202
Unsuccessful steps                         37
Line search steps                         161

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0185
    Line search cost evaluation        0.0000
  Jacobian evaluation                  1.3652
    Line search gradient evaluation    0.7825
  Linear solver                        0.0047
  Line search polynomial minimization  0.0009
Minimizer                              1.3939

Postprocessor                          0.0000
Total                                  1.3939

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA24 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrEl24 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrLa24 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrWr24 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrEe24 = {
{0.0198192,0.0468916,-0.0090264}
};
rMatsBase24 = {
{0.1517053,0.7073494,-0.6903929},
{0.9883289,-0.1183324,0.0959343},
{-0.0138368,-0.6968890,-0.7170455}
};
outThetasWam24 = {
{-0.3348268,-0.3715755,-0.3156549,1.7451337,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.796128e+03
Final                            1.331276e-23
Change                           5.796128e+03

Minimizer iterations                      104
Successful steps                           75
Unsuccessful steps                         29
Line search steps                          68

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0081
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.5589
    Line search gradient evaluation    0.3387
  Linear solver                        0.0021
  Line search polynomial minimization  0.0003
Minimizer                              0.5713

Postprocessor                          0.0000
Total                                  0.5714

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
fitErrUA25 = {
{-0.0000000,0.0000000,0.0000000}
};
fitErrEl25 = {
{-0.0000000,0.0000000,0.0000000}
};
fitErrLa25 = {
{-0.0000000,0.0000000,0.0000000}
};
fitErrWr25 = {
{-0.0000000,0.0000000,0.0000000}
};
fitErrEe25 = {
{0.0194719,0.0472565,-0.0095800}
};
rMatsBase25 = {
{0.2345731,0.6929824,-0.6817264},
{0.9463335,-0.3231789,-0.0028939},
{-0.2223250,-0.6444617,-0.7316015}
};
outThetasWam25 = {
{-0.3501668,-0.3243956,-0.5184981,1.7265509,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.572314e+03
Final                            2.977172e-22
Change                           5.572314e+03

Minimizer iterations                       71
Successful steps                           56
Unsuccessful steps                         15
Line search steps                          45

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0054
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.4074
    Line search gradient evaluation    0.2463
  Linear solver                        0.0013
  Line search polynomial minimization  0.0002
Minimizer                              0.4156

Postprocessor                          0.0000
Total                                  0.4157

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA26 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEl26 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrLa26 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrWr26 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEe26 = {
{0.0188054,0.0477058,-0.0101607}
};
rMatsBase26 = {
{0.2323634,0.7077661,-0.6671390},
{0.9520113,-0.3059836,0.0069667},
{-0.1992028,-0.6367426,-0.7449007}
};
outThetasWam26 = {
{-0.3496554,-0.3115699,-0.4852738,1.7057470,0.0000000,0.0000000,0.0000000}
};
(* 
W1215 11:19:28.921773  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:28.921900  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:28.998082  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.
W1215 11:19:28.998127  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.897578e+03
Final                            3.853028e-23
Change                           5.897578e+03

Minimizer iterations                      186
Successful steps                          153
Unsuccessful steps                         33
Line search steps                         110

Time (in seconds):
Preprocessor                           0.0001

  Residual evaluation                  0.0136
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.9758
    Line search gradient evaluation    0.5403
  Linear solver                        0.0032
  Line search polynomial minimization  0.0005
Minimizer                              0.9962

Postprocessor                          0.0000
Total                                  0.9962

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA27 = {
{0.0000000,0.0000000,0.0000000}
};
fitErrEl27 = {
{0.0000000,0.0000000,0.0000000}
};
fitErrLa27 = {
{0.0000000,0.0000000,0.0000000}
};
fitErrWr27 = {
{-0.0000000,-0.0000000,0.0000000}
};
fitErrEe27 = {
{0.0194095,0.0474794,-0.0107775}
};
rMatsBase27 = {
{0.2397592,0.7069124,-0.6654250},
{0.9530983,-0.3018014,0.0227929},
{-0.1847136,-0.6396802,-0.7461167}
};
outThetasWam27 = {
{-0.3306798,-0.3019148,-0.4827579,1.6838717,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.843358e+03
Final                            7.261475e-23
Change                           5.843358e+03

Minimizer iterations                      207
Successful steps                          164
Unsuccessful steps                         43
Line search steps                         130

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0150
    Line search cost evaluation        0.0000
  Jacobian evaluation                  1.0597
    Line search gradient evaluation    0.5973
  Linear solver                        0.0032
  Line search polynomial minimization  0.0004
Minimizer                              1.0812

Postprocessor                          0.0000
Total                                  1.0812

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA28 = {
{0.0000000,0.0000000,0.0000000}
};
fitErrEl28 = {
{0.0000000,0.0000000,0.0000000}
};
fitErrLa28 = {
{0.0000000,0.0000000,0.0000000}
};
fitErrWr28 = {
{-0.0000000,0.0000000,0.0000000}
};
fitErrEe28 = {
{0.0191986,0.0476486,-0.0114469}
};
rMatsBase28 = {
{0.2442872,0.7184029,-0.6513225},
{0.9572653,-0.2858906,0.0437004},
{-0.1548125,-0.6341639,-0.7575416}
};
outThetasWam28 = {
{-0.3027687,-0.2922040,-0.4716902,1.6600020,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.899092e+03
Final                            1.554439e-22
Change                           5.899092e+03

Minimizer iterations                       79
Successful steps                           51
Unsuccessful steps                         28
Line search steps                          49

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0063
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.4162
    Line search gradient evaluation    0.2584
  Linear solver                        0.0013
  Line search polynomial minimization  0.0002
Minimizer                              0.4251

Postprocessor                          0.0000
Total                                  0.4252

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA29 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEl29 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrLa29 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrWr29 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEe29 = {
{0.0194213,0.0475791,-0.0120350}
};
rMatsBase29 = {
{0.2504041,0.7279864,-0.6382269},
{0.9615533,-0.2637834,0.0763776},
{-0.1127518,-0.6328144,-0.7660502}
};
outThetasWam29 = {
{-0.2618298,-0.2854136,-0.4619744,1.6354656,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.953358e+03
Final                            6.981351e-23
Change                           5.953358e+03

Minimizer iterations                      138
Successful steps                          112
Unsuccessful steps                         26
Line search steps                          74

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0111
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.7731
    Line search gradient evaluation    0.4246
  Linear solver                        0.0024
  Line search polynomial minimization  0.0003
Minimizer                              0.7891

Postprocessor                          0.0000
Total                                  0.7891

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA30 = {
{0.0000000,0.0000000,0.0000000}
};
fitErrEl30 = {
{0.0000000,0.0000000,0.0000000}
};
fitErrLa30 = {
{0.0000000,0.0000000,0.0000000}
};
fitErrWr30 = {
{0.0000000,0.0000000,0.0000000}
};
fitErrEe30 = {
{0.0196124,0.0474678,-0.0127577}
};
rMatsBase30 = {
{0.2569238,0.7389095,-0.6228988},
{0.9648787,-0.2326457,0.1220040},
{-0.0547648,-0.6323676,-0.7727303}
};
outThetasWam30 = {
{-0.2021563,-0.2813875,-0.4536989,1.6100159,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.064430e+03
Final                            1.290589e-22
Change                           6.064430e+03

Minimizer iterations                      170
Successful steps                          128
Unsuccessful steps                         42
Line search steps                         103

Time (in seconds):
Preprocessor                           0.0001

  Residual evaluation                  0.0136
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.9164
    Line search gradient evaluation    0.5192
  Linear solver                        0.0029
  Line search polynomial minimization  0.0004
Minimizer                              0.9360

Postprocessor                          0.0000
Total                                  0.9361

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA31 = {
{-0.0000000,-0.0000000,-0.0000000}
};
fitErrEl31 = {
{0.0000000,-0.0000000,-0.0000000}
};
fitErrLa31 = {
{0.0000000,-0.0000000,-0.0000000}
};
fitErrWr31 = {
{-0.0000000,-0.0000000,0.0000000}
};
fitErrEe31 = {
{0.0200615,0.0473754,-0.0134251}
};
rMatsBase31 = {
{0.2592736,0.7485675,-0.6102654},
{0.9657378,-0.2083351,0.1547482},
{-0.0113002,-0.6294785,-0.7769357}
};
outThetasWam31 = {
{-0.1721698,-0.2769778,-0.4294667,1.5826973,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.146797e+03
Final                            7.889798e-23
Change                           6.146797e+03

Minimizer iterations                      124
Successful steps                           85
Unsuccessful steps                         39
Line search steps                          76

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0099
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.6392
    Line search gradient evaluation    0.3764
  Linear solver                        0.0021
  Line search polynomial minimization  0.0003
Minimizer                              0.6532

Postprocessor                          0.0000
Total                                  0.6533

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
fitErrUA32 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrEl32 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrLa32 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrWr32 = {
{-0.0000000,0.0000000,0.0000000}
};
fitErrEe32 = {
{0.0205930,0.0472295,-0.0140315}
};
rMatsBase32 = {
{0.2617958,0.7570709,-0.5985872},
{0.9650218,-0.1963429,0.1737311},
{0.0139984,-0.6231317,-0.7819916}
};
outThetasWam32 = {
{-0.1613423,-0.2711663,-0.4019803,1.5555705,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.296304e+03
Final                            3.251402e-23
Change                           6.296304e+03

Minimizer iterations                       57
Successful steps                           40
Unsuccessful steps                         17
Line search steps                          36

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0045
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.2966
    Line search gradient evaluation    0.1728
  Linear solver                        0.0010
  Line search polynomial minimization  0.0001
Minimizer                              0.3031

Postprocessor                          0.0000
Total                                  0.3032

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA33 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrEl33 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrLa33 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrWr33 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrEe33 = {
{0.0211027,0.0470038,-0.0148991}
};
rMatsBase33 = {
{0.2639113,0.7644187,-0.5882303},
{0.9636659,-0.1829030,0.1946650},
{0.0412164,-0.6182318,-0.7849144}
};
outThetasWam33 = {
{-0.1546674,-0.2669191,-0.3701867,1.5272366,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.465773e+03
Final                            1.557234e-23
Change                           6.465773e+03

Minimizer iterations                      102
Successful steps                           71
Unsuccessful steps                         31
Line search steps                          61

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0076
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.4962
    Line search gradient evaluation    0.2896
  Linear solver                        0.0016
  Line search polynomial minimization  0.0002
Minimizer                              0.5071

Postprocessor                          0.0000
Total                                  0.5071

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA34 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEl34 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrLa34 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrWr34 = {
{0.0000000,0.0000000,0.0000000}
};
fitErrEe34 = {
{0.0220880,0.0466121,-0.0153033}
};
rMatsBase34 = {
{0.2652405,0.7707755,-0.5792691},
{0.9620532,-0.1716634,0.2120975},
{0.0640402,-0.6135445,-0.7870591}
};
outThetasWam34 = {
{-0.1524126,-0.2629382,-0.3385481,1.4986676,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.681909e+03
Final                            1.979669e-23
Change                           6.681909e+03

Minimizer iterations                       93
Successful steps                           68
Unsuccessful steps                         25
Line search steps                          54

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0067
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.4499
    Line search gradient evaluation    0.2576
  Linear solver                        0.0014
  Line search polynomial minimization  0.0002
Minimizer                              0.4595

Postprocessor                          0.0000
Total                                  0.4596

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA35 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEl35 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrLa35 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrWr35 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEe35 = {
{0.0230452,0.0462687,-0.0160516}
};
rMatsBase35 = {
{0.2683597,0.7755504,-0.5714059},
{0.9596207,-0.1632975,0.2290459},
{0.0843275,-0.6097996,-0.7880567}
};
outThetasWam35 = {
{-0.1518755,-0.2598788,-0.3071996,1.4685742,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.875485e+03
Final                            1.487146e-22
Change                           6.875485e+03

Minimizer iterations                      254
Successful steps                          218
Unsuccessful steps                         36
Line search steps                         136

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0183
    Line search cost evaluation        0.0000
  Jacobian evaluation                  1.3113
    Line search gradient evaluation    0.6984
  Linear solver                        0.0038
  Line search polynomial minimization  0.0005
Minimizer                              1.3374

Postprocessor                          0.0000
Total                                  1.3375

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA36 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEl36 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrLa36 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrWr36 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEe36 = {
{0.0239676,0.0458456,-0.0168601}
};
rMatsBase36 = {
{0.2726198,0.7795027,-0.5639627},
{0.9569887,-0.1592272,0.2425268},
{0.0992521,-0.6058236,-0.7893838}
};
outThetasWam36 = {
{-0.1520975,-0.2558749,-0.2801080,1.4377811,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          7.065050e+03
Final                            3.005810e-23
Change                           7.065050e+03

Minimizer iterations                      107
Successful steps                           81
Unsuccessful steps                         26
Line search steps                          63

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0076
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.5192
    Line search gradient evaluation    0.2931
  Linear solver                        0.0016
  Line search polynomial minimization  0.0002
Minimizer                              0.5302

Postprocessor                          0.0000
Total                                  0.5302

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA37 = {
{0.0000000,-0.0000000,-0.0000000}
};
fitErrEl37 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrLa37 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrWr37 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEe37 = {
{0.0252738,0.0452115,-0.0172564}
};
rMatsBase37 = {
{0.2778241,0.7819429,-0.5580135},
{0.9541946,-0.1574949,0.2543777},
{0.1110245,-0.6031257,-0.7898816}
};
outThetasWam37 = {
{-0.1517417,-0.2517768,-0.2571521,1.4072854,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          7.211966e+03
Final                            6.790818e-23
Change                           7.211966e+03

Minimizer iterations                      119
Successful steps                           82
Unsuccessful steps                         37
Line search steps                          74

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0086
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.5618
    Line search gradient evaluation    0.3295
  Linear solver                        0.0018
  Line search polynomial minimization  0.0003
Minimizer                              0.5741

Postprocessor                          0.0000
Total                                  0.5741

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA38 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEl38 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrLa38 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrWr38 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEe38 = {
{0.0263273,0.0446544,-0.0180285}
};
rMatsBase38 = {
{0.2858057,0.7830460,-0.5524076},
{0.9509344,-0.1604740,0.2645221},
{0.1184859,-0.6009053,-0.7904897}
};
outThetasWam38 = {
{-0.1501624,-0.2463173,-0.2377727,1.3764403,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          7.337841e+03
Final                            7.487805e-23
Change                           7.337841e+03

Minimizer iterations                      501
Successful steps                          477
Unsuccessful steps                         24
Line search steps                         257

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0384
    Line search cost evaluation        0.0000
  Jacobian evaluation                  2.9016
    Line search gradient evaluation    1.4711
  Linear solver                        0.0078
  Line search polynomial minimization  0.0010
Minimizer                              2.9561

Postprocessor                          0.0000
Total                                  2.9562

Termination:                   NO_CONVERGENCE (Maximum number of iterations reached. Number of iterations: 500.)

*) 
fitErrUA39 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrEl39 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrLa39 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrWr39 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrEe39 = {
{0.0277295,0.0438309,-0.0183262}
};
rMatsBase39 = {
{0.2942844,0.7814643,-0.5501910},
{0.9473573,-0.1625431,0.2758512},
{0.1261381,-0.6024062,-0.7881599}
};
outThetasWam39 = {
{-0.1473774,-0.2396577,-0.2209795,1.3469660,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          7.415796e+03
Final                            3.673426e-22
Change                           7.415796e+03

Minimizer iterations                      138
Successful steps                          113
Unsuccessful steps                         25
Line search steps                          72

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0109
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.7672
    Line search gradient evaluation    0.4182
  Linear solver                        0.0023
  Line search polynomial minimization  0.0003
Minimizer                              0.7829

Postprocessor                          0.0000
Total                                  0.7829

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
fitErrUA40 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEl40 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrLa40 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrWr40 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEe40 = {
{0.0289813,0.0434002,-0.0189028}
};
rMatsBase40 = {
{0.3049894,0.7774924,-0.5499882},
{0.9433597,-0.1674483,0.2864151},
{0.1305910,-0.6061903,-0.7845249}
};
outThetasWam40 = {
{-0.1427481,-0.2291794,-0.2052075,1.3173198,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          7.469209e+03
Final                            1.106080e-22
Change                           7.469209e+03

Minimizer iterations                       89
Successful steps                           66
Unsuccessful steps                         23
Line search steps                          53

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0071
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.4747
    Line search gradient evaluation    0.2704
  Linear solver                        0.0015
  Line search polynomial minimization  0.0002
Minimizer                              0.4848

Postprocessor                          0.0000
Total                                  0.4849

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA41 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEl41 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrLa41 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrWr41 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEe41 = {
{0.0302259,0.0424679,-0.0191882}
};
rMatsBase41 = {
{0.3166381,0.7692185,-0.5550165},
{0.9390977,-0.1718354,0.2976041},
{0.1335511,-0.6154474,-0.7767809}
};
outThetasWam41 = {
{-0.1361668,-0.2136944,-0.1895165,1.2900369,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          7.459027e+03
Final                            2.239432e-22
Change                           7.459027e+03

Minimizer iterations                      155
Successful steps                          137
Unsuccessful steps                         18
Line search steps                          81

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0119
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.8707
    Line search gradient evaluation    0.4576
  Linear solver                        0.0025
  Line search polynomial minimization  0.0003
Minimizer                              0.8877

Postprocessor                          0.0000
Total                                  0.8878

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA42 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEl42 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrLa42 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrWr42 = {
{0.0000000,0.0000000,-0.0000000}
};
fitErrEe42 = {
{0.0311686,0.0419506,-0.0198571}
};
rMatsBase42 = {
{0.3307483,0.7577089,-0.5625681},
{0.9343248,-0.1790111,0.3082080},
{0.1328260,-0.6275606,-0.7671538}
};
outThetasWam42 = {
{-0.1293069,-0.1923556,-0.1756365,1.2633174,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          7.411660e+03
Final                            2.583786e-22
Change                           7.411660e+03

Minimizer iterations                      367
Successful steps                          311
Unsuccessful steps                         56
Line search steps                         208

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0262
    Line search cost evaluation        0.0000
  Jacobian evaluation                  1.8772
    Line search gradient evaluation    1.0109
  Linear solver                        0.0054
  Line search polynomial minimization  0.0007
Minimizer                              1.9146

Postprocessor                          0.0000
Total                                  1.9146

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA43 = {
{-0.0000000,-0.0000000,-0.0000000}
};
fitErrEl43 = {
{-0.0000000,-0.0000000,-0.0000000}
};
fitErrLa43 = {
{-0.0000000,-0.0000000,-0.0000000}
};
fitErrWr43 = {
{0.0000000,-0.0000000,-0.0000000}
};
fitErrEe43 = {
{0.0315830,0.0410842,-0.0211138}
};
rMatsBase43 = {
{0.2833587,0.8953637,-0.3435573},
{0.9497069,-0.2121963,0.2302815},
{0.1332841,-0.3915310,-0.9104608}
};
outThetasWam43 = {
{-0.1691841,-0.4514636,-0.2081354,1.2386496,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          7.339996e+03
Final                            3.940283e-23
Change                           7.339996e+03

Minimizer iterations                      140
Successful steps                          112
Unsuccessful steps                         28
Line search steps                          75

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0099
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.6964
    Line search gradient evaluation    0.3857
  Linear solver                        0.0020
  Line search polynomial minimization  0.0003
Minimizer                              0.7105

Postprocessor                          0.0000
Total                                  0.7105

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA44 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEl44 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrLa44 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrWr44 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEe44 = {
{0.0324472,0.0402509,-0.0215575}
};
rMatsBase44 = {
{0.3006414,0.8873365,-0.3496408},
{0.9456199,-0.2296015,0.2304043},
{0.1241680,-0.3998964,-0.9081108}
};
outThetasWam44 = {
{-0.1683740,-0.4350982,-0.2020492,1.2158715,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          7.214821e+03
Final                            4.103045e-22
Change                           7.214821e+03

Minimizer iterations                       40
Successful steps                           28
Unsuccessful steps                         12
Line search steps                          24

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0030
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.2001
    Line search gradient evaluation    0.1194
  Linear solver                        0.0007
  Line search polynomial minimization  0.0001
Minimizer                              0.2044

Postprocessor                          0.0000
Total                                  0.2045

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA45 = {
{0.0000000,-0.0000000,-0.0000000}
};
fitErrEl45 = {
{0.0000000,-0.0000000,-0.0000000}
};
fitErrLa45 = {
{0.0000000,-0.0000000,-0.0000000}
};
fitErrWr45 = {
{0.0000000,-0.0000000,-0.0000000}
};
fitErrEe45 = {
{0.0333356,0.0394796,-0.0222861}
};
rMatsBase45 = {
{0.3186949,0.8769083,-0.3598131},
{0.9408908,-0.2467336,0.2320495},
{0.1147082,-0.4124978,-0.9037077}
};
outThetasWam45 = {
{-0.1677050,-0.4174004,-0.1972756,1.1928700,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          7.043331e+03
Final                            3.573204e-24
Change                           7.043331e+03

Minimizer iterations                      105
Successful steps                           83
Unsuccessful steps                         22
Line search steps                          58

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0075
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.5220
    Line search gradient evaluation    0.2919
  Linear solver                        0.0016
  Line search polynomial minimization  0.0002
Minimizer                              0.5327

Postprocessor                          0.0000
Total                                  0.5327

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA46 = {
{-0.0000000,0.0000000,0.0000000}
};
fitErrEl46 = {
{-0.0000000,0.0000000,0.0000000}
};
fitErrLa46 = {
{-0.0000000,0.0000000,0.0000000}
};
fitErrWr46 = {
{-0.0000000,0.0000000,0.0000000}
};
fitErrEe46 = {
{0.0336344,0.0386279,-0.0231469}
};
rMatsBase46 = {
{0.3340517,0.8726038,-0.3563313},
{0.9363201,-0.2638041,0.2317586},
{0.1082318,-0.4110595,-0.9051607}
};
outThetasWam46 = {
{-0.1673117,-0.4100969,-0.1943821,1.1730137,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.818662e+03
Final                            1.682538e-22
Change                           6.818662e+03

Minimizer iterations                      120
Successful steps                           92
Unsuccessful steps                         28
Line search steps                          70

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0087
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.5967
    Line search gradient evaluation    0.3379
  Linear solver                        0.0018
  Line search polynomial minimization  0.0003
Minimizer                              0.6092

Postprocessor                          0.0000
Total                                  0.6092

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA47 = {
{-0.0000000,0.0000000,0.0000000}
};
fitErrEl47 = {
{-0.0000000,0.0000000,0.0000000}
};
fitErrLa47 = {
{-0.0000000,0.0000000,0.0000000}
};
fitErrWr47 = {
{-0.0000000,0.0000000,0.0000000}
};
fitErrEe47 = {
{0.0341273,0.0378231,-0.0238799}
};
rMatsBase47 = {
{0.3482105,0.8704663,-0.3479049},
{0.9317460,-0.2806264,0.2304305},
{0.1029507,-0.4043973,-0.9087706}
};
outThetasWam47 = {
{-0.1678693,-0.4099381,-0.1944415,1.1527912,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.570753e+03
Final                            1.173543e-22
Change                           6.570753e+03

Minimizer iterations                       54
Successful steps                           35
Unsuccessful steps                         19
Line search steps                          34

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0040
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.2571
    Line search gradient evaluation    0.1571
  Linear solver                        0.0009
  Line search polynomial minimization  0.0001
Minimizer                              0.2630

Postprocessor                          0.0000
Total                                  0.2630

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA48 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEl48 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrLa48 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrWr48 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEe48 = {
{0.0346713,0.0368716,-0.0247075}
};
rMatsBase48 = {
{0.3600534,0.8726196,-0.3299947},
{0.9279067,-0.2982997,0.2236213},
{0.0966991,-0.3867199,-0.9171134}
};
outThetasWam48 = {
{-0.1701992,-0.4263948,-0.1998090,1.1351065,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.304610e+03
Final                            1.924332e-22
Change                           6.304610e+03

Minimizer iterations                       88
Successful steps                           69
Unsuccessful steps                         19
Line search steps                          51

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0063
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.4424
    Line search gradient evaluation    0.2481
  Linear solver                        0.0014
  Line search polynomial minimization  0.0002
Minimizer                              0.4515

Postprocessor                          0.0000
Total                                  0.4516

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA49 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrEl49 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrLa49 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrWr49 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrEe49 = {
{0.0351012,0.0359524,-0.0254341}
};
rMatsBase49 = {
{0.3700664,0.8820735,-0.2915430},
{0.9244186,-0.3184901,0.2097961},
{0.0922020,-0.3471462,-0.9332675}
};
outThetasWam49 = {
{-0.1744409,-0.4631911,-0.2098403,1.1193056,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.979504e+03
Final                            2.374697e-22
Change                           5.979504e+03

Minimizer iterations                       82
Successful steps                           64
Unsuccessful steps                         18
Line search steps                          46

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0059
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.4101
    Line search gradient evaluation    0.2310
  Linear solver                        0.0013
  Line search polynomial minimization  0.0002
Minimizer                              0.4186

Postprocessor                          0.0000
Total                                  0.4186

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA50 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrEl50 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrLa50 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrWr50 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrEe50 = {
{0.0357948,0.0349720,-0.0260086}
};
rMatsBase50 = {
{0.3799186,0.8895589,-0.2536669},
{0.9207865,-0.3374762,0.1956069},
{0.0883973,-0.3078877,-0.9473073}
};
outThetasWam50 = {
{-0.1794917,-0.5028800,-0.2214690,1.1035641,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.549798e+03
Final                            2.432532e-22
Change                           5.549798e+03

Minimizer iterations                       51
Successful steps                           42
Unsuccessful steps                          9
Line search steps                          29

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0036
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.2625
    Line search gradient evaluation    0.1451
  Linear solver                        0.0008
  Line search polynomial minimization  0.0001
Minimizer                              0.2678

Postprocessor                          0.0000
Total                                  0.2679

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA51 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrEl51 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrLa51 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrWr51 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrEe51 = {
{0.0365365,0.0337998,-0.0267446}
};
rMatsBase51 = {
{0.3916181,0.8903696,-0.2321145},
{0.9162617,-0.3542595,0.1869887},
{0.0842603,-0.2859057,-0.9545460}
};
outThetasWam51 = {
{-0.1839404,-0.5298539,-0.2314349,1.0883052,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.185997e+03
Final                            7.844167e-24
Change                           5.185997e+03

Minimizer iterations                      102
Successful steps                           80
Unsuccessful steps                         22
Line search steps                          57

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0072
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.4977
    Line search gradient evaluation    0.2763
  Linear solver                        0.0015
  Line search polynomial minimization  0.0002
Minimizer                              0.5080

Postprocessor                          0.0000
Total                                  0.5080

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
fitErrUA52 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrEl52 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrLa52 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrWr52 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrEe52 = {
{0.0371893,0.0332512,-0.0273800}
};
rMatsBase52 = {
{0.4467797,0.7368627,-0.5073670},
{0.8903899,-0.3109952,0.3323971},
{0.0871424,-0.6002628,-0.7950414}
};
outThetasWam52 = {
{-0.1040770,-0.2116150,-0.1477799,1.0729376,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          4.702048e+03
Final                            4.031305e-22
Change                           4.702048e+03

Minimizer iterations                      153
Successful steps                          138
Unsuccessful steps                         15
Line search steps                          81

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0111
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.8161
    Line search gradient evaluation    0.4253
  Linear solver                        0.0023
  Line search polynomial minimization  0.0003
Minimizer                              0.8320

Postprocessor                          0.0000
Total                                  0.8321

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA53 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEl53 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrLa53 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrWr53 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEe53 = {
{0.0379040,0.0320082,-0.0278136}
};
rMatsBase53 = {
{0.4598344,0.7317639,-0.5030644},
{0.8848110,-0.3295626,0.3293903},
{0.0752447,-0.5965819,-0.7990170}
};
outThetasWam53 = {
{-0.1060480,-0.2213455,-0.1533002,1.0607175,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          4.215331e+03
Final                            3.529222e-22
Change                           4.215331e+03

Minimizer iterations                       84
Successful steps                           70
Unsuccessful steps                         14
Line search steps                          48

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0061
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.4338
    Line search gradient evaluation    0.2363
  Linear solver                        0.0014
  Line search polynomial minimization  0.0002
Minimizer                              0.4427

Postprocessor                          0.0000
Total                                  0.4428

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA54 = {
{0.0000000,0.0000000,0.0000000}
};
fitErrEl54 = {
{0.0000000,0.0000000,0.0000000}
};
fitErrLa54 = {
{0.0000000,0.0000000,0.0000000}
};
fitErrWr54 = {
{-0.0000000,0.0000000,0.0000000}
};
fitErrEe54 = {
{0.0386182,0.0311305,-0.0284030}
};
rMatsBase54 = {
{0.4721317,0.7343915,-0.4876073},
{0.8795402,-0.3553154,0.3164806},
{0.0591663,-0.5782907,-0.8136825}
};
outThetasWam54 = {
{-0.1125307,-0.2432755,-0.1668377,1.0488808,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.216341e+03
Final                            1.352664e-22
Change                           5.216341e+03

Minimizer iterations                       87
Successful steps                           71
Unsuccessful steps                         16
Line search steps                          45

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0061
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.4309
    Line search gradient evaluation    0.2354
  Linear solver                        0.0013
  Line search polynomial minimization  0.0002
Minimizer                              0.4397

Postprocessor                          0.0000
Total                                  0.4397

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA55 = {
{0.0000000,-0.0000000,-0.0000000}
};
fitErrEl55 = {
{0.0000000,-0.0000000,-0.0000000}
};
fitErrLa55 = {
{0.0000000,-0.0000000,-0.0000000}
};
fitErrWr55 = {
{0.0000000,-0.0000000,-0.0000000}
};
fitErrEe55 = {
{0.0365582,0.0339315,-0.0279160}
};
rMatsBase55 = {
{0.4678442,0.7498864,-0.4677523},
{0.8807029,-0.3512093,0.3178276},
{0.0740556,-0.5606446,-0.8247384}
};
outThetasWam55 = {
{-0.1049124,-0.1987779,-0.1424842,1.0406436,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.751416e+03
Final                            1.113028e-22
Change                           5.751416e+03

Minimizer iterations                       76
Successful steps                           62
Unsuccessful steps                         14
Line search steps                          38

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0055
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.3846
    Line search gradient evaluation    0.2097
  Linear solver                        0.0012
  Line search polynomial minimization  0.0001
Minimizer                              0.3926

Postprocessor                          0.0000
Total                                  0.3926

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA56 = {
{-0.0000000,-0.0000000,-0.0000000}
};
fitErrEl56 = {
{-0.0000000,-0.0000000,-0.0000000}
};
fitErrLa56 = {
{-0.0000000,-0.0000000,-0.0000000}
};
fitErrWr56 = {
{0.0000000,-0.0000000,-0.0000000}
};
fitErrEe56 = {
{0.0348603,0.0360363,-0.0276854}
};
rMatsBase56 = {
{0.4679957,0.7638224,-0.4444720},
{0.8809276,-0.3631853,0.3034190},
{0.0703326,-0.5335464,-0.8428414}
};
outThetasWam56 = {
{-0.1049287,-0.1702114,-0.1363705,1.0320025,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.083559e+03
Final                            3.517013e-22
Change                           6.083559e+03

Minimizer iterations                       80
Successful steps                           59
Unsuccessful steps                         21
Line search steps                          44

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0057
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.3816
    Line search gradient evaluation    0.2181
  Linear solver                        0.0012
  Line search polynomial minimization  0.0002
Minimizer                              0.3898

Postprocessor                          0.0000
Total                                  0.3898

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA57 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrEl57 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrLa57 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrWr57 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrEe57 = {
{0.0331712,0.0378544,-0.0275098}
};
rMatsBase57 = {
{0.4692354,0.7710857,-0.4304009},
{0.8807551,-0.3733627,0.2913258},
{0.0639415,-0.5157782,-0.8543327}
};
outThetasWam57 = {
{-0.1035341,-0.1356150,-0.1291771,1.0246506,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.218128e+03
Final                            7.592273e-23
Change                           6.218128e+03

Minimizer iterations                       67
Successful steps                           46
Unsuccessful steps                         21
Line search steps                          41

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0048
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.3166
    Line search gradient evaluation    0.1855
  Linear solver                        0.0011
  Line search polynomial minimization  0.0001
Minimizer                              0.3236

Postprocessor                          0.0000
Total                                  0.3237

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA58 = {
{0.0000000,-0.0000000,-0.0000000}
};
fitErrEl58 = {
{0.0000000,-0.0000000,-0.0000000}
};
fitErrLa58 = {
{0.0000000,-0.0000000,-0.0000000}
};
fitErrWr58 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrEe58 = {
{0.0313452,0.0393230,-0.0275635}
};
rMatsBase58 = {
{0.4685874,0.7859212,-0.4034274},
{0.8814246,-0.3852785,0.2732238},
{0.0593005,-0.4836200,-0.8732669}
};
outThetasWam58 = {
{-0.1051923,-0.1184967,-0.1269492,1.0172772,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          6.193071e+03
Final                            2.143204e-22
Change                           6.193071e+03

Minimizer iterations                       50
Successful steps                           32
Unsuccessful steps                         18
Line search steps                          33

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0037
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.2303
    Line search gradient evaluation    0.1397
  Linear solver                        0.0008
  Line search polynomial minimization  0.0001
Minimizer                              0.2356

Postprocessor                          0.0000
Total                                  0.2356

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA59 = {
{-0.0000000,-0.0000000,-0.0000000}
};
fitErrEl59 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrLa59 = {
{-0.0000000,0.0000000,-0.0000000}
};
fitErrWr59 = {
{-0.0000000,-0.0000000,-0.0000000}
};
fitErrEe59 = {
{0.0296552,0.0406344,-0.0274363}
};
rMatsBase59 = {
{0.4654019,0.8024663,-0.3734287},
{0.8830460,-0.3922497,0.2576238},
{0.0602571,-0.4496533,-0.8911683}
};
outThetasWam59 = {
{-0.1063176,-0.1082079,-0.1251675,1.0102086,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.991606e+03
Final                            5.492923e-24
Change                           5.991606e+03

Minimizer iterations                      146
Successful steps                          122
Unsuccessful steps                         24
Line search steps                          81

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0104
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.7432
    Line search gradient evaluation    0.4021
  Linear solver                        0.0022
  Line search polynomial minimization  0.0003
Minimizer                              0.7581

Postprocessor                          0.0000
Total                                  0.7581

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA60 = {
{0.0000000,0.0000000,0.0000000}
};
fitErrEl60 = {
{0.0000000,0.0000000,0.0000000}
};
fitErrLa60 = {
{0.0000000,-0.0000000,0.0000000}
};
fitErrWr60 = {
{0.0000000,0.0000000,0.0000000}
};
fitErrEe60 = {
{0.0275075,0.0421572,-0.0274741}
};
rMatsBase60 = {
{0.4639279,0.8153984,-0.3462607},
{0.8832833,-0.3959070,0.2511339},
{0.0676872,-0.4223543,-0.9039001}
};
outThetasWam60 = {
{-0.1044445,-0.0839246,-0.1095725,1.0008341,0.0000000,0.0000000,0.0000000}
};
(* 
W1215 11:19:52.428407  8226 levenberg_marquardt_strategy.cc:114] Linear solver failure. Failed to compute a step: CHOLMOD warning: Matrix not positive definite.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          5.291993e+03
Final                            7.133534e-23
Change                           5.291993e+03

Minimizer iterations                      119
Successful steps                           91
Unsuccessful steps                         28
Line search steps                          70

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0086
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.5939
    Line search gradient evaluation    0.3340
  Linear solver                        0.0018
  Line search polynomial minimization  0.0003
Minimizer                              0.6064

Postprocessor                          0.0000
Total                                  0.6065

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA61 = {
{-0.0000000,0.0000000,0.0000000}
};
fitErrEl61 = {
{-0.0000000,0.0000000,0.0000000}
};
fitErrLa61 = {
{-0.0000000,0.0000000,0.0000000}
};
fitErrWr61 = {
{-0.0000000,0.0000000,0.0000000}
};
fitErrEe61 = {
{0.0240702,0.0437255,-0.0282459}
};
rMatsBase61 = {
{0.4725750,0.8354121,-0.2806411},
{0.8783956,-0.4207127,0.2267640},
{0.0713722,-0.3536769,-0.9326407}
};
outThetasWam61 = {
{-0.0957350,-0.0777605,-0.1021778,0.9920410,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          4.341596e+03
Final                            3.490858e-23
Change                           4.341596e+03

Minimizer iterations                      175
Successful steps                          151
Unsuccessful steps                         24
Line search steps                         129

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0124
    Line search cost evaluation        0.0000
  Jacobian evaluation                  1.0542
    Line search gradient evaluation    0.6362
  Linear solver                        0.0026
  Line search polynomial minimization  0.0004
Minimizer                              1.0722

Postprocessor                          0.0000
Total                                  1.0722

Termination:                      CONVERGENCE (Parameter tolerance reached. Relative step_norm: 0.000000e+00 <= 1.000000e-100.)

*) 
fitErrUA62 = {
{-0.0000000,-0.0000000,-0.0000000}
};
fitErrEl62 = {
{-0.0000000,-0.0000000,-0.0000000}
};
fitErrLa62 = {
{-0.0000000,-0.0000000,-0.0000000}
};
fitErrWr62 = {
{-0.0000000,-0.0000000,-0.0000000}
};
fitErrEe62 = {
{0.0208691,0.0452366,-0.0288147}
};
rMatsBase62 = {
{0.4724665,0.8726245,-0.1237006},
{0.8810308,-0.4638518,0.0928778},
{0.0236687,-0.1528657,-0.9879635}
};
outThetasWam62 = {
{-0.1379966,-0.1702372,-0.1575208,0.9843669,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          3.333907e+03
Final                            4.115776e+02
Change                           2.922329e+03

Minimizer iterations                      117
Successful steps                           85
Unsuccessful steps                         32
Line search steps                         188

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0084
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.9364
    Line search gradient evaluation    0.6946
  Linear solver                        0.0019
  Line search polynomial minimization  0.0013
Minimizer                              0.9499

Postprocessor                          0.0000
Total                                  0.9500

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
iter      cost      cost_change  |gradient|   |step|    tr_ratio  tr_radius  ls_iter  iter_time  total_time
   0  1.292031e+03    0.00e+00    2.64e+00   0.00e+00   0.00e+00  1.00e+04        0    3.11e-03    3.15e-03
   1  1.854486e+02    1.11e+03    2.94e+00   3.75e-02   1.71e+00  3.00e+04        1    6.26e-03    9.43e-03
   2  1.342265e+00    1.84e+02    2.94e+00   4.35e-03   1.98e+00  9.00e+04        1    6.22e-03    1.57e-02
   3  2.305063e-06    1.34e+00    2.94e+00   1.01e-04   1.83e+00  2.70e+05        1    6.22e-03    2.19e-02
   4  2.982074e-11    2.31e-06    1.58e-02   1.13e-06   1.75e+00  8.10e+05        1    6.22e-03    2.81e-02
   5  4.548686e-17    2.98e-11    2.41e-05   4.17e-09   1.75e+00  2.43e+06        1    6.22e-03    3.44e-02
   6  2.620065e-20    4.55e-17    3.18e-05   5.15e-12   1.75e+00  7.29e+06        1    6.23e-03    4.06e-02
   7  1.544715e-21    2.47e-20    7.67e-06   2.93e-15   1.75e+00  2.19e+07        1    6.20e-03    4.68e-02
   8  1.710773e-20   -1.56e-20    2.53e-05   2.06e-15   1.75e+00  6.56e+07        1    6.26e-03    5.31e-02
   9  2.485855e-20   -7.75e-21    3.17e-05   4.29e-15   1.75e+00  1.97e+08        1    6.23e-03    5.94e-02
  10  3.226347e-20   -7.40e-21    3.48e-05   4.43e-15   1.75e+00  5.90e+08        1    6.46e-03    6.58e-02
  11  1.204065e-20    2.02e-20    2.22e-05   6.94e-15   1.75e+00  1.77e+09        1    6.32e-03    7.22e-02
  12  6.441480e-21    5.60e-21    1.62e-05   1.35e-15   1.75e+00  5.31e+09        1    6.21e-03    7.84e-02
  13  3.380880e-21    3.06e-21    1.16e-05   1.67e-15   5.69e-01  5.33e+09        1    6.21e-03    8.46e-02
  14  8.184142e-21   -4.80e-21    1.83e-05   3.05e-15   4.45e-01  5.32e+09        1    6.20e-03    9.08e-02
  15  1.040780e-20   -2.22e-21    1.95e-05   1.58e-15   3.51e-01  5.18e+09        1    6.22e-03    9.71e-02
  16  4.068877e-20   -3.03e-20    0.00e+00   4.55e-15  -1.16e-01  2.59e+09        1    3.14e-03    1.00e-01
  17  4.068877e-20   -3.03e-20    0.00e+00   4.55e-15  -1.16e-01  6.48e+08        1    3.15e-03    1.03e-01
  18  4.068877e-20   -3.03e-20    0.00e+00   4.55e-15  -1.16e-01  8.10e+07        1    3.14e-03    1.07e-01
  19  4.068877e-20   -3.03e-20    0.00e+00   4.55e-15  -1.16e-01  5.06e+06        1    3.14e-03    1.10e-01
  20  4.068877e-20   -3.03e-20    0.00e+00   4.55e-15  -1.16e-01  1.58e+05        1    3.15e-03    1.13e-01
  21  2.644810e-20   -1.60e-20    3.16e-05   4.55e-15   8.00e-02  9.93e+04        1    6.22e-03    1.19e-01
  22  2.102685e-21    2.43e-20    9.08e-06   6.44e-15   9.21e-01  2.45e+05        1    6.20e-03    1.25e-01
  23  1.779192e-20   -1.57e-20    2.68e-05   3.50e-15   1.43e-01  1.80e+05        1    6.21e-03    1.32e-01
  24  1.326214e-22    1.77e-20    7.75e-07   1.87e-15   9.93e-01  5.40e+05        1    6.23e-03    1.38e-01
  25  2.126529e-20   -2.11e-20    2.84e-05   2.32e-15   9.23e-02  3.50e+05        1    6.23e-03    1.44e-01
  26  2.165444e-20   -3.89e-22    2.92e-05   7.11e-15   7.56e-02  2.17e+05        1    6.25e-03    1.50e-01
  27  1.194278e-20    9.71e-21    2.21e-05   5.06e-15   4.49e-01  2.17e+05        1    6.23e-03    1.57e-01
  28  1.303952e-20   -1.10e-21    2.30e-05   1.68e-15   1.10e-01  1.47e+05        1    6.21e-03    1.63e-01
  29  9.940592e-21    3.10e-21    1.99e-05   3.91e-15   2.38e-01  1.29e+05        1    6.20e-03    1.69e-01
  30  1.078563e-21    8.86e-21    5.12e-06   5.20e-15   8.92e-01  2.48e+05        1    6.21e-03    1.75e-01
  31  9.123176e-22    1.66e-22    5.81e-06   3.96e-15   3.60e-01  2.43e+05        1    6.27e-03    1.81e-01
  32  2.606641e-21   -1.69e-21    9.68e-06   3.23e-15   3.25e-01  2.33e+05        1    6.23e-03    1.88e-01
  33  9.889544e-22    1.62e-21    6.01e-06   3.48e-15   6.21e-01  2.36e+05        1    6.25e-03    1.94e-01
  34  3.787592e-23    9.51e-22    3.24e-07   1.72e-15   9.62e-01  7.08e+05        1    6.23e-03    2.00e-01
  35  1.426846e-21   -1.39e-21    6.15e-06   8.34e-16   3.25e-01  6.79e+05        1    6.21e-03    2.06e-01
  36  2.098241e-20   -1.96e-20    2.86e-05   3.47e-15   1.06e-02  3.50e+05        1    6.22e-03    2.13e-01
  37  1.784178e-21    1.92e-20    7.76e-06   6.01e-15   9.15e-01  8.19e+05        1    6.21e-03    2.19e-01
  38  5.237886e-21   -3.45e-21    1.45e-05   1.88e-15   1.90e-01  6.62e+05        1    6.21e-03    2.25e-01
  39  3.652314e-21    1.59e-21    1.20e-05   3.95e-15   3.03e-01  6.24e+05        1    6.20e-03    2.31e-01
  40  1.149494e-21    2.50e-21    6.63e-06   4.22e-15   6.86e-01  6.57e+05        1    6.23e-03    2.38e-01
  41  9.115256e-22    2.38e-22    5.81e-06   3.21e-15   6.12e-01  6.65e+05        1    6.21e-03    2.44e-01
  42  9.293636e-22   -1.78e-23    6.13e-06   2.95e-15   5.95e-01  6.69e+05        1    6.22e-03    2.50e-01
  43  3.588116e-21   -2.66e-21    1.21e-05   1.24e-15   5.02e-01  6.69e+05        1    6.23e-03    2.56e-01
  44  1.534628e-20   -1.18e-20    2.51e-05   1.55e-15   1.47e-01  4.96e+05        1    6.25e-03    2.63e-01
  45  5.210649e-21    1.01e-20    1.41e-05   2.25e-15   6.61e-01  5.13e+05        1    6.38e-03    2.69e-01
  46  3.604124e-20   -3.08e-20    0.00e+00   4.68e-15  -2.56e-01  2.56e+05        1    3.20e-03    2.72e-01
  47  5.907871e-20   -5.39e-20    0.00e+00   4.69e-15  -6.48e-01  6.41e+04        1    3.12e-03    2.75e-01
  48  5.905507e-20   -5.38e-20    0.00e+00   4.68e-15  -6.48e-01  8.01e+03        1    3.16e-03    2.79e-01
  49  6.105085e-20   -5.58e-20    0.00e+00   4.23e-15  -6.82e-01  5.01e+02        1    3.28e-03    2.82e-01
  50  2.505536e-20   -1.98e-20    0.00e+00   2.44e-15  -6.94e-02  1.56e+01        1    3.16e-03    2.85e-01
  51  2.960625e-20   -2.44e-20    0.00e+00   2.28e-15  -1.47e-01  2.44e-01        1    3.14e-03    2.88e-01
  52  9.107440e-22    4.30e-21    5.21e-06   9.16e-16   1.03e+00  7.33e-01        1    6.21e-03    2.94e-01
  53  6.306486e-20   -6.22e-20    0.00e+00   8.23e-16  -7.19e-01  3.67e-01        1    3.15e-03    2.98e-01
  54  2.535059e-20   -2.44e-20    0.00e+00   5.27e-16  -7.47e-02  9.17e-02        1    3.14e-03    3.01e-01
  55  2.836011e-20   -2.74e-20    0.00e+00   2.63e-16  -1.27e-01  1.15e-02        1    3.14e-03    3.04e-01
  56  2.940769e-22    6.17e-22    2.75e-06   7.76e-18   6.90e+00  3.44e-02        1    6.21e-03    3.10e-01
  57  9.106613e-22   -6.17e-22    5.21e-06   4.05e-17   3.47e-01  3.34e-02        1    6.34e-03    3.16e-01
  58  1.640411e-20   -1.55e-20    2.58e-05   1.21e-16   7.88e-02  2.09e-02        1    6.22e-03    3.23e-01
  59  8.057455e-22    1.56e-20    5.48e-06   2.46e-16   4.52e+00  6.27e-02        1    6.24e-03    3.29e-01
  60  8.060943e-22   -3.49e-25    5.48e-06   1.06e-16   3.26e-01  6.02e-02        1    6.21e-03    3.35e-01
  61  4.411811e-21   -3.61e-21    1.34e-05   1.06e-16   2.66e-01  5.46e-02        1    6.23e-03    3.41e-01
  62  1.446033e-21    2.97e-21    7.45e-06   2.98e-16   1.56e+00  1.64e-01        1    6.21e-03    3.48e-01
  63  2.005972e-20   -1.86e-20    2.85e-05   2.89e-16   1.42e-02  8.54e-02        1    6.23e-03    3.54e-01
  64  8.370601e-23    2.00e-20    7.68e-07   9.15e-16   1.77e+00  2.56e-01        1    6.25e-03    3.60e-01
  65  1.245148e-20   -1.24e-20    2.22e-05   1.57e-16   1.12e-01  1.74e-01        1    6.21e-03    3.66e-01
  66  2.073484e-20   -8.28e-21    2.88e-05   1.08e-15   2.88e-03  8.80e-02        1    6.23e-03    3.73e-01
  67  7.510887e-21    1.32e-20    1.72e-05   9.15e-16   1.12e+00  2.64e-01        1    6.22e-03    3.79e-01
  68  2.863927e-20   -2.11e-20    0.00e+00   1.03e-15  -7.37e-02  1.32e-01        1    3.12e-03    3.82e-01
  69  4.964165e-20   -4.21e-20    0.00e+00   7.21e-16  -2.79e-01  3.30e-02        1    3.14e-03    3.85e-01
  70  6.264027e-23    7.45e-21    1.40e-06   2.31e-16   3.34e+00  9.90e-02        1    6.21e-03    3.91e-01
  71  2.161116e-21   -2.10e-21    9.41e-06   4.08e-17   1.89e-01  7.97e-02        1    6.24e-03    3.98e-01
  72  1.955620e-20   -1.74e-20    2.79e-05   2.84e-16   1.41e-02  4.16e-02        1    6.23e-03    4.04e-01
  73  1.608232e-21    1.79e-20    7.81e-06   5.50e-16   2.59e+00  1.25e-01        1    6.21e-03    4.10e-01
  74  5.414862e-22    1.07e-21    2.87e-06   2.71e-16   1.05e+00  3.74e-01        1    6.22e-03    4.16e-01
  75  9.223705e-21   -8.68e-21    1.91e-05   5.56e-16   1.08e-01  2.52e-01        1    6.21e-03    4.23e-01
  76  1.570242e-20   -6.48e-21    2.54e-05   1.15e-15   4.52e-02  1.44e-01        1    6.23e-03    4.29e-01
  77  3.413098e-20   -1.84e-20    0.00e+00   1.03e-15  -1.03e-01  7.19e-02        1    3.14e-03    4.32e-01
  78  8.472230e-21    7.23e-21    1.82e-05   6.52e-16   8.96e-01  1.42e-01        1    6.20e-03    4.38e-01
  79  3.012464e-20   -2.17e-20    0.00e+00   8.16e-16  -6.99e-02  7.12e-02        1    3.13e-03    4.41e-01
  80  1.570612e-20   -7.23e-21    2.54e-05   5.37e-16   4.08e-02  4.02e-02        1    6.20e-03    4.47e-01
  81  6.162991e-23    1.56e-20    4.20e-07   4.15e-16   2.83e+00  1.20e-01        1    6.21e-03    4.54e-01
  82  9.049236e-23   -2.89e-23    4.72e-07   3.94e-17   1.55e-01  9.07e-02        1    6.24e-03    4.60e-01
  83  3.366827e-23    5.68e-23    1.24e-07   3.96e-17   5.33e+00  2.72e-01        1    6.23e-03    4.66e-01
  84  2.800766e-21   -2.77e-21    1.02e-05   1.57e-16   1.35e-01  1.96e-01        1    6.23e-03    4.72e-01
  85  6.521931e-21   -3.72e-21    1.63e-05   5.93e-16   1.06e-01  1.31e-01        1    6.23e-03    4.79e-01
  86  8.901773e-21   -2.38e-21    1.87e-05   6.09e-16   8.55e-02  8.37e-02        1    6.22e-03    4.85e-01
  87  6.802205e-21    2.10e-21    1.64e-05   5.62e-16   4.32e-01  8.35e-02        1    6.23e-03    4.91e-01
  88  3.015146e-21    3.79e-21    1.08e-05   5.37e-16   1.02e+00  2.50e-01        1    6.24e-03    4.97e-01
  89  3.413322e-20   -3.11e-20    0.00e+00   6.71e-16  -2.29e+00  1.25e-01        1    3.14e-03    5.01e-01
  90  2.931390e-20   -2.63e-20    0.00e+00   4.99e-16  -1.94e+00  3.13e-02        1    3.13e-03    5.04e-01
  91  2.556714e-21    4.58e-22    9.97e-06   1.90e-16   6.74e-01  3.27e-02        1    6.27e-03    5.10e-01
  92  1.867641e-21    6.89e-22    8.72e-06   1.79e-16   9.19e-01  7.96e-02        1    6.23e-03    5.16e-01
  93  3.270188e-23    1.83e-21    1.24e-07   2.46e-16   1.83e+00  2.39e-01        1    6.20e-03    5.22e-01
  94  2.552800e-21   -2.52e-21    9.97e-06   1.11e-16   5.68e-01  2.39e-01        1    6.23e-03    5.29e-01
  95  9.235486e-21   -6.68e-21    0.00e+00   6.13e-16  -2.52e-02  1.20e-01        1    3.15e-03    5.32e-01
  96  6.186996e-21   -3.63e-21    1.54e-05   3.74e-16   2.12e-01  1.00e-01        1    6.20e-03    5.38e-01
  97  8.460614e-21   -2.27e-21    1.86e-05   5.38e-16   2.68e-02  5.43e-02        1    6.23e-03    5.44e-01
  98  9.233748e-21   -7.73e-22    0.00e+00   4.01e-16  -1.65e-02  2.72e-02        1    3.13e-03    5.47e-01
  99  1.726260e-21    6.73e-21    8.38e-06   2.31e-16   3.05e+00  8.15e-02        1    6.22e-03    5.54e-01
 100  2.742573e-21   -1.02e-21    1.06e-05   2.46e-16   3.14e-01  7.75e-02        1    6.23e-03    5.60e-01
 101  1.727296e-21    1.02e-21    8.38e-06   2.83e-16   1.46e+00  2.32e-01        1    6.21e-03    5.66e-01
 102  2.414465e-22    1.49e-21    2.90e-06   4.15e-16   1.36e+00  6.97e-01        1    6.22e-03    5.72e-01
 103  8.470396e-21   -8.23e-21    0.00e+00   2.77e-16  -1.57e-03  3.49e-01        1    3.12e-03    5.76e-01
 104  8.470396e-21   -8.23e-21    0.00e+00   2.70e-16  -1.57e-03  8.72e-02        1    3.13e-03    5.79e-01
 105  3.787627e-23    2.04e-22    7.11e-07   1.22e-16   1.65e+00  2.62e-01        1    6.19e-03    5.85e-01
 106  1.856279e-21   -1.82e-21    7.19e-06   1.18e-16   1.07e+00  7.85e-01        1    6.22e-03    5.91e-01
 107  3.699839e-23    1.82e-21    1.75e-07   1.22e-15   1.16e+00  2.35e+00        1    6.23e-03    5.97e-01
 108  1.077916e-20   -1.07e-20    0.00e+00   2.49e-16  -2.99e-01  1.18e+00        1    3.14e-03    6.01e-01
 109  1.075042e-20   -1.07e-20    0.00e+00   2.49e-16  -2.96e-01  2.94e-01        1    3.13e-03    6.04e-01
 110  5.703292e-23   -2.00e-23    1.22e-07   1.11e-16   1.09e+00  8.83e-01        1    6.23e-03    6.10e-01
 111  2.571407e-21   -2.51e-21    9.97e-06   2.52e-16   7.59e-01  1.03e+00        1    6.23e-03    6.16e-01
 112  1.537267e-21    1.03e-21    7.54e-06   1.16e-15   6.75e-01  1.07e+00        1    6.21e-03    6.22e-01
 113  1.736026e-21   -1.99e-22    8.38e-06   8.54e-16   5.75e-01  1.07e+00        1    6.23e-03    6.29e-01
 114  6.138841e-22    1.12e-21    4.80e-06   6.51e-16   6.67e-01  1.12e+00        1    6.22e-03    6.35e-01
 115  4.141947e-22    2.00e-22    4.02e-06   5.54e-16   5.76e-01  1.12e+00        1    6.21e-03    6.41e-01
 116  4.624307e-20   -4.58e-20    0.00e+00   4.64e-16  -2.63e+00  5.60e-01        1    3.14e-03    6.44e-01
 117  3.220753e-20   -3.18e-20    0.00e+00   3.21e-16  -1.66e+00  1.40e-01        1    3.12e-03    6.47e-01
 118  5.322690e-21   -4.91e-21    1.47e-05   2.00e-16   2.20e-01  1.19e-01        1    6.23e-03    6.54e-01
 119  1.499016e-20   -9.67e-21    0.00e+00   5.75e-16  -3.68e-01  5.96e-02        1    3.14e-03    6.57e-01
 120  2.347459e-22    5.09e-21    2.42e-06   3.68e-16   2.10e+00  1.79e-01        1    6.21e-03    6.63e-01
 121  1.493597e-20   -1.47e-20    0.00e+00   1.23e-16  -3.86e-01  8.94e-02        1    3.15e-03    6.66e-01
 122  6.840481e-21   -6.61e-21    1.63e-05   8.47e-17   9.67e-02  5.86e-02        1    6.22e-03    6.72e-01
 123  1.498988e-20   -8.15e-21    0.00e+00   3.74e-16  -3.30e-01  2.93e-02        1    3.13e-03    6.76e-01
 124  1.883679e-21    4.96e-21    8.37e-06   2.19e-16   2.70e+00  8.79e-02        1    6.22e-03    6.82e-01
 125  1.075043e-20   -8.87e-21    0.00e+00   3.21e-16  -1.17e-01  4.40e-02        1    3.14e-03    6.85e-01
 126  1.134122e-21    7.50e-22    6.77e-06   1.90e-16   1.14e+00  1.32e-01        1    6.19e-03    6.91e-01
 127  1.637804e-22    9.70e-22    1.97e-06   2.71e-16   1.26e+00  3.96e-01        1    6.22e-03    6.97e-01
 128  8.815808e-23    7.56e-23    4.72e-07   2.54e-16   6.41e-01  4.05e-01        1    6.22e-03    7.04e-01
 129  9.886174e-21   -9.80e-21    0.00e+00   1.76e-16  -7.07e-02  2.02e-01        1    3.14e-03    7.07e-01
 130  2.155723e-21   -2.07e-21    9.14e-06   1.18e-16   3.13e-01  1.92e-01        1    6.22e-03    7.13e-01
 131  1.278491e-20   -1.06e-20    0.00e+00   5.09e-16  -1.98e-01  9.61e-02        1    3.12e-03    7.16e-01
 132  6.897460e-21   -4.74e-21    1.62e-05   3.43e-16   7.30e-02  5.92e-02        1    6.22e-03    7.22e-01
 133  9.012293e-23    6.81e-21    1.13e-06   3.74e-16   2.27e+00  1.78e-01        1    6.25e-03    7.29e-01
 134  1.877567e-21   -1.79e-21    8.37e-06   1.57e-16   2.69e-01  1.62e-01        1    6.30e-03    7.35e-01
 135  8.137171e-21   -6.26e-21    1.79e-05   4.79e-16   1.26e-02  8.40e-02        1    6.24e-03    7.41e-01
 136  9.828029e-23    8.04e-21    3.64e-07   5.50e-16   1.81e+00  2.52e-01        1    6.22e-03    7.47e-01
 137  6.231961e-23    3.60e-23    1.23e-06   1.62e-16   1.57e+00  7.56e-01        1    6.22e-03    7.54e-01
 138  1.944839e-21   -1.88e-21    8.27e-06   2.53e-16   2.15e-01  6.38e-01        1    6.24e-03    7.60e-01
 139  3.096906e-21   -1.15e-21    1.12e-05   8.53e-16   1.68e-01  4.93e-01        1    6.45e-03    7.66e-01
 140  1.715746e-22    2.93e-21    1.96e-06   7.13e-16   1.02e+00  1.48e+00        1    6.25e-03    7.73e-01
 141  4.244637e-22   -2.53e-22    3.99e-06   6.48e-16   2.29e-01  1.28e+00        1    6.23e-03    7.79e-01
 142  1.596531e-20   -1.55e-20    0.00e+00   4.64e-16  -2.12e-01  6.38e-01        1    3.24e-03    7.82e-01
 143  1.596531e-20   -1.55e-20    0.00e+00   4.49e-16  -2.12e-01  1.60e-01        1    3.14e-03    7.85e-01
 144  1.600322e-20   -1.56e-20    0.00e+00   2.00e-16  -2.14e-01  1.99e-02        1    3.19e-03    7.89e-01
 145  3.580061e-21   -3.16e-21    1.19e-05   4.02e-17   1.39e-01  1.45e-02        1    6.23e-03    7.95e-01
 146  3.993641e-22    3.18e-21    3.89e-06   4.92e-17   5.86e+00  4.35e-02        1    6.23e-03    8.01e-01
 147  3.580061e-21   -3.18e-21    1.19e-05   4.89e-17   1.36e-01  3.14e-02        1    6.21e-03    8.07e-01
 148  1.594076e-20   -1.24e-20    0.00e+00   2.00e-16  -2.03e-01  1.57e-02        1    3.13e-03    8.10e-01
 149  5.408940e-21   -1.83e-21    1.48e-05   1.31e-16   8.39e-02  9.96e-03        1    6.26e-03    8.17e-01
 150  4.433661e-22    4.97e-21    3.89e-06   4.92e-17   8.37e+00  2.99e-02        1    6.22e-03    8.23e-01
 151  4.268883e-22    1.65e-23    3.94e-06   4.02e-17   2.17e-01  2.53e-02        1    6.22e-03    8.29e-01
 152  1.446873e-22    2.82e-22    1.08e-06   4.05e-17   2.92e+00  7.58e-02        1    6.36e-03    8.35e-01
 153  7.548321e-21   -7.40e-21    1.75e-05   1.11e-16   2.45e-02  4.08e-02        1    6.30e-03    8.42e-01
 154  3.583863e-21    3.96e-21    1.20e-05   2.98e-16   1.48e+00  1.22e-01        1    6.26e-03    8.48e-01
 155  1.598133e-20   -1.24e-20    0.00e+00   5.21e-16  -1.78e-01  6.12e-02        1    3.15e-03    8.51e-01
 156  2.241839e-21    1.34e-21    9.26e-06   3.43e-16   8.09e-01  8.02e-02        1    6.26e-03    8.58e-01
 157  4.254406e-22    1.82e-21    3.91e-06   3.21e-16   1.56e+00  2.40e-01        1    6.24e-03    8.64e-01
 158  1.165175e-21   -7.40e-22    6.45e-06   2.78e-16   1.70e-01  1.87e-01        1    6.25e-03    8.70e-01
 159  3.579302e-21   -2.41e-21    1.19e-05   4.50e-16   1.11e-01  1.27e-01        1    6.22e-03    8.76e-01
 160  1.596564e-20   -1.24e-20    0.00e+00   5.21e-16  -1.62e-01  6.35e-02        1    3.13e-03    8.79e-01
 161  4.262651e-22    3.15e-21    3.94e-06   3.43e-16   1.88e+00  1.90e-01        1    6.22e-03    8.86e-01
 162  1.594612e-20   -1.55e-20    0.00e+00   2.77e-16  -1.63e-01  9.52e-02        1    3.14e-03    8.89e-01
 163  7.540991e-21   -7.11e-21    1.72e-05   1.78e-16   2.01e-02  5.05e-02        1    6.24e-03    8.95e-01
 164  3.573956e-21    3.97e-21    1.20e-05   3.73e-16   1.31e+00  1.52e-01        1    6.24e-03    9.01e-01
 165  1.598803e-20   -1.24e-20    0.00e+00   5.50e-16  -1.47e-01  7.58e-02        1    3.15e-03    9.04e-01
 166  1.070819e-22    3.47e-21    1.50e-06   3.56e-16   1.85e+00  2.27e-01        1    6.23e-03    9.11e-01
 167  1.596564e-20   -1.59e-20    0.00e+00   8.47e-17  -1.48e-01  1.14e-01        1    3.15e-03    9.14e-01
 168  7.570056e-21   -7.46e-21    1.71e-05   4.06e-17   1.76e-02  5.99e-02        1    6.24e-03    9.20e-01
 169  1.936029e-20   -1.18e-20    0.00e+00   4.99e-16  -2.02e-01  2.99e-02        1    3.13e-03    9.23e-01
 170  4.241410e-22    7.15e-21    3.94e-06   2.31e-16   3.48e+00  8.98e-02        1    6.22e-03    9.30e-01
 171  1.167180e-21   -7.43e-22    6.45e-06   1.78e-16   1.38e-01  6.51e-02        1    6.20e-03    9.36e-01
 172  4.642349e-22    7.03e-22    3.84e-06   1.90e-16   1.37e+00  1.95e-01        1    6.26e-03    9.42e-01
 173  1.141369e-21   -6.77e-22    6.50e-06   2.64e-16   1.36e-01  1.41e-01        1    6.34e-03    9.48e-01
 174  9.907809e-21   -8.77e-21    0.00e+00   3.22e-16  -2.65e-02  7.04e-02        1    3.13e-03    9.51e-01
 175  3.626289e-21   -2.48e-21    1.22e-05   2.00e-16   8.89e-02  4.53e-02        1    6.24e-03    9.58e-01
 176  7.537538e-21   -3.91e-21    1.72e-05   2.31e-16   1.66e-02  2.38e-02        1    6.22e-03    9.64e-01
 177  3.626233e-21    3.91e-21    1.22e-05   2.00e-16   2.27e+00  7.13e-02        1    6.24e-03    9.70e-01
 178  1.596284e-20   -1.23e-20    0.00e+00   2.99e-16  -1.26e-01  3.57e-02        1    3.18e-03    9.73e-01
 179  7.537538e-21   -3.91e-21    1.72e-05   2.13e-16   1.57e-02  1.87e-02        1    6.25e-03    9.80e-01
 180  4.959584e-22    7.04e-21    4.29e-06   1.90e-16   5.00e+00  5.61e-02        1    6.23e-03    9.86e-01
 181  5.331683e-22   -3.72e-23    4.34e-06   8.50e-17   1.32e-01  4.00e-02        1    6.22e-03    9.92e-01
 182  4.992752e-22    3.39e-23    3.64e-06   6.91e-17   2.09e-01  3.34e-02        1    6.21e-03    9.98e-01
 183  4.267220e-22    7.26e-23    3.94e-06   1.18e-16   6.57e-01  3.45e-02        1    6.22e-03    1.00e+00
 184  3.977923e-22    2.89e-23    3.99e-06   4.05e-17   2.35e-01  3.00e-02        1    6.24e-03    1.01e+00
 185  4.267220e-22   -2.89e-23    3.94e-06   4.05e-17   1.32e-01  2.15e-02        1    6.25e-03    1.02e+00
 186  4.160165e-22    1.07e-23    3.96e-06   4.02e-17   1.32e-01  1.54e-02        1    6.21e-03    1.02e+00
 187  3.977923e-22    1.82e-23    3.99e-06   2.88e-17   2.84e-01  1.42e-02        1    6.23e-03    1.03e+00

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          1.292031e+03
Final                            3.270188e-23
Change                           1.292031e+03

Minimizer iterations                      188
Successful steps                          142
Unsuccessful steps                         46
Line search steps                         112

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0150
    Line search cost evaluation        0.0000
  Jacobian evaluation                  1.0090
    Line search gradient evaluation    0.5703
  Linear solver                        0.0034
  Line search polynomial minimization  0.0005
Minimizer                              1.0327

Postprocessor                          0.0000
Total                                  1.0328

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
fitErrUA63 = {
{-0.0740782,-0.4723729,-0.2742734}
};
fitErrEl63 = {
{0.0487660,0.0274944,0.0843414}
};
fitErrLa63 = {
{0.0601996,0.0025170,0.0941668}
};
fitErrWr63 = {
{0.2440536,0.0627603,0.0536549}
};
fitErrEe63 = {
{0.2987375,0.1212158,0.0163237}
};
rMatsBase63 = {
{0.3451013,0.9115690,-0.2234884},
{0.9149800,-0.3797979,-0.1362539},
{-0.2090853,-0.1574660,-0.9651362}
};
outThetasWam63 = {
{-0.1279953,-0.1496692,-0.1408481,0.9793428,0.0000000,0.0000000,0.0000000}
};
(* 

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          2.496304e+03
Final                            4.645081e+02
Change                           2.031796e+03

Minimizer iterations                      117
Successful steps                           87
Unsuccessful steps                         30
Line search steps                         180

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0092
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.9966
    Line search gradient evaluation    0.7280
  Linear solver                        0.0020
  Line search polynomial minimization  0.0013
Minimizer                              1.0113

Postprocessor                          0.0000
Total                                  1.0113

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
(* 
iter      cost      cost_change  |gradient|   |step|    tr_ratio  tr_radius  ls_iter  iter_time  total_time
   0  1.544074e+03    0.00e+00    2.66e+00   0.00e+00   0.00e+00  1.00e+04        0    3.13e-03    3.16e-03
   1  1.702738e+02    1.37e+03    2.92e+00   3.75e-02   1.78e+00  3.00e+04        1    6.28e-03    9.53e-03
   2  9.165214e-01    1.69e+02    2.92e+00   4.07e-03   1.99e+00  9.00e+04        1    6.21e-03    1.58e-02
   3  5.054386e-06    9.17e-01    2.92e+00   1.23e-04   1.80e+00  2.70e+05        1    6.22e-03    2.20e-02
   4  8.075591e-11    5.05e-06    2.81e-02   1.50e-06   1.80e+00  8.10e+05        1    6.22e-03    2.82e-02
   5  1.470319e-16    8.08e-11    3.73e-05   6.08e-09   1.80e+00  2.43e+06        1    6.37e-03    3.46e-02
   6  1.493805e-21    1.47e-16    8.06e-06   8.21e-12   1.80e+00  7.29e+06        1    6.27e-03    4.09e-02
   7  1.858449e-21   -3.65e-22    9.45e-06   2.38e-15   1.80e+00  2.19e+07        1    6.26e-03    4.72e-02
   8  3.216991e-21   -1.36e-21    1.25e-05   9.23e-16   1.80e+00  6.56e+07        1    6.64e-03    5.38e-02
   9  8.419407e-23    3.13e-21    1.60e-06   9.43e-16   1.80e+00  1.97e+08        1    6.22e-03    6.01e-02
  10  2.281053e-21   -2.20e-21    1.05e-05   6.97e-16   1.80e+00  5.90e+08        1    6.23e-03    6.63e-02
  11  1.372768e-21    9.08e-22    8.15e-06   1.36e-15   1.80e+00  1.77e+09        1    6.36e-03    7.27e-02
  12  9.904436e-22    3.82e-22    6.84e-06   6.32e-16   1.80e+00  5.31e+09        1    6.21e-03    7.89e-02
  13  1.246036e-21   -2.56e-22    7.52e-06   1.42e-15   1.80e+00  1.59e+10        1    6.54e-03    8.55e-02
  14  3.942422e-21   -2.70e-21    1.35e-05   2.10e-15   1.80e+00  4.78e+10        1    6.25e-03    9.18e-02
  15  4.306964e-21   -3.65e-22    0.00e+00   1.07e-15  -9.25e-02  2.39e+10        1    3.14e-03    9.49e-02
  16  4.306964e-21   -3.65e-22    0.00e+00   1.07e-15  -9.25e-02  5.98e+09        1    3.12e-03    9.81e-02
  17  4.306964e-21   -3.65e-22    0.00e+00   1.07e-15  -9.25e-02  7.47e+08        1    3.29e-03    1.01e-01
  18  4.306964e-21   -3.65e-22    0.00e+00   1.07e-15  -9.25e-02  4.67e+07        1    3.15e-03    1.05e-01
  19  4.306964e-21   -3.65e-22    0.00e+00   1.07e-15  -9.25e-02  1.46e+06        1    3.13e-03    1.08e-01
  20  4.306964e-21   -3.65e-22    0.00e+00   1.07e-15  -9.25e-02  2.28e+04        1    3.14e-03    1.11e-01
  21  4.306964e-21   -3.65e-22    0.00e+00   1.07e-15  -9.25e-02  1.78e+02        1    3.17e-03    1.14e-01
  22  1.093131e-21    2.85e-21    6.94e-06   9.94e-16   7.23e-01  1.96e+02        1    6.65e-03    1.21e-01
  23  1.917609e-20   -1.81e-20    0.00e+00   1.24e-15  -3.03e+00  9.78e+01        1    3.15e-03    1.24e-01
  24  1.917608e-20   -1.81e-20    0.00e+00   1.19e-15  -3.03e+00  2.44e+01        1    3.15e-03    1.27e-01
  25  1.613137e-20   -1.50e-20    0.00e+00   9.91e-16  -2.42e+00  3.06e+00        1    3.14e-03    1.30e-01
  26  8.179190e-21   -7.09e-21    0.00e+00   8.35e-16  -8.44e-01  1.91e-01        1    3.15e-03    1.33e-01
  27  9.960835e-21   -8.87e-21    0.00e+00   3.06e-16  -1.27e+00  5.97e-03        1    3.29e-03    1.37e-01
  28  2.788987e-22    8.14e-22    1.72e-06   1.99e-17   1.21e+01  1.79e-02        1    6.22e-03    1.43e-01

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                            2                        2
Parameters                                 11                       11
Effective parameters                       10                       10
Residual blocks                             1                        1
Residual                                   12                       12

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                     1, 1

Cost:
Initial                          1.544074e+03
Final                            8.419407e-23
Change                           1.544074e+03

Minimizer iterations                       29
Successful steps                           17
Unsuccessful steps                         12
Line search steps                          18

Time (in seconds):
Preprocessor                           0.0000

  Residual evaluation                  0.0023
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.1421
    Line search gradient evaluation    0.0895
  Linear solver                        0.0006
  Line search polynomial minimization  0.0001
Minimizer                              0.1460

Postprocessor                          0.0000
Total                                  0.1460

Termination:                      CONVERGENCE (Function tolerance reached. |cost_change|/cost: 0.000000e+00 <= 1.000000e-99)

*) 
fitErrUA64 = {
{-0.1283543,-0.4578542,-0.2717282}
};
fitErrEl64 = {
{0.0489287,0.0408921,0.1139281}
};
fitErrLa64 = {
{0.0623012,0.0124500,0.1262595}
};
fitErrWr64 = {
{0.2770780,0.0868005,0.0922712}
};
fitErrEe64 = {
{0.3350161,0.1488382,0.0557896}
};
rMatsBase64 = {
{0.2987311,0.9337299,-0.1972518},
{0.9254939,-0.3338780,-0.1788479},
{-0.2328536,-0.1291279,-0.9639010}
};
outThetasWam64 = {
{-0.1161138,-0.1291518,-0.1215115,0.9753488,0.0000000,0.0000000,0.0000000}
};
(* 
W1215 11:19:57.062471  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:19:57.062510  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                          130                      130
Parameters                                715                      715
Effective parameters                      650                      650
Residual blocks                            65                       65
Residual                                  780                      780

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                   65, 65

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0003

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.1304
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.1304

Postprocessor                          0.0000
Total                                  0.1307

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA Mean = -nan
fitErrEl Mean = -nan
fitErrLa Mean = -nan
fitErrWr Mean = -nan
fitErrEe Mean = -nan
fitErrUA = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{0.0000000,0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000}
};
fitErrEl = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000}
};
fitErrLa = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000}
};
fitErrWr = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{-0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{0.0000000,0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{0.0000000,0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000}
};
fitErrEe = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{0.0198192,0.0468916,-0.0090264},
{0.0194719,0.0472565,-0.0095800},
{0.0188054,0.0477058,-0.0101607},
{0.0194095,0.0474794,-0.0107775},
{0.0191986,0.0476486,-0.0114469},
{0.0194213,0.0475791,-0.0120350},
{0.0196124,0.0474678,-0.0127577},
{0.0200615,0.0473754,-0.0134251},
{0.0205930,0.0472295,-0.0140315},
{0.0211027,0.0470038,-0.0148991},
{0.0220880,0.0466121,-0.0153033},
{0.0230452,0.0462687,-0.0160516},
{0.0239676,0.0458456,-0.0168601},
{0.0252738,0.0452115,-0.0172564},
{0.0263273,0.0446544,-0.0180285},
{0.0277295,0.0438309,-0.0183262},
{0.0289813,0.0434002,-0.0189028},
{0.0302259,0.0424679,-0.0191882},
{0.0311686,0.0419506,-0.0198571},
{0.0315830,0.0410842,-0.0211138},
{0.0324472,0.0402509,-0.0215575},
{0.0333356,0.0394796,-0.0222861},
{0.0336344,0.0386279,-0.0231469},
{0.0341273,0.0378231,-0.0238799},
{0.0346713,0.0368716,-0.0247075},
{0.0351012,0.0359524,-0.0254341},
{0.0357948,0.0349720,-0.0260086},
{0.0365365,0.0337998,-0.0267446},
{0.0371893,0.0332512,-0.0273800},
{0.0379040,0.0320082,-0.0278136},
{0.0386182,0.0311305,-0.0284030},
{0.0365582,0.0339315,-0.0279160},
{0.0348603,0.0360363,-0.0276854},
{0.0331712,0.0378544,-0.0275098},
{0.0313452,0.0393230,-0.0275635},
{0.0296552,0.0406344,-0.0274363},
{0.0275075,0.0421572,-0.0274741},
{0.0240702,0.0437255,-0.0282459},
{0.0208691,0.0452366,-0.0288147},
{0.0179131,0.0464069,-0.0292288},
{0.0149827,0.0471677,-0.0296839}
};
outShoToUaVsWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.4827470,-0.2232897,0.1399895},
{-0.4760378,-0.2357044,0.1425884},
{-0.4668517,-0.2519944,0.1450802},
{-0.4636300,-0.2562436,0.1479406},
{-0.4555401,-0.2689639,0.1504715},
{-0.4483462,-0.2789667,0.1538285},
{-0.4409941,-0.2886688,0.1571450},
{-0.4339875,-0.2973800,0.1603744},
{-0.4267885,-0.3059193,0.1636000},
{-0.4202267,-0.3128391,0.1674550},
{-0.4142546,-0.3189378,0.1707975},
{-0.4089167,-0.3235470,0.1749412},
{-0.4035799,-0.3280525,0.1788990},
{-0.3989475,-0.3315571,0.1827863},
{-0.3941655,-0.3347769,0.1872379},
{-0.3904497,-0.3366114,0.1916816},
{-0.3865210,-0.3384914,0.1962781},
{-0.3833682,-0.3396053,0.2004920},
{-0.3795156,-0.3411932,0.2050734},
{-0.3760717,-0.3419291,0.2101298},
{-0.3729798,-0.3422495,0.2150613},
{-0.3709364,-0.3410285,0.2204672},
{-0.3669841,-0.3416236,0.2260885},
{-0.3634600,-0.3414120,0.2320230},
{-0.3622364,-0.3387768,0.2377289},
{-0.3603682,-0.3364240,0.2438312},
{-0.3600591,-0.3324143,0.2497162},
{-0.3615138,-0.3264104,0.2554683},
{-0.3601852,-0.3235336,0.2609457},
{-0.3616631,-0.3168073,0.2670822},
{-0.3626981,-0.3106050,0.2729004},
{-0.3376648,-0.3397651,0.2702631},
{-0.3160576,-0.3610532,0.2687903},
{-0.2954960,-0.3791861,0.2672077},
{-0.2749304,-0.3953236,0.2657678},
{-0.2551956,-0.4097448,0.2635989},
{-0.2300126,-0.4256214,0.2616115},
{-0.1926248,-0.4413283,0.2657537},
{-0.1570436,-0.4529518,0.2695774},
{-0.1250443,-0.4606590,0.2732348},
{-0.0941014,-0.4656538,0.2771488}
};
outShoToElVsWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.4722912,-0.2604217,0.1168186},
{-0.4645716,-0.2727107,0.1196960},
{-0.4540613,-0.2887229,0.1224435},
{-0.4504542,-0.2929988,0.1255697},
{-0.4412758,-0.3054816,0.1283810},
{-0.4332048,-0.3153143,0.1320434},
{-0.4249453,-0.3248453,0.1357278},
{-0.4170856,-0.3333910,0.1393380},
{-0.4089766,-0.3417652,0.1430375},
{-0.4016659,-0.3485482,0.1473216},
{-0.3949991,-0.3545090,0.1510765},
{-0.3890632,-0.3590474,0.1556912},
{-0.3831151,-0.3634637,0.1601309},
{-0.3779529,-0.3669053,0.1644905},
{-0.3726098,-0.3700742,0.1695051},
{-0.3684929,-0.3719017,0.1744335},
{-0.3640799,-0.3737675,0.1796348},
{-0.3604703,-0.3748917,0.1845057},
{-0.3561049,-0.3764398,0.1897562},
{-0.3521883,-0.3771657,0.1955364},
{-0.3486554,-0.3774754,0.2011882},
{-0.3463408,-0.3763209,0.2072573},
{-0.3419766,-0.3768413,0.2134657},
{-0.3381544,-0.3765918,0.2198982},
{-0.3368376,-0.3740689,0.2261369},
{-0.3348002,-0.3717835,0.2328322},
{-0.3344901,-0.3679451,0.2392860},
{-0.3361764,-0.3622479,0.2455338},
{-0.3347587,-0.3594447,0.2515177},
{-0.3364470,-0.3530220,0.2582709},
{-0.3376513,-0.3470752,0.2646798},
{-0.3099886,-0.3741710,0.2615877},
{-0.2863674,-0.3936745,0.2598828},
{-0.2640432,-0.4100713,0.2581621},
{-0.2419079,-0.4244756,0.2565659},
{-0.2208473,-0.4372308,0.2541272},
{-0.1941010,-0.4509624,0.2519578},
{-0.1545803,-0.4635076,0.2564969},
{-0.1172815,-0.4720436,0.2606623},
{-0.0839327,-0.4768620,0.2647318},
{-0.0519035,-0.4790124,0.2690318}
};
outShoToLaVsWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.5093764,-0.2848546,0.1240795},
{-0.5012699,-0.2975028,0.1276699},
{-0.4901902,-0.3140946,0.1311601},
{-0.4866586,-0.3179775,0.1350725},
{-0.4771283,-0.3306535,0.1386753},
{-0.4688325,-0.3404401,0.1431952},
{-0.4603696,-0.3498640,0.1477355},
{-0.4523900,-0.3581489,0.1522082},
{-0.4441628,-0.3662463,0.1567345},
{-0.4368237,-0.3725649,0.1618862},
{-0.4301922,-0.3779726,0.1664358},
{-0.4243713,-0.3817586,0.1718942},
{-0.4185577,-0.3853709,0.1771279},
{-0.4135763,-0.3879167,0.1822245},
{-0.4084157,-0.3901322,0.1879610},
{-0.4045156,-0.3909224,0.1935538},
{-0.4003214,-0.3917311,0.1993545},
{-0.3969533,-0.3918123,0.2046969},
{-0.3927853,-0.3923787,0.2103839},
{-0.3890638,-0.3921230,0.2165477},
{-0.3857232,-0.3914906,0.2225086},
{-0.3836241,-0.3892315,0.2288970},
{-0.3793455,-0.3889675,0.2354093},
{-0.3756041,-0.3878396,0.2421694},
{-0.3744256,-0.3843030,0.2486626},
{-0.3724860,-0.3811234,0.2555819},
{-0.3723087,-0.3762239,0.2622254},
{-0.3741344,-0.3692773,0.2686591},
{-0.3727933,-0.3655530,0.2747783},
{-0.3745826,-0.3579614,0.2816435},
{-0.3758627,-0.3509230,0.2881337},
{-0.3478182,-0.3807562,0.2850516},
{-0.3237972,-0.4022921,0.2833296},
{-0.3010397,-0.4205409,0.2815425},
{-0.2784028,-0.4366658,0.2799009},
{-0.2567936,-0.4510104,0.2774293},
{-0.2293232,-0.4666071,0.2751879},
{-0.1885836,-0.4816041,0.2797626},
{-0.1499877,-0.4923462,0.2839670},
{-0.1153482,-0.4991156,0.2880308},
{-0.0819455,-0.5030619,0.2923577}
};
outShoToWrVsWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.3950540,-0.5075229,-0.0412966},
{-0.3854745,-0.5212808,-0.0351638},
{-0.3714356,-0.5382321,-0.0290265},
{-0.3708459,-0.5456763,-0.0222192},
{-0.3602752,-0.5600668,-0.0153210},
{-0.3522968,-0.5724173,-0.0071577},
{-0.3440283,-0.5846815,0.0017031},
{-0.3369011,-0.5962748,0.0109341},
{-0.3289750,-0.6077311,0.0210258},
{-0.3231834,-0.6178305,0.0317681},
{-0.3184394,-0.6270342,0.0420185},
{-0.3154662,-0.6352011,0.0539682},
{-0.3125264,-0.6430917,0.0660542},
{-0.3109024,-0.6498673,0.0781093},
{-0.3089407,-0.6562850,0.0916933},
{-0.3090616,-0.6610767,0.1046427},
{-0.3083649,-0.6656905,0.1187924},
{-0.3082191,-0.6691709,0.1325967},
{-0.3066860,-0.6726614,0.1469130},
{-0.3054306,-0.6750089,0.1619491},
{-0.3043687,-0.6765686,0.1765522},
{-0.3058830,-0.6765497,0.1914189},
{-0.3031882,-0.6776046,0.2055986},
{-0.3019031,-0.6777741,0.2196719},
{-0.3043061,-0.6755900,0.2333278},
{-0.3048749,-0.6732972,0.2476310},
{-0.3085789,-0.6693757,0.2614942},
{-0.3159952,-0.6635289,0.2746452},
{-0.3176811,-0.6601717,0.2875264},
{-0.3241908,-0.6530310,0.3015072},
{-0.3297436,-0.6461518,0.3148363},
{-0.2817712,-0.6723558,0.3096984},
{-0.2423608,-0.6900067,0.3075863},
{-0.2055731,-0.7039169,0.3057125},
{-0.1699583,-0.7153464,0.3039202},
{-0.1368624,-0.7250342,0.3003959},
{-0.0954572,-0.7341130,0.2980029},
{-0.0337287,-0.7370580,0.3073894},
{0.0234002,-0.7350828,0.3158352},
{0.0741423,-0.7288858,0.3240722},
{0.1221692,-0.7192517,0.3323469}
};
outShoToEeVsWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.3721895,-0.5520565,-0.0743719},
{-0.3623154,-0.5660364,-0.0677306},
{-0.3476847,-0.5830596,-0.0610638},
{-0.3476833,-0.5912161,-0.0536775},
{-0.3369046,-0.6059495,-0.0461203},
{-0.3289896,-0.6188128,-0.0372282},
{-0.3207601,-0.6316450,-0.0275033},
{-0.3138034,-0.6439000,-0.0173207},
{-0.3059375,-0.6560281,-0.0061159},
{-0.3004554,-0.6668836,0.0057445},
{-0.2960889,-0.6768465,0.0171350},
{-0.2936851,-0.6858896,0.0303829},
{-0.2913201,-0.6946358,0.0438394},
{-0.2903676,-0.7022574,0.0572863},
{-0.2890457,-0.7095155,0.0724398},
{-0.2899708,-0.7151075,0.0868605},
{-0.2899736,-0.7204823,0.1026799},
{-0.2904723,-0.7246427,0.1181767},
{-0.2894662,-0.7287179,0.1342189},
{-0.2887039,-0.7315861,0.1510294},
{-0.2880978,-0.7335842,0.1673609},
{-0.2903348,-0.7340133,0.1839233},
{-0.2879568,-0.7353321,0.1996365},
{-0.2871629,-0.7357610,0.2151724},
{-0.2902822,-0.7338474,0.2302609},
{-0.2913527,-0.7317319,0.2460409},
{-0.2958329,-0.7280061,0.2613480},
{-0.3043673,-0.7223792,0.2758424},
{-0.3066586,-0.7190954,0.2900760},
{-0.3141125,-0.7120450,0.3054799},
{-0.3205198,-0.7051975,0.3201768},
{-0.2685618,-0.7306757,0.3146278},
{-0.2260735,-0.7475497,0.3124377},
{-0.1864797,-0.7605921,0.3105464},
{-0.1482694,-0.7710825,0.3087241},
{-0.1128762,-0.7798389,0.3049892},
{-0.0686841,-0.7876142,0.3025659},
{-0.0027577,-0.7881488,0.3129148},
{0.0580778,-0.7836301,0.3222089},
{0.1120405,-0.7748398,0.3312805},
{0.1629922,-0.7624897,0.3403447}
};
outPUaWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.3771501,0.7121837,0.8585740},
{-0.3761966,0.7010206,0.8532307},
{-0.3805087,0.6868744,0.8473624},
{-0.3661632,0.6823880,0.8414252},
{-0.3647188,0.6715629,0.8346420},
{-0.3591510,0.6634326,0.8273724},
{-0.3544360,0.6563831,0.8189494},
{-0.3479488,0.6497823,0.8106881},
{-0.3436602,0.6441977,0.8009099},
{-0.3358607,0.6395102,0.7919166},
{-0.3279675,0.6351091,0.7829509},
{-0.3184635,0.6330107,0.7727851},
{-0.3096219,0.6311191,0.7620674},
{-0.3001243,0.6293495,0.7517537},
{-0.2906323,0.6284991,0.7408677},
{-0.2808157,0.6282010,0.7301395},
{-0.2728252,0.6283634,0.7187174},
{-0.2651013,0.6287555,0.7070584},
{-0.2588489,0.6290219,0.6951698},
{-0.2530041,0.6303400,0.6826884},
{-0.2479263,0.6317382,0.6701727},
{-0.2397294,0.6337399,0.6586914},
{-0.2362781,0.6341912,0.6476765},
{-0.2310992,0.6349636,0.6375253},
{-0.2236420,0.6369359,0.6278846},
{-0.2194832,0.6396419,0.6170911},
{-0.2131990,0.6429255,0.6067306},
{-0.2026417,0.6464002,0.5977026},
{-0.1982702,0.6478941,0.5888548},
{-0.1908363,0.6528817,0.5778744},
{-0.1832023,0.6564156,0.5688809},
{-0.2287204,0.6284631,0.5781855},
{-0.2625688,0.6039668,0.5838426},
{-0.2931452,0.5799778,0.5883107},
{-0.3192836,0.5555574,0.5928221},
{-0.3417664,0.5306757,0.5978516},
{-0.3673038,0.5018317,0.6015003},
{-0.4075976,0.4704307,0.5952860},
{-0.4424831,0.4376411,0.5906545},
{-0.4729910,0.4059434,0.5859468},
{-0.5000684,0.3738408,0.5815449}
};
outPElWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.3666943,0.6750517,0.8354031},
{-0.3647304,0.6640143,0.8303383},
{-0.3677183,0.6501459,0.8247256},
{-0.3529874,0.6456328,0.8190544},
{-0.3504545,0.6350452,0.8125514},
{-0.3440096,0.6270851,0.8055873},
{-0.3383872,0.6202066,0.7975323},
{-0.3310468,0.6137714,0.7896516},
{-0.3258483,0.6083519,0.7803474},
{-0.3172999,0.6038011,0.7717832},
{-0.3087119,0.5995379,0.7632300},
{-0.2986100,0.5975103,0.7535351},
{-0.2891571,0.5957079,0.7432993},
{-0.2791298,0.5940013,0.7334579},
{-0.2690766,0.5932017,0.7231350},
{-0.2588590,0.5929107,0.7128915},
{-0.2503842,0.5930874,0.7020741},
{-0.2422034,0.5934691,0.6910722},
{-0.2354381,0.5937753,0.6798526},
{-0.2291206,0.5951035,0.6680950},
{-0.2236019,0.5965123,0.6562996},
{-0.2151338,0.5984475,0.6454815},
{-0.2112706,0.5989735,0.6350536},
{-0.2057936,0.5997839,0.6254006},
{-0.1982432,0.6016439,0.6162926},
{-0.1939152,0.6042823,0.6060920},
{-0.1876300,0.6073947,0.5963004},
{-0.1773044,0.6105627,0.5877682},
{-0.1728437,0.6119830,0.5794269},
{-0.1656202,0.6166669,0.5690631},
{-0.1581555,0.6199453,0.5606603},
{-0.2010441,0.5940573,0.5695102},
{-0.2328787,0.5713454,0.5749351},
{-0.2616924,0.5490925,0.5792650},
{-0.2862611,0.5264054,0.5836201},
{-0.3074181,0.5031897,0.5883799},
{-0.3313922,0.4764908,0.5918466},
{-0.3695530,0.4482514,0.5860292},
{-0.4027210,0.4185492,0.5817394},
{-0.4318794,0.3897404,0.5774439},
{-0.4578705,0.3604822,0.5734279}
};
outPLaWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.4037794,0.6506188,0.8426640},
{-0.4014288,0.6392222,0.8383122},
{-0.4038472,0.6247742,0.8334423},
{-0.3891918,0.6206540,0.8285571},
{-0.3863070,0.6098733,0.8228458},
{-0.3796373,0.6019593,0.8167391},
{-0.3738115,0.5951879,0.8095399},
{-0.3663512,0.5890134,0.8025219},
{-0.3610345,0.5838707,0.7940444},
{-0.3524577,0.5797844,0.7863478},
{-0.3439050,0.5760744,0.7785892},
{-0.3339181,0.5747991,0.7697381},
{-0.3245997,0.5738007,0.7602963},
{-0.3147531,0.5729898,0.7511920},
{-0.3048825,0.5731437,0.7415908},
{-0.2948816,0.5738900,0.7320118},
{-0.2866256,0.5751238,0.7217937},
{-0.2786864,0.5765485,0.7112633},
{-0.2721185,0.5778364,0.7004802},
{-0.2659961,0.5801462,0.6891063},
{-0.2606696,0.5824970,0.6776200},
{-0.2524171,0.5855369,0.6671212},
{-0.2486395,0.5868473,0.6569972},
{-0.2432434,0.5885361,0.6476717},
{-0.2358312,0.5914097,0.6388183},
{-0.2316009,0.5949425,0.6288418},
{-0.2254486,0.5991159,0.6192398},
{-0.2152624,0.6035333,0.6108935},
{-0.2108783,0.6058746,0.6026875},
{-0.2037558,0.6117276,0.5924357},
{-0.1963669,0.6160975,0.5841142},
{-0.2388738,0.5874721,0.5929741},
{-0.2703084,0.5627278,0.5983818},
{-0.2986889,0.5386230,0.6026455},
{-0.3227560,0.5142152,0.6069552},
{-0.3433644,0.4894102,0.6116820},
{-0.3666144,0.4608461,0.6150768},
{-0.4035563,0.4301549,0.6092950},
{-0.4354272,0.3982466,0.6050441},
{-0.4632949,0.3674868,0.6007429},
{-0.4879126,0.3364327,0.5967538}
};
outPWrWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.2894571,0.4279505,0.6772879},
{-0.2856334,0.4154442,0.6754785},
{-0.2850926,0.4006367,0.6732556},
{-0.2733791,0.3929552,0.6712655},
{-0.2694539,0.3804600,0.6688495},
{-0.2631016,0.3699821,0.6663862},
{-0.2574702,0.3603704,0.6635076},
{-0.2508624,0.3508876,0.6612478},
{-0.2458467,0.3423859,0.6583357},
{-0.2388174,0.3345189,0.6562297},
{-0.2321523,0.3270128,0.6541719},
{-0.2250130,0.3213566,0.6518120},
{-0.2185684,0.3160799,0.6492226},
{-0.2120793,0.3110393,0.6470767},
{-0.2054075,0.3069910,0.6453232},
{-0.1994276,0.3037357,0.6431006},
{-0.1946691,0.3011644,0.6412316},
{-0.1899522,0.2991899,0.6391632},
{-0.1860193,0.2975537,0.6370094},
{-0.1823629,0.2972602,0.6345078},
{-0.1793151,0.2974190,0.6316636},
{-0.1746760,0.2982187,0.6296431},
{-0.1724822,0.2982102,0.6271866},
{-0.1695423,0.2986015,0.6251742},
{-0.1657117,0.3001227,0.6234835},
{-0.1639899,0.3027687,0.6208909},
{-0.1617188,0.3059641,0.6185086},
{-0.1571232,0.3092817,0.6168796},
{-0.1557661,0.3112560,0.6154356},
{-0.1533640,0.3166579,0.6122993},
{-0.1502478,0.3208687,0.6108168},
{-0.1728268,0.2958725,0.6176209},
{-0.1888720,0.2750132,0.6226386},
{-0.2032222,0.2552470,0.6268154},
{-0.2143115,0.2355346,0.6309745},
{-0.2234332,0.2153864,0.6346486},
{-0.2327484,0.1933402,0.6378917},
{-0.2487014,0.1747009,0.6369218},
{-0.2620393,0.1555101,0.6369123},
{-0.2738044,0.1377166,0.6367843},
{-0.2837978,0.1202429,0.6367430}
};
outPEeWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.2665926,0.3834169,0.6442127},
{-0.2624743,0.3706886,0.6429117},
{-0.2613417,0.3558092,0.6412183},
{-0.2502165,0.3474154,0.6398071},
{-0.2460833,0.3345773,0.6380502},
{-0.2397944,0.3235866,0.6363156},
{-0.2342020,0.3134069,0.6343011},
{-0.2277646,0.3032624,0.6329929},
{-0.2228092,0.2940889,0.6311940},
{-0.2160894,0.2854658,0.6302061},
{-0.2098017,0.2772005,0.6292885},
{-0.2032319,0.2706681,0.6282268},
{-0.1973621,0.2645358,0.6270078},
{-0.1915445,0.2586491,0.6262537},
{-0.1855125,0.2537605,0.6260697},
{-0.1803368,0.2497049,0.6253184},
{-0.1762778,0.2463725,0.6251192},
{-0.1722053,0.2437182,0.6247432},
{-0.1687994,0.2414972,0.6243153},
{-0.1656362,0.2406830,0.6235880},
{-0.1630442,0.2404034,0.6224723},
{-0.1591278,0.2407551,0.6221475},
{-0.1572507,0.2404827,0.6212244},
{-0.1548021,0.2406146,0.6206747},
{-0.1516878,0.2418654,0.6204165},
{-0.1504677,0.2443339,0.6193007},
{-0.1489728,0.2473337,0.6183624},
{-0.1454953,0.2504314,0.6180768},
{-0.1447437,0.2523323,0.6179852},
{-0.1432856,0.2576440,0.6162720},
{-0.1410240,0.2618230,0.6161573},
{-0.1596174,0.2375526,0.6225502},
{-0.1725847,0.2174703,0.6274899},
{-0.1841289,0.1985718,0.6316494},
{-0.1926226,0.1797985,0.6357784},
{-0.1994470,0.1605816,0.6392419},
{-0.2059753,0.1398390,0.6424547},
{-0.2177304,0.1236101,0.6424471},
{-0.2273617,0.1069628,0.6432859},
{-0.2359063,0.0917625,0.6439926},
{-0.2429749,0.0770050,0.6447408}
};
outThetasWam = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{-0.3348268,-0.3715755,-0.3156549,1.7451337,0.0000000,0.0000000,0.0000000},
{-0.3501668,-0.3243956,-0.5184981,1.7265509,0.0000000,0.0000000,0.0000000},
{-0.3496554,-0.3115699,-0.4852738,1.7057470,0.0000000,0.0000000,0.0000000},
{-0.3306798,-0.3019148,-0.4827579,1.6838717,0.0000000,0.0000000,0.0000000},
{-0.3027687,-0.2922040,-0.4716902,1.6600020,0.0000000,0.0000000,0.0000000},
{-0.2618298,-0.2854136,-0.4619744,1.6354656,0.0000000,0.0000000,0.0000000},
{-0.2021563,-0.2813875,-0.4536989,1.6100159,0.0000000,0.0000000,0.0000000},
{-0.1721698,-0.2769778,-0.4294667,1.5826973,0.0000000,0.0000000,0.0000000},
{-0.1613423,-0.2711663,-0.4019803,1.5555705,0.0000000,0.0000000,0.0000000},
{-0.1546674,-0.2669191,-0.3701867,1.5272366,0.0000000,0.0000000,0.0000000},
{-0.1524126,-0.2629382,-0.3385481,1.4986676,0.0000000,0.0000000,0.0000000},
{-0.1518755,-0.2598788,-0.3071996,1.4685742,0.0000000,0.0000000,0.0000000},
{-0.1520975,-0.2558749,-0.2801080,1.4377811,0.0000000,0.0000000,0.0000000},
{-0.1517417,-0.2517768,-0.2571521,1.4072854,0.0000000,0.0000000,0.0000000},
{-0.1501624,-0.2463173,-0.2377727,1.3764403,0.0000000,0.0000000,0.0000000},
{-0.1473774,-0.2396577,-0.2209795,1.3469660,0.0000000,0.0000000,0.0000000},
{-0.1427481,-0.2291794,-0.2052075,1.3173198,0.0000000,0.0000000,0.0000000},
{-0.1361668,-0.2136944,-0.1895165,1.2900369,0.0000000,0.0000000,0.0000000},
{-0.1293069,-0.1923556,-0.1756365,1.2633174,0.0000000,0.0000000,0.0000000},
{-0.1691841,-0.4514636,-0.2081354,1.2386496,0.0000000,0.0000000,0.0000000},
{-0.1683740,-0.4350982,-0.2020492,1.2158715,0.0000000,0.0000000,0.0000000},
{-0.1677050,-0.4174004,-0.1972756,1.1928700,0.0000000,0.0000000,0.0000000},
{-0.1673117,-0.4100969,-0.1943821,1.1730137,0.0000000,0.0000000,0.0000000},
{-0.1678693,-0.4099381,-0.1944415,1.1527912,0.0000000,0.0000000,0.0000000},
{-0.1701992,-0.4263948,-0.1998090,1.1351065,0.0000000,0.0000000,0.0000000},
{-0.1744409,-0.4631911,-0.2098403,1.1193056,0.0000000,0.0000000,0.0000000},
{-0.1794917,-0.5028800,-0.2214690,1.1035641,0.0000000,0.0000000,0.0000000},
{-0.1839404,-0.5298539,-0.2314349,1.0883052,0.0000000,0.0000000,0.0000000},
{-0.1040770,-0.2116150,-0.1477799,1.0729376,0.0000000,0.0000000,0.0000000},
{-0.1060480,-0.2213455,-0.1533002,1.0607175,0.0000000,0.0000000,0.0000000},
{-0.1125307,-0.2432755,-0.1668377,1.0488808,0.0000000,0.0000000,0.0000000},
{-0.1049124,-0.1987779,-0.1424842,1.0406436,0.0000000,0.0000000,0.0000000},
{-0.1049287,-0.1702114,-0.1363705,1.0320025,0.0000000,0.0000000,0.0000000},
{-0.1035341,-0.1356150,-0.1291771,1.0246506,0.0000000,0.0000000,0.0000000},
{-0.1051923,-0.1184967,-0.1269492,1.0172772,0.0000000,0.0000000,0.0000000},
{-0.1063176,-0.1082079,-0.1251675,1.0102086,0.0000000,0.0000000,0.0000000},
{-0.1044445,-0.0839246,-0.1095725,1.0008341,0.0000000,0.0000000,0.0000000},
{-0.0957350,-0.0777605,-0.1021778,0.9920410,0.0000000,0.0000000,0.0000000},
{-0.1379966,-0.1702372,-0.1575208,0.9843669,0.0000000,0.0000000,0.0000000},
{-0.1279953,-0.1496692,-0.1408481,0.9793428,0.0000000,0.0000000,0.0000000},
{-0.1161138,-0.1291518,-0.1215115,0.9753488,0.0000000,0.0000000,0.0000000}
};
(* 
W1215 11:19:57.205178  8226 residual_block.cc:131] 

Error in evaluating the ResidualBlock.

There are two possible reasons. Either the CostFunction did not evaluate and fill all    
residual and jacobians that were requested or there was a non-finite value (nan/infinite)
generated during the or jacobian computation. 

Residual Block size: 2 parameter blocks x 12 residuals

For each parameter block, the value of the parameters are printed in the first column   
and the value of the jacobian under the corresponding residual. If a ParameterBlock was 
held constant then the corresponding jacobian is printed as 'Not Computed'. If an entry 
of the Jacobian/residual array was requested but was not written to by user code, it is 
indicated by 'Uninitialized'. This is an error. Residuals or Jacobian values evaluating 
to Inf or NaN is also an error.  

Residuals:             -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 0, size: 4

8.07923e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
8.07833e-317 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
1.81816e-321 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
2.83001e-320 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 

Parameter Block 1, size: 7

           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           1 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 
           0 |         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan         -nan 


E1215 11:19:57.205226  8226 trust_region_minimizer.cc:72] Terminating: Residual and Jacobian evaluation failed.

Solver Summary (v 1.12.0-eigen-(3.2.92)-lapack-suitesparse-(4.4.6)-cxsparse-(3.1.4)-openmp)

                                     Original                  Reduced
Parameter blocks                          130                      130
Parameters                                715                      715
Effective parameters                      650                      650
Residual blocks                            65                       65
Residual                                  780                      780

Minimizer                        TRUST_REGION

Sparse linear algebra library    SUITE_SPARSE
Trust region strategy     LEVENBERG_MARQUARDT

                                        Given                     Used
Linear solver                    SPARSE_SCHUR             SPARSE_SCHUR
Threads                                     1                        1
Linear solver threads                       1                        1
Linear solver ordering              AUTOMATIC                   65, 65

Cost:
Initial                         -1.000000e+00

Minimizer iterations                        0
Successful steps                            0
Unsuccessful steps                          0
Line search steps                           0

Time (in seconds):
Preprocessor                           0.0003

  Residual evaluation                  0.0000
    Line search cost evaluation        0.0000
  Jacobian evaluation                  0.1304
    Line search gradient evaluation    0.0000
  Linear solver                        0.0000
  Line search polynomial minimization  0.0000
Minimizer                              0.1304

Postprocessor                          0.0000
Total                                  0.1307

Termination:                          FAILURE (Residual and Jacobian evaluation failed.)

*) 
fitErrUA Mean = -nan
fitErrEl Mean = -nan
fitErrLa Mean = -nan
fitErrWr Mean = -nan
fitErrEe Mean = -nan
fitErrUA = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{0.0000000,0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000}
};
fitErrEl = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000}
};
fitErrLa = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000}
};
fitErrWr = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000},
{-0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{0.0000000,-0.0000000,-0.0000000},
{-0.0000000,0.0000000,-0.0000000},
{0.0000000,-0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{0.0000000,0.0000000,0.0000000},
{-0.0000000,0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000},
{0.0000000,0.0000000,0.0000000},
{-0.0000000,-0.0000000,-0.0000000}
};
fitErrEe = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{0.0198192,0.0468916,-0.0090264},
{0.0194719,0.0472565,-0.0095800},
{0.0188054,0.0477058,-0.0101607},
{0.0194095,0.0474794,-0.0107775},
{0.0191986,0.0476486,-0.0114469},
{0.0194213,0.0475791,-0.0120350},
{0.0196124,0.0474678,-0.0127577},
{0.0200615,0.0473754,-0.0134251},
{0.0205930,0.0472295,-0.0140315},
{0.0211027,0.0470038,-0.0148991},
{0.0220880,0.0466121,-0.0153033},
{0.0230452,0.0462687,-0.0160516},
{0.0239676,0.0458456,-0.0168601},
{0.0252738,0.0452115,-0.0172564},
{0.0263273,0.0446544,-0.0180285},
{0.0277295,0.0438309,-0.0183262},
{0.0289813,0.0434002,-0.0189028},
{0.0302259,0.0424679,-0.0191882},
{0.0311686,0.0419506,-0.0198571},
{0.0315830,0.0410842,-0.0211138},
{0.0324472,0.0402509,-0.0215575},
{0.0333356,0.0394796,-0.0222861},
{0.0336344,0.0386279,-0.0231469},
{0.0341273,0.0378231,-0.0238799},
{0.0346713,0.0368716,-0.0247075},
{0.0351012,0.0359524,-0.0254341},
{0.0357948,0.0349720,-0.0260086},
{0.0365365,0.0337998,-0.0267446},
{0.0371893,0.0332512,-0.0273800},
{0.0379040,0.0320082,-0.0278136},
{0.0386182,0.0311305,-0.0284030},
{0.0365582,0.0339315,-0.0279160},
{0.0348603,0.0360363,-0.0276854},
{0.0331712,0.0378544,-0.0275098},
{0.0313452,0.0393230,-0.0275635},
{0.0296552,0.0406344,-0.0274363},
{0.0275075,0.0421572,-0.0274741},
{0.0240702,0.0437255,-0.0282459},
{0.0208691,0.0452366,-0.0288147},
{0.0179131,0.0464069,-0.0292288},
{0.0149827,0.0471677,-0.0296839}
};
outShoToUaVsWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.4827470,-0.2232897,0.1399895},
{-0.4760378,-0.2357044,0.1425884},
{-0.4668517,-0.2519944,0.1450802},
{-0.4636300,-0.2562436,0.1479406},
{-0.4555401,-0.2689639,0.1504715},
{-0.4483462,-0.2789667,0.1538285},
{-0.4409941,-0.2886688,0.1571450},
{-0.4339875,-0.2973800,0.1603744},
{-0.4267885,-0.3059193,0.1636000},
{-0.4202267,-0.3128391,0.1674550},
{-0.4142546,-0.3189378,0.1707975},
{-0.4089167,-0.3235470,0.1749412},
{-0.4035799,-0.3280525,0.1788990},
{-0.3989475,-0.3315571,0.1827863},
{-0.3941655,-0.3347769,0.1872379},
{-0.3904497,-0.3366114,0.1916816},
{-0.3865210,-0.3384914,0.1962781},
{-0.3833682,-0.3396053,0.2004920},
{-0.3795156,-0.3411932,0.2050734},
{-0.3760717,-0.3419291,0.2101298},
{-0.3729798,-0.3422495,0.2150613},
{-0.3709364,-0.3410285,0.2204672},
{-0.3669841,-0.3416236,0.2260885},
{-0.3634600,-0.3414120,0.2320230},
{-0.3622364,-0.3387768,0.2377289},
{-0.3603682,-0.3364240,0.2438312},
{-0.3600591,-0.3324143,0.2497162},
{-0.3615138,-0.3264104,0.2554683},
{-0.3601852,-0.3235336,0.2609457},
{-0.3616631,-0.3168073,0.2670822},
{-0.3626981,-0.3106050,0.2729004},
{-0.3376648,-0.3397651,0.2702631},
{-0.3160576,-0.3610532,0.2687903},
{-0.2954960,-0.3791861,0.2672077},
{-0.2749304,-0.3953236,0.2657678},
{-0.2551956,-0.4097448,0.2635989},
{-0.2300126,-0.4256214,0.2616115},
{-0.1926248,-0.4413283,0.2657537},
{-0.1570436,-0.4529518,0.2695774},
{-0.1250443,-0.4606590,0.2732348},
{-0.0941014,-0.4656538,0.2771488}
};
outShoToElVsWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.4722912,-0.2604217,0.1168186},
{-0.4645716,-0.2727107,0.1196960},
{-0.4540613,-0.2887229,0.1224435},
{-0.4504542,-0.2929988,0.1255697},
{-0.4412758,-0.3054816,0.1283810},
{-0.4332048,-0.3153143,0.1320434},
{-0.4249453,-0.3248453,0.1357278},
{-0.4170856,-0.3333910,0.1393380},
{-0.4089766,-0.3417652,0.1430375},
{-0.4016659,-0.3485482,0.1473216},
{-0.3949991,-0.3545090,0.1510765},
{-0.3890632,-0.3590474,0.1556912},
{-0.3831151,-0.3634637,0.1601309},
{-0.3779529,-0.3669053,0.1644905},
{-0.3726098,-0.3700742,0.1695051},
{-0.3684929,-0.3719017,0.1744335},
{-0.3640799,-0.3737675,0.1796348},
{-0.3604703,-0.3748917,0.1845057},
{-0.3561049,-0.3764398,0.1897562},
{-0.3521883,-0.3771657,0.1955364},
{-0.3486554,-0.3774754,0.2011882},
{-0.3463408,-0.3763209,0.2072573},
{-0.3419766,-0.3768413,0.2134657},
{-0.3381544,-0.3765918,0.2198982},
{-0.3368376,-0.3740689,0.2261369},
{-0.3348002,-0.3717835,0.2328322},
{-0.3344901,-0.3679451,0.2392860},
{-0.3361764,-0.3622479,0.2455338},
{-0.3347587,-0.3594447,0.2515177},
{-0.3364470,-0.3530220,0.2582709},
{-0.3376513,-0.3470752,0.2646798},
{-0.3099886,-0.3741710,0.2615877},
{-0.2863674,-0.3936745,0.2598828},
{-0.2640432,-0.4100713,0.2581621},
{-0.2419079,-0.4244756,0.2565659},
{-0.2208473,-0.4372308,0.2541272},
{-0.1941010,-0.4509624,0.2519578},
{-0.1545803,-0.4635076,0.2564969},
{-0.1172815,-0.4720436,0.2606623},
{-0.0839327,-0.4768620,0.2647318},
{-0.0519035,-0.4790124,0.2690318}
};
outShoToLaVsWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.5093764,-0.2848546,0.1240795},
{-0.5012699,-0.2975028,0.1276699},
{-0.4901902,-0.3140946,0.1311601},
{-0.4866586,-0.3179775,0.1350725},
{-0.4771283,-0.3306535,0.1386753},
{-0.4688325,-0.3404401,0.1431952},
{-0.4603696,-0.3498640,0.1477355},
{-0.4523900,-0.3581489,0.1522082},
{-0.4441628,-0.3662463,0.1567345},
{-0.4368237,-0.3725649,0.1618862},
{-0.4301922,-0.3779726,0.1664358},
{-0.4243713,-0.3817586,0.1718942},
{-0.4185577,-0.3853709,0.1771279},
{-0.4135763,-0.3879167,0.1822245},
{-0.4084157,-0.3901322,0.1879610},
{-0.4045156,-0.3909224,0.1935538},
{-0.4003214,-0.3917311,0.1993545},
{-0.3969533,-0.3918123,0.2046969},
{-0.3927853,-0.3923787,0.2103839},
{-0.3890638,-0.3921230,0.2165477},
{-0.3857232,-0.3914906,0.2225086},
{-0.3836241,-0.3892315,0.2288970},
{-0.3793455,-0.3889675,0.2354093},
{-0.3756041,-0.3878396,0.2421694},
{-0.3744256,-0.3843030,0.2486626},
{-0.3724860,-0.3811234,0.2555819},
{-0.3723087,-0.3762239,0.2622254},
{-0.3741344,-0.3692773,0.2686591},
{-0.3727933,-0.3655530,0.2747783},
{-0.3745826,-0.3579614,0.2816435},
{-0.3758627,-0.3509230,0.2881337},
{-0.3478182,-0.3807562,0.2850516},
{-0.3237972,-0.4022921,0.2833296},
{-0.3010397,-0.4205409,0.2815425},
{-0.2784028,-0.4366658,0.2799009},
{-0.2567936,-0.4510104,0.2774293},
{-0.2293232,-0.4666071,0.2751879},
{-0.1885836,-0.4816041,0.2797626},
{-0.1499877,-0.4923462,0.2839670},
{-0.1153482,-0.4991156,0.2880308},
{-0.0819455,-0.5030619,0.2923577}
};
outShoToWrVsWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.3950540,-0.5075229,-0.0412966},
{-0.3854745,-0.5212808,-0.0351638},
{-0.3714356,-0.5382321,-0.0290265},
{-0.3708459,-0.5456763,-0.0222192},
{-0.3602752,-0.5600668,-0.0153210},
{-0.3522968,-0.5724173,-0.0071577},
{-0.3440283,-0.5846815,0.0017031},
{-0.3369011,-0.5962748,0.0109341},
{-0.3289750,-0.6077311,0.0210258},
{-0.3231834,-0.6178305,0.0317681},
{-0.3184394,-0.6270342,0.0420185},
{-0.3154662,-0.6352011,0.0539682},
{-0.3125264,-0.6430917,0.0660542},
{-0.3109024,-0.6498673,0.0781093},
{-0.3089407,-0.6562850,0.0916933},
{-0.3090616,-0.6610767,0.1046427},
{-0.3083649,-0.6656905,0.1187924},
{-0.3082191,-0.6691709,0.1325967},
{-0.3066860,-0.6726614,0.1469130},
{-0.3054306,-0.6750089,0.1619491},
{-0.3043687,-0.6765686,0.1765522},
{-0.3058830,-0.6765497,0.1914189},
{-0.3031882,-0.6776046,0.2055986},
{-0.3019031,-0.6777741,0.2196719},
{-0.3043061,-0.6755900,0.2333278},
{-0.3048749,-0.6732972,0.2476310},
{-0.3085789,-0.6693757,0.2614942},
{-0.3159952,-0.6635289,0.2746452},
{-0.3176811,-0.6601717,0.2875264},
{-0.3241908,-0.6530310,0.3015072},
{-0.3297436,-0.6461518,0.3148363},
{-0.2817712,-0.6723558,0.3096984},
{-0.2423608,-0.6900067,0.3075863},
{-0.2055731,-0.7039169,0.3057125},
{-0.1699583,-0.7153464,0.3039202},
{-0.1368624,-0.7250342,0.3003959},
{-0.0954572,-0.7341130,0.2980029},
{-0.0337287,-0.7370580,0.3073894},
{0.0234002,-0.7350828,0.3158352},
{0.0741423,-0.7288858,0.3240722},
{0.1221692,-0.7192517,0.3323469}
};
outShoToEeVsWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.3721895,-0.5520565,-0.0743719},
{-0.3623154,-0.5660364,-0.0677306},
{-0.3476847,-0.5830596,-0.0610638},
{-0.3476833,-0.5912161,-0.0536775},
{-0.3369046,-0.6059495,-0.0461203},
{-0.3289896,-0.6188128,-0.0372282},
{-0.3207601,-0.6316450,-0.0275033},
{-0.3138034,-0.6439000,-0.0173207},
{-0.3059375,-0.6560281,-0.0061159},
{-0.3004554,-0.6668836,0.0057445},
{-0.2960889,-0.6768465,0.0171350},
{-0.2936851,-0.6858896,0.0303829},
{-0.2913201,-0.6946358,0.0438394},
{-0.2903676,-0.7022574,0.0572863},
{-0.2890457,-0.7095155,0.0724398},
{-0.2899708,-0.7151075,0.0868605},
{-0.2899736,-0.7204823,0.1026799},
{-0.2904723,-0.7246427,0.1181767},
{-0.2894662,-0.7287179,0.1342189},
{-0.2887039,-0.7315861,0.1510294},
{-0.2880978,-0.7335842,0.1673609},
{-0.2903348,-0.7340133,0.1839233},
{-0.2879568,-0.7353321,0.1996365},
{-0.2871629,-0.7357610,0.2151724},
{-0.2902822,-0.7338474,0.2302609},
{-0.2913527,-0.7317319,0.2460409},
{-0.2958329,-0.7280061,0.2613480},
{-0.3043673,-0.7223792,0.2758424},
{-0.3066586,-0.7190954,0.2900760},
{-0.3141125,-0.7120450,0.3054799},
{-0.3205198,-0.7051975,0.3201768},
{-0.2685618,-0.7306757,0.3146278},
{-0.2260735,-0.7475497,0.3124377},
{-0.1864797,-0.7605921,0.3105464},
{-0.1482694,-0.7710825,0.3087241},
{-0.1128762,-0.7798389,0.3049892},
{-0.0686841,-0.7876142,0.3025659},
{-0.0027577,-0.7881488,0.3129148},
{0.0580778,-0.7836301,0.3222089},
{0.1120405,-0.7748398,0.3312805},
{0.1629922,-0.7624897,0.3403447}
};
outPUaWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.3771501,0.7121837,0.8585740},
{-0.3761966,0.7010206,0.8532307},
{-0.3805087,0.6868744,0.8473624},
{-0.3661632,0.6823880,0.8414252},
{-0.3647188,0.6715629,0.8346420},
{-0.3591510,0.6634326,0.8273724},
{-0.3544360,0.6563831,0.8189494},
{-0.3479488,0.6497823,0.8106881},
{-0.3436602,0.6441977,0.8009099},
{-0.3358607,0.6395102,0.7919166},
{-0.3279675,0.6351091,0.7829509},
{-0.3184635,0.6330107,0.7727851},
{-0.3096219,0.6311191,0.7620674},
{-0.3001243,0.6293495,0.7517537},
{-0.2906323,0.6284991,0.7408677},
{-0.2808157,0.6282010,0.7301395},
{-0.2728252,0.6283634,0.7187174},
{-0.2651013,0.6287555,0.7070584},
{-0.2588489,0.6290219,0.6951698},
{-0.2530041,0.6303400,0.6826884},
{-0.2479263,0.6317382,0.6701727},
{-0.2397294,0.6337399,0.6586914},
{-0.2362781,0.6341912,0.6476765},
{-0.2310992,0.6349636,0.6375253},
{-0.2236420,0.6369359,0.6278846},
{-0.2194832,0.6396419,0.6170911},
{-0.2131990,0.6429255,0.6067306},
{-0.2026417,0.6464002,0.5977026},
{-0.1982702,0.6478941,0.5888548},
{-0.1908363,0.6528817,0.5778744},
{-0.1832023,0.6564156,0.5688809},
{-0.2287204,0.6284631,0.5781855},
{-0.2625688,0.6039668,0.5838426},
{-0.2931452,0.5799778,0.5883107},
{-0.3192836,0.5555574,0.5928221},
{-0.3417664,0.5306757,0.5978516},
{-0.3673038,0.5018317,0.6015003},
{-0.4075976,0.4704307,0.5952860},
{-0.4424831,0.4376411,0.5906545},
{-0.4729910,0.4059434,0.5859468},
{-0.5000684,0.3738408,0.5815449}
};
outPElWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.3666943,0.6750517,0.8354031},
{-0.3647304,0.6640143,0.8303383},
{-0.3677183,0.6501459,0.8247256},
{-0.3529874,0.6456328,0.8190544},
{-0.3504545,0.6350452,0.8125514},
{-0.3440096,0.6270851,0.8055873},
{-0.3383872,0.6202066,0.7975323},
{-0.3310468,0.6137714,0.7896516},
{-0.3258483,0.6083519,0.7803474},
{-0.3172999,0.6038011,0.7717832},
{-0.3087119,0.5995379,0.7632300},
{-0.2986100,0.5975103,0.7535351},
{-0.2891571,0.5957079,0.7432993},
{-0.2791298,0.5940013,0.7334579},
{-0.2690766,0.5932017,0.7231350},
{-0.2588590,0.5929107,0.7128915},
{-0.2503842,0.5930874,0.7020741},
{-0.2422034,0.5934691,0.6910722},
{-0.2354381,0.5937753,0.6798526},
{-0.2291206,0.5951035,0.6680950},
{-0.2236019,0.5965123,0.6562996},
{-0.2151338,0.5984475,0.6454815},
{-0.2112706,0.5989735,0.6350536},
{-0.2057936,0.5997839,0.6254006},
{-0.1982432,0.6016439,0.6162926},
{-0.1939152,0.6042823,0.6060920},
{-0.1876300,0.6073947,0.5963004},
{-0.1773044,0.6105627,0.5877682},
{-0.1728437,0.6119830,0.5794269},
{-0.1656202,0.6166669,0.5690631},
{-0.1581555,0.6199453,0.5606603},
{-0.2010441,0.5940573,0.5695102},
{-0.2328787,0.5713454,0.5749351},
{-0.2616924,0.5490925,0.5792650},
{-0.2862611,0.5264054,0.5836201},
{-0.3074181,0.5031897,0.5883799},
{-0.3313922,0.4764908,0.5918466},
{-0.3695530,0.4482514,0.5860292},
{-0.4027210,0.4185492,0.5817394},
{-0.4318794,0.3897404,0.5774439},
{-0.4578705,0.3604822,0.5734279}
};
outPLaWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.4037794,0.6506188,0.8426640},
{-0.4014288,0.6392222,0.8383122},
{-0.4038472,0.6247742,0.8334423},
{-0.3891918,0.6206540,0.8285571},
{-0.3863070,0.6098733,0.8228458},
{-0.3796373,0.6019593,0.8167391},
{-0.3738115,0.5951879,0.8095399},
{-0.3663512,0.5890134,0.8025219},
{-0.3610345,0.5838707,0.7940444},
{-0.3524577,0.5797844,0.7863478},
{-0.3439050,0.5760744,0.7785892},
{-0.3339181,0.5747991,0.7697381},
{-0.3245997,0.5738007,0.7602963},
{-0.3147531,0.5729898,0.7511920},
{-0.3048825,0.5731437,0.7415908},
{-0.2948816,0.5738900,0.7320118},
{-0.2866256,0.5751238,0.7217937},
{-0.2786864,0.5765485,0.7112633},
{-0.2721185,0.5778364,0.7004802},
{-0.2659961,0.5801462,0.6891063},
{-0.2606696,0.5824970,0.6776200},
{-0.2524171,0.5855369,0.6671212},
{-0.2486395,0.5868473,0.6569972},
{-0.2432434,0.5885361,0.6476717},
{-0.2358312,0.5914097,0.6388183},
{-0.2316009,0.5949425,0.6288418},
{-0.2254486,0.5991159,0.6192398},
{-0.2152624,0.6035333,0.6108935},
{-0.2108783,0.6058746,0.6026875},
{-0.2037558,0.6117276,0.5924357},
{-0.1963669,0.6160975,0.5841142},
{-0.2388738,0.5874721,0.5929741},
{-0.2703084,0.5627278,0.5983818},
{-0.2986889,0.5386230,0.6026455},
{-0.3227560,0.5142152,0.6069552},
{-0.3433644,0.4894102,0.6116820},
{-0.3666144,0.4608461,0.6150768},
{-0.4035563,0.4301549,0.6092950},
{-0.4354272,0.3982466,0.6050441},
{-0.4632949,0.3674868,0.6007429},
{-0.4879126,0.3364327,0.5967538}
};
outPWrWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.2894571,0.4279505,0.6772879},
{-0.2856334,0.4154442,0.6754785},
{-0.2850926,0.4006367,0.6732556},
{-0.2733791,0.3929552,0.6712655},
{-0.2694539,0.3804600,0.6688495},
{-0.2631016,0.3699821,0.6663862},
{-0.2574702,0.3603704,0.6635076},
{-0.2508624,0.3508876,0.6612478},
{-0.2458467,0.3423859,0.6583357},
{-0.2388174,0.3345189,0.6562297},
{-0.2321523,0.3270128,0.6541719},
{-0.2250130,0.3213566,0.6518120},
{-0.2185684,0.3160799,0.6492226},
{-0.2120793,0.3110393,0.6470767},
{-0.2054075,0.3069910,0.6453232},
{-0.1994276,0.3037357,0.6431006},
{-0.1946691,0.3011644,0.6412316},
{-0.1899522,0.2991899,0.6391632},
{-0.1860193,0.2975537,0.6370094},
{-0.1823629,0.2972602,0.6345078},
{-0.1793151,0.2974190,0.6316636},
{-0.1746760,0.2982187,0.6296431},
{-0.1724822,0.2982102,0.6271866},
{-0.1695423,0.2986015,0.6251742},
{-0.1657117,0.3001227,0.6234835},
{-0.1639899,0.3027687,0.6208909},
{-0.1617188,0.3059641,0.6185086},
{-0.1571232,0.3092817,0.6168796},
{-0.1557661,0.3112560,0.6154356},
{-0.1533640,0.3166579,0.6122993},
{-0.1502478,0.3208687,0.6108168},
{-0.1728268,0.2958725,0.6176209},
{-0.1888720,0.2750132,0.6226386},
{-0.2032222,0.2552470,0.6268154},
{-0.2143115,0.2355346,0.6309745},
{-0.2234332,0.2153864,0.6346486},
{-0.2327484,0.1933402,0.6378917},
{-0.2487014,0.1747009,0.6369218},
{-0.2620393,0.1555101,0.6369123},
{-0.2738044,0.1377166,0.6367843},
{-0.2837978,0.1202429,0.6367430}
};
outPEeWam = {
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-nan,-nan,-nan},
{-0.2665926,0.3834169,0.6442127},
{-0.2624743,0.3706886,0.6429117},
{-0.2613417,0.3558092,0.6412183},
{-0.2502165,0.3474154,0.6398071},
{-0.2460833,0.3345773,0.6380502},
{-0.2397944,0.3235866,0.6363156},
{-0.2342020,0.3134069,0.6343011},
{-0.2277646,0.3032624,0.6329929},
{-0.2228092,0.2940889,0.6311940},
{-0.2160894,0.2854658,0.6302061},
{-0.2098017,0.2772005,0.6292885},
{-0.2032319,0.2706681,0.6282268},
{-0.1973621,0.2645358,0.6270078},
{-0.1915445,0.2586491,0.6262537},
{-0.1855125,0.2537605,0.6260697},
{-0.1803368,0.2497049,0.6253184},
{-0.1762778,0.2463725,0.6251192},
{-0.1722053,0.2437182,0.6247432},
{-0.1687994,0.2414972,0.6243153},
{-0.1656362,0.2406830,0.6235880},
{-0.1630442,0.2404034,0.6224723},
{-0.1591278,0.2407551,0.6221475},
{-0.1572507,0.2404827,0.6212244},
{-0.1548021,0.2406146,0.6206747},
{-0.1516878,0.2418654,0.6204165},
{-0.1504677,0.2443339,0.6193007},
{-0.1489728,0.2473337,0.6183624},
{-0.1454953,0.2504314,0.6180768},
{-0.1447437,0.2523323,0.6179852},
{-0.1432856,0.2576440,0.6162720},
{-0.1410240,0.2618230,0.6161573},
{-0.1596174,0.2375526,0.6225502},
{-0.1725847,0.2174703,0.6274899},
{-0.1841289,0.1985718,0.6316494},
{-0.1926226,0.1797985,0.6357784},
{-0.1994470,0.1605816,0.6392419},
{-0.2059753,0.1398390,0.6424547},
{-0.2177304,0.1236101,0.6424471},
{-0.2273617,0.1069628,0.6432859},
{-0.2359063,0.0917625,0.6439926},
{-0.2429749,0.0770050,0.6447408}
};
outThetasWam = {
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{0.0000000,0.0000000,0.0000000,1.0000000,0.0000000,0.0000000,0.0000000},
{-0.3348268,-0.3715755,-0.3156549,1.7451337,0.0000000,0.0000000,0.0000000},
{-0.3501668,-0.3243956,-0.5184981,1.7265509,0.0000000,0.0000000,0.0000000},
{-0.3496554,-0.3115699,-0.4852738,1.7057470,0.0000000,0.0000000,0.0000000},
{-0.3306798,-0.3019148,-0.4827579,1.6838717,0.0000000,0.0000000,0.0000000},
{-0.3027687,-0.2922040,-0.4716902,1.6600020,0.0000000,0.0000000,0.0000000},
{-0.2618298,-0.2854136,-0.4619744,1.6354656,0.0000000,0.0000000,0.0000000},
{-0.2021563,-0.2813875,-0.4536989,1.6100159,0.0000000,0.0000000,0.0000000},
{-0.1721698,-0.2769778,-0.4294667,1.5826973,0.0000000,0.0000000,0.0000000},
{-0.1613423,-0.2711663,-0.4019803,1.5555705,0.0000000,0.0000000,0.0000000},
{-0.1546674,-0.2669191,-0.3701867,1.5272366,0.0000000,0.0000000,0.0000000},
{-0.1524126,-0.2629382,-0.3385481,1.4986676,0.0000000,0.0000000,0.0000000},
{-0.1518755,-0.2598788,-0.3071996,1.4685742,0.0000000,0.0000000,0.0000000},
{-0.1520975,-0.2558749,-0.2801080,1.4377811,0.0000000,0.0000000,0.0000000},
{-0.1517417,-0.2517768,-0.2571521,1.4072854,0.0000000,0.0000000,0.0000000},
{-0.1501624,-0.2463173,-0.2377727,1.3764403,0.0000000,0.0000000,0.0000000},
{-0.1473774,-0.2396577,-0.2209795,1.3469660,0.0000000,0.0000000,0.0000000},
{-0.1427481,-0.2291794,-0.2052075,1.3173198,0.0000000,0.0000000,0.0000000},
{-0.1361668,-0.2136944,-0.1895165,1.2900369,0.0000000,0.0000000,0.0000000},
{-0.1293069,-0.1923556,-0.1756365,1.2633174,0.0000000,0.0000000,0.0000000},
{-0.1691841,-0.4514636,-0.2081354,1.2386496,0.0000000,0.0000000,0.0000000},
{-0.1683740,-0.4350982,-0.2020492,1.2158715,0.0000000,0.0000000,0.0000000},
{-0.1677050,-0.4174004,-0.1972756,1.1928700,0.0000000,0.0000000,0.0000000},
{-0.1673117,-0.4100969,-0.1943821,1.1730137,0.0000000,0.0000000,0.0000000},
{-0.1678693,-0.4099381,-0.1944415,1.1527912,0.0000000,0.0000000,0.0000000},
{-0.1701992,-0.4263948,-0.1998090,1.1351065,0.0000000,0.0000000,0.0000000},
{-0.1744409,-0.4631911,-0.2098403,1.1193056,0.0000000,0.0000000,0.0000000},
{-0.1794917,-0.5028800,-0.2214690,1.1035641,0.0000000,0.0000000,0.0000000},
{-0.1839404,-0.5298539,-0.2314349,1.0883052,0.0000000,0.0000000,0.0000000},
{-0.1040770,-0.2116150,-0.1477799,1.0729376,0.0000000,0.0000000,0.0000000},
{-0.1060480,-0.2213455,-0.1533002,1.0607175,0.0000000,0.0000000,0.0000000},
{-0.1125307,-0.2432755,-0.1668377,1.0488808,0.0000000,0.0000000,0.0000000},
{-0.1049124,-0.1987779,-0.1424842,1.0406436,0.0000000,0.0000000,0.0000000},
{-0.1049287,-0.1702114,-0.1363705,1.0320025,0.0000000,0.0000000,0.0000000},
{-0.1035341,-0.1356150,-0.1291771,1.0246506,0.0000000,0.0000000,0.0000000},
{-0.1051923,-0.1184967,-0.1269492,1.0172772,0.0000000,0.0000000,0.0000000},
{-0.1063176,-0.1082079,-0.1251675,1.0102086,0.0000000,0.0000000,0.0000000},
{-0.1044445,-0.0839246,-0.1095725,1.0008341,0.0000000,0.0000000,0.0000000},
{-0.0957350,-0.0777605,-0.1021778,0.9920410,0.0000000,0.0000000,0.0000000},
{-0.1379966,-0.1702372,-0.1575208,0.9843669,0.0000000,0.0000000,0.0000000},
{-0.1279953,-0.1496692,-0.1408481,0.9793428,0.0000000,0.0000000,0.0000000},
{-0.1161138,-0.1291518,-0.1215115,0.9753488,0.0000000,0.0000000,0.0000000}
};
xyzEulersBase = {
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.5707963,0.0000000,3.1415927},
{1.4377951,2.3795607,-1.3595267},
{1.5747519,2.3914728,-1.2444048},
{1.5614441,2.4112311,-1.2535778},
{1.5402572,2.4135297,-1.2438074},
{1.5131731,2.4322666,-1.2430201},
{1.4714216,2.4493998,-1.2395052},
{1.4142021,2.4691499,-1.2361660},
{1.3741917,2.4851971,-1.2373682},
{1.3521820,2.4998564,-1.2378672},
{1.3276935,2.5127239,-1.2383643},
{1.3075683,2.5237609,-1.2393679},
{1.2879427,2.5333747,-1.2376672},
{1.2727147,2.5424160,-1.2343571},
{1.2592391,2.5496026,-1.2294080},
{1.2478787,2.5563429,-1.2208283},
{1.2341269,2.5589997,-1.2106405},
{1.2207500,2.5592425,-1.1969687},
{1.2049216,2.5532099,-1.1802993},
{1.1887778,2.5441039,-1.1592163},
{1.3230634,2.7908905,-1.2642958},
{1.3223212,2.7844049,-1.2441219},
{1.3194515,2.7735251,-1.2222074},
{1.3201398,2.7772541,-1.2051860},
{1.3224672,2.7862572,-1.1902662},
{1.3316315,2.8052947,-1.1794649},
{1.3496748,2.8457532,-1.1735582},
{1.3671708,2.8851234,-1.1671597},
{1.3773531,2.9073417,-1.1564254},
{1.1747949,2.6094661,-1.0257377},
{1.1797792,2.6144518,-1.0097617},
{1.1998533,2.6322456,-0.9994368},
{1.2029672,2.6548466,-1.0129980},
{1.2252449,2.6810079,-1.0210893},
{1.2421635,2.6966557,-1.0241221},
{1.2675695,2.7263332,-1.0331557},
{1.2893828,2.7588903,-1.0452392},
{1.2997975,2.7880104,-1.0535142},
{1.3322827,2.8571307,-1.0559953},
{1.4770625,3.0175744,-1.0745554},
{1.4910434,3.0586206,-1.0670246},
{1.4992107,3.0965111,-1.0583218}
};
xyzEulersBaseInDeg = {
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{90.0000000,0.0000000,180.0000000},
{82.3795886,136.3387849,-77.8951422},
{90.2266370,137.0213006,-71.2991444},
{89.4641593,138.1533676,-71.8247167},
{88.2502355,138.2850642,-71.2649150},
{86.6984335,139.3586104,-71.2198051},
{84.3062489,140.3402709,-71.0184148},
{81.0278089,141.4718677,-70.8270955},
{78.7353821,142.3913037,-70.8959741},
{77.4743221,143.2312196,-70.9245646},
{76.0712323,143.9684735,-70.9530507},
{74.9181454,144.6008509,-71.0105527},
{73.7936805,145.1516786,-70.9131048},
{72.9211788,145.6697086,-70.7234533},
{72.1490844,146.0814698,-70.4398869},
{71.4981813,146.4676613,-69.9483089},
{70.7102613,146.6198821,-69.3645909},
{69.9438223,146.6337946,-68.5812527},
{69.0369217,146.2881518,-67.6261656},
{68.1119487,145.7664164,-66.4182022},
{75.8059464,159.9062442,-72.4388118},
{75.7634257,159.5346510,-71.2829338},
{75.5990012,158.9112842,-70.0273285},
{75.6384386,159.1249413,-69.0520688},
{75.7717874,159.6407761,-68.1972314},
{76.2968653,160.7315487,-67.5783628},
{77.3306681,163.0496457,-67.2399324},
{78.3331191,165.3053950,-66.8733243},
{78.9165219,166.5784093,-66.2582963},
{67.3107881,149.5113929,-58.7704393},
{67.5963684,149.7970518,-57.8550837},
{68.7465277,150.8165649,-57.2635101},
{68.9249431,152.1115058,-58.0405080},
{70.2013590,153.6104395,-58.5041068},
{71.1707251,154.5069930,-58.6778727},
{72.6263802,156.2073853,-59.1954635},
{73.8761902,158.0727708,-59.8877935},
{74.4729124,159.7412304,-60.3619171},
{76.3341739,163.7015297,-60.5040738},
{84.6294457,172.8942772,-61.5674866},
{85.4304920,175.2460537,-61.1360038},
{85.8984463,177.4170150,-60.6373744}
};
$label = ("Base");
setKeyframe -attribute "rotateZ" -t 3.8900000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 3.9000000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 3.9100000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 3.9200000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 3.9300000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 3.9400000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 3.9500000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 3.9600000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 3.9700000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 3.9800000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 3.9900000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 4.0000000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 4.0100000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 4.0200000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 4.0300000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 4.0400000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 4.0500000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 4.0600000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 4.0700000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 4.0800000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 4.0900000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 4.1000000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 4.1100000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 4.1200000sec -value 3.1415927 $label;
setKeyframe -attribute "rotateZ" -t 4.1300000sec -value -1.3595267 $label;
setKeyframe -attribute "rotateZ" -t 4.1400000sec -value -1.2444048 $label;
setKeyframe -attribute "rotateZ" -t 4.1500000sec -value -1.2535778 $label;
setKeyframe -attribute "rotateZ" -t 4.1600000sec -value -1.2438074 $label;
setKeyframe -attribute "rotateZ" -t 4.1700000sec -value -1.2430201 $label;
setKeyframe -attribute "rotateZ" -t 4.1800000sec -value -1.2395052 $label;
setKeyframe -attribute "rotateZ" -t 4.1900000sec -value -1.2361660 $label;
setKeyframe -attribute "rotateZ" -t 4.2000000sec -value -1.2373682 $label;
setKeyframe -attribute "rotateZ" -t 4.2100000sec -value -1.2378672 $label;
setKeyframe -attribute "rotateZ" -t 4.2200000sec -value -1.2383643 $label;
setKeyframe -attribute "rotateZ" -t 4.2300000sec -value -1.2393679 $label;
setKeyframe -attribute "rotateZ" -t 4.2400000sec -value -1.2376672 $label;
setKeyframe -attribute "rotateZ" -t 4.2500000sec -value -1.2343571 $label;
setKeyframe -attribute "rotateZ" -t 4.2600000sec -value -1.2294080 $label;
setKeyframe -attribute "rotateZ" -t 4.2700000sec -value -1.2208283 $label;
setKeyframe -attribute "rotateZ" -t 4.2800000sec -value -1.2106405 $label;
setKeyframe -attribute "rotateZ" -t 4.2900000sec -value -1.1969687 $label;
setKeyframe -attribute "rotateZ" -t 4.3000000sec -value -1.1802993 $label;
setKeyframe -attribute "rotateZ" -t 4.3100000sec -value -1.1592163 $label;
setKeyframe -attribute "rotateZ" -t 4.3200000sec -value -1.2642958 $label;
setKeyframe -attribute "rotateZ" -t 4.3300000sec -value -1.2441219 $label;
setKeyframe -attribute "rotateZ" -t 4.3400000sec -value -1.2222074 $label;
setKeyframe -attribute "rotateZ" -t 4.3500000sec -value -1.2051860 $label;
setKeyframe -attribute "rotateZ" -t 4.3600000sec -value -1.1902662 $label;
setKeyframe -attribute "rotateZ" -t 4.3700000sec -value -1.1794649 $label;
setKeyframe -attribute "rotateZ" -t 4.3800000sec -value -1.1735582 $label;
setKeyframe -attribute "rotateZ" -t 4.3900000sec -value -1.1671597 $label;
setKeyframe -attribute "rotateZ" -t 4.4000000sec -value -1.1564254 $label;
setKeyframe -attribute "rotateZ" -t 4.4100000sec -value -1.0257377 $label;
setKeyframe -attribute "rotateZ" -t 4.4200000sec -value -1.0097617 $label;
setKeyframe -attribute "rotateZ" -t 4.4300000sec -value -0.9994368 $label;
setKeyframe -attribute "rotateZ" -t 4.4400000sec -value -1.0129980 $label;
setKeyframe -attribute "rotateZ" -t 4.4500000sec -value -1.0210893 $label;
setKeyframe -attribute "rotateZ" -t 4.4600000sec -value -1.0241221 $label;
setKeyframe -attribute "rotateZ" -t 4.4700000sec -value -1.0331557 $label;
setKeyframe -attribute "rotateZ" -t 4.4800000sec -value -1.0452392 $label;
setKeyframe -attribute "rotateZ" -t 4.4900000sec -value -1.0535142 $label;
setKeyframe -attribute "rotateZ" -t 4.5000000sec -value -1.0559953 $label;
setKeyframe -attribute "rotateZ" -t 4.5100000sec -value -1.0745554 $label;
setKeyframe -attribute "rotateZ" -t 4.5200000sec -value -1.0670246 $label;
setKeyframe -attribute "rotateZ" -t 4.5300000sec -value -1.0583218 $label;
setKeyframe -attribute "rotateX" -t 3.8900000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 3.9000000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 3.9100000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 3.9200000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 3.9300000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 3.9400000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 3.9500000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 3.9600000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 3.9700000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 3.9800000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 3.9900000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 4.0000000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 4.0100000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 4.0200000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 4.0300000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 4.0400000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 4.0500000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 4.0600000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 4.0700000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 4.0800000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 4.0900000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 4.1000000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 4.1100000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 4.1200000sec -value 1.5707963 $label;
setKeyframe -attribute "rotateX" -t 4.1300000sec -value 1.4377951 $label;
setKeyframe -attribute "rotateX" -t 4.1400000sec -value 1.5747519 $label;
setKeyframe -attribute "rotateX" -t 4.1500000sec -value 1.5614441 $label;
setKeyframe -attribute "rotateX" -t 4.1600000sec -value 1.5402572 $label;
setKeyframe -attribute "rotateX" -t 4.1700000sec -value 1.5131731 $label;
setKeyframe -attribute "rotateX" -t 4.1800000sec -value 1.4714216 $label;
setKeyframe -attribute "rotateX" -t 4.1900000sec -value 1.4142021 $label;
setKeyframe -attribute "rotateX" -t 4.2000000sec -value 1.3741917 $label;
setKeyframe -attribute "rotateX" -t 4.2100000sec -value 1.3521820 $label;
setKeyframe -attribute "rotateX" -t 4.2200000sec -value 1.3276935 $label;
setKeyframe -attribute "rotateX" -t 4.2300000sec -value 1.3075683 $label;
setKeyframe -attribute "rotateX" -t 4.2400000sec -value 1.2879427 $label;
setKeyframe -attribute "rotateX" -t 4.2500000sec -value 1.2727147 $label;
setKeyframe -attribute "rotateX" -t 4.2600000sec -value 1.2592391 $label;
setKeyframe -attribute "rotateX" -t 4.2700000sec -value 1.2478787 $label;
setKeyframe -attribute "rotateX" -t 4.2800000sec -value 1.2341269 $label;
setKeyframe -attribute "rotateX" -t 4.2900000sec -value 1.2207500 $label;
setKeyframe -attribute "rotateX" -t 4.3000000sec -value 1.2049216 $label;
setKeyframe -attribute "rotateX" -t 4.3100000sec -value 1.1887778 $label;
setKeyframe -attribute "rotateX" -t 4.3200000sec -value 1.3230634 $label;
setKeyframe -attribute "rotateX" -t 4.3300000sec -value 1.3223212 $label;
setKeyframe -attribute "rotateX" -t 4.3400000sec -value 1.3194515 $label;
setKeyframe -attribute "rotateX" -t 4.3500000sec -value 1.3201398 $label;
setKeyframe -attribute "rotateX" -t 4.3600000sec -value 1.3224672 $label;
setKeyframe -attribute "rotateX" -t 4.3700000sec -value 1.3316315 $label;
setKeyframe -attribute "rotateX" -t 4.3800000sec -value 1.3496748 $label;
setKeyframe -attribute "rotateX" -t 4.3900000sec -value 1.3671708 $label;
setKeyframe -attribute "rotateX" -t 4.4000000sec -value 1.3773531 $label;
setKeyframe -attribute "rotateX" -t 4.4100000sec -value 1.1747949 $label;
setKeyframe -attribute "rotateX" -t 4.4200000sec -value 1.1797792 $label;
setKeyframe -attribute "rotateX" -t 4.4300000sec -value 1.1998533 $label;
setKeyframe -attribute "rotateX" -t 4.4400000sec -value 1.2029672 $label;
setKeyframe -attribute "rotateX" -t 4.4500000sec -value 1.2252449 $label;
setKeyframe -attribute "rotateX" -t 4.4600000sec -value 1.2421635 $label;
setKeyframe -attribute "rotateX" -t 4.4700000sec -value 1.2675695 $label;
setKeyframe -attribute "rotateX" -t 4.4800000sec -value 1.2893828 $label;
setKeyframe -attribute "rotateX" -t 4.4900000sec -value 1.2997975 $label;
setKeyframe -attribute "rotateX" -t 4.5000000sec -value 1.3322827 $label;
setKeyframe -attribute "rotateX" -t 4.5100000sec -value 1.4770625 $label;
setKeyframe -attribute "rotateX" -t 4.5200000sec -value 1.4910434 $label;
setKeyframe -attribute "rotateX" -t 4.5300000sec -value 1.4992107 $label;
setKeyframe -attribute "rotateY" -t 3.8900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 3.9000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 3.9100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 3.9200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 3.9300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 3.9400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 3.9500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 3.9600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 3.9700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 3.9800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 3.9900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 4.0000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 4.0100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 4.0200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 4.0300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 4.0400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 4.0500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 4.0600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 4.0700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 4.0800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 4.0900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 4.1000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 4.1100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 4.1200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateY" -t 4.1300000sec -value 2.3795607 $label;
setKeyframe -attribute "rotateY" -t 4.1400000sec -value 2.3914728 $label;
setKeyframe -attribute "rotateY" -t 4.1500000sec -value 2.4112311 $label;
setKeyframe -attribute "rotateY" -t 4.1600000sec -value 2.4135297 $label;
setKeyframe -attribute "rotateY" -t 4.1700000sec -value 2.4322666 $label;
setKeyframe -attribute "rotateY" -t 4.1800000sec -value 2.4493998 $label;
setKeyframe -attribute "rotateY" -t 4.1900000sec -value 2.4691499 $label;
setKeyframe -attribute "rotateY" -t 4.2000000sec -value 2.4851971 $label;
setKeyframe -attribute "rotateY" -t 4.2100000sec -value 2.4998564 $label;
setKeyframe -attribute "rotateY" -t 4.2200000sec -value 2.5127239 $label;
setKeyframe -attribute "rotateY" -t 4.2300000sec -value 2.5237609 $label;
setKeyframe -attribute "rotateY" -t 4.2400000sec -value 2.5333747 $label;
setKeyframe -attribute "rotateY" -t 4.2500000sec -value 2.5424160 $label;
setKeyframe -attribute "rotateY" -t 4.2600000sec -value 2.5496026 $label;
setKeyframe -attribute "rotateY" -t 4.2700000sec -value 2.5563429 $label;
setKeyframe -attribute "rotateY" -t 4.2800000sec -value 2.5589997 $label;
setKeyframe -attribute "rotateY" -t 4.2900000sec -value 2.5592425 $label;
setKeyframe -attribute "rotateY" -t 4.3000000sec -value 2.5532099 $label;
setKeyframe -attribute "rotateY" -t 4.3100000sec -value 2.5441039 $label;
setKeyframe -attribute "rotateY" -t 4.3200000sec -value 2.7908905 $label;
setKeyframe -attribute "rotateY" -t 4.3300000sec -value 2.7844049 $label;
setKeyframe -attribute "rotateY" -t 4.3400000sec -value 2.7735251 $label;
setKeyframe -attribute "rotateY" -t 4.3500000sec -value 2.7772541 $label;
setKeyframe -attribute "rotateY" -t 4.3600000sec -value 2.7862572 $label;
setKeyframe -attribute "rotateY" -t 4.3700000sec -value 2.8052947 $label;
setKeyframe -attribute "rotateY" -t 4.3800000sec -value 2.8457532 $label;
setKeyframe -attribute "rotateY" -t 4.3900000sec -value 2.8851234 $label;
setKeyframe -attribute "rotateY" -t 4.4000000sec -value 2.9073417 $label;
setKeyframe -attribute "rotateY" -t 4.4100000sec -value 2.6094661 $label;
setKeyframe -attribute "rotateY" -t 4.4200000sec -value 2.6144518 $label;
setKeyframe -attribute "rotateY" -t 4.4300000sec -value 2.6322456 $label;
setKeyframe -attribute "rotateY" -t 4.4400000sec -value 2.6548466 $label;
setKeyframe -attribute "rotateY" -t 4.4500000sec -value 2.6810079 $label;
setKeyframe -attribute "rotateY" -t 4.4600000sec -value 2.6966557 $label;
setKeyframe -attribute "rotateY" -t 4.4700000sec -value 2.7263332 $label;
setKeyframe -attribute "rotateY" -t 4.4800000sec -value 2.7588903 $label;
setKeyframe -attribute "rotateY" -t 4.4900000sec -value 2.7880104 $label;
setKeyframe -attribute "rotateY" -t 4.5000000sec -value 2.8571307 $label;
setKeyframe -attribute "rotateY" -t 4.5100000sec -value 3.0175744 $label;
setKeyframe -attribute "rotateY" -t 4.5200000sec -value 3.0586206 $label;
setKeyframe -attribute "rotateY" -t 4.5300000sec -value 3.0965111 $label;
outThetasWam = {
{0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,-0.3348268,-0.3501668,-0.3496554,-0.3306798,-0.3027687,-0.2618298,-0.2021563,-0.1721698,-0.1613423,-0.1546674,-0.1524126,-0.1518755,-0.1520975,-0.1517417,-0.1501624,-0.1473774,-0.1427481,-0.1361668,-0.1293069,-0.1691841,-0.1683740,-0.1677050,-0.1673117,-0.1678693,-0.1701992,-0.1744409,-0.1794917,-0.1839404,-0.1040770,-0.1060480,-0.1125307,-0.1049124,-0.1049287,-0.1035341,-0.1051923,-0.1063176,-0.1044445,-0.0957350,-0.1379966,-0.1279953,-0.1161138},
{0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,-0.3715755,-0.3243956,-0.3115699,-0.3019148,-0.2922040,-0.2854136,-0.2813875,-0.2769778,-0.2711663,-0.2669191,-0.2629382,-0.2598788,-0.2558749,-0.2517768,-0.2463173,-0.2396577,-0.2291794,-0.2136944,-0.1923556,-0.4514636,-0.4350982,-0.4174004,-0.4100969,-0.4099381,-0.4263948,-0.4631911,-0.5028800,-0.5298539,-0.2116150,-0.2213455,-0.2432755,-0.1987779,-0.1702114,-0.1356150,-0.1184967,-0.1082079,-0.0839246,-0.0777605,-0.1702372,-0.1496692,-0.1291518},
{0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,0.0000000,-0.3156549,-0.5184981,-0.4852738,-0.4827579,-0.4716902,-0.4619744,-0.4536989,-0.4294667,-0.4019803,-0.3701867,-0.3385481,-0.3071996,-0.2801080,-0.2571521,-0.2377727,-0.2209795,-0.2052075,-0.1895165,-0.1756365,-0.2081354,-0.2020492,-0.1972756,-0.1943821,-0.1944415,-0.1998090,-0.2098403,-0.2214690,-0.2314349,-0.1477799,-0.1533002,-0.1668377,-0.1424842,-0.1363705,-0.1291771,-0.1269492,-0.1251675,-0.1095725,-0.1021778,-0.1575208,-0.1408481,-0.1215115},
{1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.0000000,1.7451337,1.7265509,1.7057470,1.6838717,1.6600020,1.6354656,1.6100159,1.5826973,1.5555705,1.5272366,1.4986676,1.4685742,1.4377811,1.4072854,1.3764403,1.3469660,1.3173198,1.2900369,1.2633174,1.2386496,1.2158715,1.1928700,1.1730137,1.1527912,1.1351065,1.1193056,1.1035641,1.0883052,1.0729376,1.0607175,1.0488808,1.0406436,1.0320025,1.0246506,1.0172772,1.0102086,1.0008341,0.9920410,0.9843669,0.9793428,0.9753488},
{},
{},
{}
};
$label = ("Shoulder_Yaw_J1");
setKeyframe -attribute "rotateZ" -t 3.8900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1300000sec -value -0.3348268 $label;
setKeyframe -attribute "rotateZ" -t 4.1400000sec -value -0.3501668 $label;
setKeyframe -attribute "rotateZ" -t 4.1500000sec -value -0.3496554 $label;
setKeyframe -attribute "rotateZ" -t 4.1600000sec -value -0.3306798 $label;
setKeyframe -attribute "rotateZ" -t 4.1700000sec -value -0.3027687 $label;
setKeyframe -attribute "rotateZ" -t 4.1800000sec -value -0.2618298 $label;
setKeyframe -attribute "rotateZ" -t 4.1900000sec -value -0.2021563 $label;
setKeyframe -attribute "rotateZ" -t 4.2000000sec -value -0.1721698 $label;
setKeyframe -attribute "rotateZ" -t 4.2100000sec -value -0.1613423 $label;
setKeyframe -attribute "rotateZ" -t 4.2200000sec -value -0.1546674 $label;
setKeyframe -attribute "rotateZ" -t 4.2300000sec -value -0.1524126 $label;
setKeyframe -attribute "rotateZ" -t 4.2400000sec -value -0.1518755 $label;
setKeyframe -attribute "rotateZ" -t 4.2500000sec -value -0.1520975 $label;
setKeyframe -attribute "rotateZ" -t 4.2600000sec -value -0.1517417 $label;
setKeyframe -attribute "rotateZ" -t 4.2700000sec -value -0.1501624 $label;
setKeyframe -attribute "rotateZ" -t 4.2800000sec -value -0.1473774 $label;
setKeyframe -attribute "rotateZ" -t 4.2900000sec -value -0.1427481 $label;
setKeyframe -attribute "rotateZ" -t 4.3000000sec -value -0.1361668 $label;
setKeyframe -attribute "rotateZ" -t 4.3100000sec -value -0.1293069 $label;
setKeyframe -attribute "rotateZ" -t 4.3200000sec -value -0.1691841 $label;
setKeyframe -attribute "rotateZ" -t 4.3300000sec -value -0.1683740 $label;
setKeyframe -attribute "rotateZ" -t 4.3400000sec -value -0.1677050 $label;
setKeyframe -attribute "rotateZ" -t 4.3500000sec -value -0.1673117 $label;
setKeyframe -attribute "rotateZ" -t 4.3600000sec -value -0.1678693 $label;
setKeyframe -attribute "rotateZ" -t 4.3700000sec -value -0.1701992 $label;
setKeyframe -attribute "rotateZ" -t 4.3800000sec -value -0.1744409 $label;
setKeyframe -attribute "rotateZ" -t 4.3900000sec -value -0.1794917 $label;
setKeyframe -attribute "rotateZ" -t 4.4000000sec -value -0.1839404 $label;
setKeyframe -attribute "rotateZ" -t 4.4100000sec -value -0.1040770 $label;
setKeyframe -attribute "rotateZ" -t 4.4200000sec -value -0.1060480 $label;
setKeyframe -attribute "rotateZ" -t 4.4300000sec -value -0.1125307 $label;
setKeyframe -attribute "rotateZ" -t 4.4400000sec -value -0.1049124 $label;
setKeyframe -attribute "rotateZ" -t 4.4500000sec -value -0.1049287 $label;
setKeyframe -attribute "rotateZ" -t 4.4600000sec -value -0.1035341 $label;
setKeyframe -attribute "rotateZ" -t 4.4700000sec -value -0.1051923 $label;
setKeyframe -attribute "rotateZ" -t 4.4800000sec -value -0.1063176 $label;
setKeyframe -attribute "rotateZ" -t 4.4900000sec -value -0.1044445 $label;
setKeyframe -attribute "rotateZ" -t 4.5000000sec -value -0.0957350 $label;
setKeyframe -attribute "rotateZ" -t 4.5100000sec -value -0.1379966 $label;
setKeyframe -attribute "rotateZ" -t 4.5200000sec -value -0.1279953 $label;
setKeyframe -attribute "rotateZ" -t 4.5300000sec -value -0.1161138 $label;
$label = ("Shoulder_Pitch_J2");
setKeyframe -attribute "rotateZ" -t 3.8900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1300000sec -value -0.3715755 $label;
setKeyframe -attribute "rotateZ" -t 4.1400000sec -value -0.3243956 $label;
setKeyframe -attribute "rotateZ" -t 4.1500000sec -value -0.3115699 $label;
setKeyframe -attribute "rotateZ" -t 4.1600000sec -value -0.3019148 $label;
setKeyframe -attribute "rotateZ" -t 4.1700000sec -value -0.2922040 $label;
setKeyframe -attribute "rotateZ" -t 4.1800000sec -value -0.2854136 $label;
setKeyframe -attribute "rotateZ" -t 4.1900000sec -value -0.2813875 $label;
setKeyframe -attribute "rotateZ" -t 4.2000000sec -value -0.2769778 $label;
setKeyframe -attribute "rotateZ" -t 4.2100000sec -value -0.2711663 $label;
setKeyframe -attribute "rotateZ" -t 4.2200000sec -value -0.2669191 $label;
setKeyframe -attribute "rotateZ" -t 4.2300000sec -value -0.2629382 $label;
setKeyframe -attribute "rotateZ" -t 4.2400000sec -value -0.2598788 $label;
setKeyframe -attribute "rotateZ" -t 4.2500000sec -value -0.2558749 $label;
setKeyframe -attribute "rotateZ" -t 4.2600000sec -value -0.2517768 $label;
setKeyframe -attribute "rotateZ" -t 4.2700000sec -value -0.2463173 $label;
setKeyframe -attribute "rotateZ" -t 4.2800000sec -value -0.2396577 $label;
setKeyframe -attribute "rotateZ" -t 4.2900000sec -value -0.2291794 $label;
setKeyframe -attribute "rotateZ" -t 4.3000000sec -value -0.2136944 $label;
setKeyframe -attribute "rotateZ" -t 4.3100000sec -value -0.1923556 $label;
setKeyframe -attribute "rotateZ" -t 4.3200000sec -value -0.4514636 $label;
setKeyframe -attribute "rotateZ" -t 4.3300000sec -value -0.4350982 $label;
setKeyframe -attribute "rotateZ" -t 4.3400000sec -value -0.4174004 $label;
setKeyframe -attribute "rotateZ" -t 4.3500000sec -value -0.4100969 $label;
setKeyframe -attribute "rotateZ" -t 4.3600000sec -value -0.4099381 $label;
setKeyframe -attribute "rotateZ" -t 4.3700000sec -value -0.4263948 $label;
setKeyframe -attribute "rotateZ" -t 4.3800000sec -value -0.4631911 $label;
setKeyframe -attribute "rotateZ" -t 4.3900000sec -value -0.5028800 $label;
setKeyframe -attribute "rotateZ" -t 4.4000000sec -value -0.5298539 $label;
setKeyframe -attribute "rotateZ" -t 4.4100000sec -value -0.2116150 $label;
setKeyframe -attribute "rotateZ" -t 4.4200000sec -value -0.2213455 $label;
setKeyframe -attribute "rotateZ" -t 4.4300000sec -value -0.2432755 $label;
setKeyframe -attribute "rotateZ" -t 4.4400000sec -value -0.1987779 $label;
setKeyframe -attribute "rotateZ" -t 4.4500000sec -value -0.1702114 $label;
setKeyframe -attribute "rotateZ" -t 4.4600000sec -value -0.1356150 $label;
setKeyframe -attribute "rotateZ" -t 4.4700000sec -value -0.1184967 $label;
setKeyframe -attribute "rotateZ" -t 4.4800000sec -value -0.1082079 $label;
setKeyframe -attribute "rotateZ" -t 4.4900000sec -value -0.0839246 $label;
setKeyframe -attribute "rotateZ" -t 4.5000000sec -value -0.0777605 $label;
setKeyframe -attribute "rotateZ" -t 4.5100000sec -value -0.1702372 $label;
setKeyframe -attribute "rotateZ" -t 4.5200000sec -value -0.1496692 $label;
setKeyframe -attribute "rotateZ" -t 4.5300000sec -value -0.1291518 $label;
$label = ("Shoulder_UpperArm_J3");
setKeyframe -attribute "rotateZ" -t 3.8900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1300000sec -value -0.3156549 $label;
setKeyframe -attribute "rotateZ" -t 4.1400000sec -value -0.5184981 $label;
setKeyframe -attribute "rotateZ" -t 4.1500000sec -value -0.4852738 $label;
setKeyframe -attribute "rotateZ" -t 4.1600000sec -value -0.4827579 $label;
setKeyframe -attribute "rotateZ" -t 4.1700000sec -value -0.4716902 $label;
setKeyframe -attribute "rotateZ" -t 4.1800000sec -value -0.4619744 $label;
setKeyframe -attribute "rotateZ" -t 4.1900000sec -value -0.4536989 $label;
setKeyframe -attribute "rotateZ" -t 4.2000000sec -value -0.4294667 $label;
setKeyframe -attribute "rotateZ" -t 4.2100000sec -value -0.4019803 $label;
setKeyframe -attribute "rotateZ" -t 4.2200000sec -value -0.3701867 $label;
setKeyframe -attribute "rotateZ" -t 4.2300000sec -value -0.3385481 $label;
setKeyframe -attribute "rotateZ" -t 4.2400000sec -value -0.3071996 $label;
setKeyframe -attribute "rotateZ" -t 4.2500000sec -value -0.2801080 $label;
setKeyframe -attribute "rotateZ" -t 4.2600000sec -value -0.2571521 $label;
setKeyframe -attribute "rotateZ" -t 4.2700000sec -value -0.2377727 $label;
setKeyframe -attribute "rotateZ" -t 4.2800000sec -value -0.2209795 $label;
setKeyframe -attribute "rotateZ" -t 4.2900000sec -value -0.2052075 $label;
setKeyframe -attribute "rotateZ" -t 4.3000000sec -value -0.1895165 $label;
setKeyframe -attribute "rotateZ" -t 4.3100000sec -value -0.1756365 $label;
setKeyframe -attribute "rotateZ" -t 4.3200000sec -value -0.2081354 $label;
setKeyframe -attribute "rotateZ" -t 4.3300000sec -value -0.2020492 $label;
setKeyframe -attribute "rotateZ" -t 4.3400000sec -value -0.1972756 $label;
setKeyframe -attribute "rotateZ" -t 4.3500000sec -value -0.1943821 $label;
setKeyframe -attribute "rotateZ" -t 4.3600000sec -value -0.1944415 $label;
setKeyframe -attribute "rotateZ" -t 4.3700000sec -value -0.1998090 $label;
setKeyframe -attribute "rotateZ" -t 4.3800000sec -value -0.2098403 $label;
setKeyframe -attribute "rotateZ" -t 4.3900000sec -value -0.2214690 $label;
setKeyframe -attribute "rotateZ" -t 4.4000000sec -value -0.2314349 $label;
setKeyframe -attribute "rotateZ" -t 4.4100000sec -value -0.1477799 $label;
setKeyframe -attribute "rotateZ" -t 4.4200000sec -value -0.1533002 $label;
setKeyframe -attribute "rotateZ" -t 4.4300000sec -value -0.1668377 $label;
setKeyframe -attribute "rotateZ" -t 4.4400000sec -value -0.1424842 $label;
setKeyframe -attribute "rotateZ" -t 4.4500000sec -value -0.1363705 $label;
setKeyframe -attribute "rotateZ" -t 4.4600000sec -value -0.1291771 $label;
setKeyframe -attribute "rotateZ" -t 4.4700000sec -value -0.1269492 $label;
setKeyframe -attribute "rotateZ" -t 4.4800000sec -value -0.1251675 $label;
setKeyframe -attribute "rotateZ" -t 4.4900000sec -value -0.1095725 $label;
setKeyframe -attribute "rotateZ" -t 4.5000000sec -value -0.1021778 $label;
setKeyframe -attribute "rotateZ" -t 4.5100000sec -value -0.1575208 $label;
setKeyframe -attribute "rotateZ" -t 4.5200000sec -value -0.1408481 $label;
setKeyframe -attribute "rotateZ" -t 4.5300000sec -value -0.1215115 $label;
$label = ("Elbow_ForeArm_J4");
setKeyframe -attribute "rotateZ" -t 3.8900000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9000000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9100000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9200000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9300000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9400000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9500000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9600000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9700000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9800000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9900000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0000000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0100000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0200000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0300000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0400000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0500000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0600000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0700000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0800000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0900000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1000000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1100000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1200000sec -value 1.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1300000sec -value 1.7451337 $label;
setKeyframe -attribute "rotateZ" -t 4.1400000sec -value 1.7265509 $label;
setKeyframe -attribute "rotateZ" -t 4.1500000sec -value 1.7057470 $label;
setKeyframe -attribute "rotateZ" -t 4.1600000sec -value 1.6838717 $label;
setKeyframe -attribute "rotateZ" -t 4.1700000sec -value 1.6600020 $label;
setKeyframe -attribute "rotateZ" -t 4.1800000sec -value 1.6354656 $label;
setKeyframe -attribute "rotateZ" -t 4.1900000sec -value 1.6100159 $label;
setKeyframe -attribute "rotateZ" -t 4.2000000sec -value 1.5826973 $label;
setKeyframe -attribute "rotateZ" -t 4.2100000sec -value 1.5555705 $label;
setKeyframe -attribute "rotateZ" -t 4.2200000sec -value 1.5272366 $label;
setKeyframe -attribute "rotateZ" -t 4.2300000sec -value 1.4986676 $label;
setKeyframe -attribute "rotateZ" -t 4.2400000sec -value 1.4685742 $label;
setKeyframe -attribute "rotateZ" -t 4.2500000sec -value 1.4377811 $label;
setKeyframe -attribute "rotateZ" -t 4.2600000sec -value 1.4072854 $label;
setKeyframe -attribute "rotateZ" -t 4.2700000sec -value 1.3764403 $label;
setKeyframe -attribute "rotateZ" -t 4.2800000sec -value 1.3469660 $label;
setKeyframe -attribute "rotateZ" -t 4.2900000sec -value 1.3173198 $label;
setKeyframe -attribute "rotateZ" -t 4.3000000sec -value 1.2900369 $label;
setKeyframe -attribute "rotateZ" -t 4.3100000sec -value 1.2633174 $label;
setKeyframe -attribute "rotateZ" -t 4.3200000sec -value 1.2386496 $label;
setKeyframe -attribute "rotateZ" -t 4.3300000sec -value 1.2158715 $label;
setKeyframe -attribute "rotateZ" -t 4.3400000sec -value 1.1928700 $label;
setKeyframe -attribute "rotateZ" -t 4.3500000sec -value 1.1730137 $label;
setKeyframe -attribute "rotateZ" -t 4.3600000sec -value 1.1527912 $label;
setKeyframe -attribute "rotateZ" -t 4.3700000sec -value 1.1351065 $label;
setKeyframe -attribute "rotateZ" -t 4.3800000sec -value 1.1193056 $label;
setKeyframe -attribute "rotateZ" -t 4.3900000sec -value 1.1035641 $label;
setKeyframe -attribute "rotateZ" -t 4.4000000sec -value 1.0883052 $label;
setKeyframe -attribute "rotateZ" -t 4.4100000sec -value 1.0729376 $label;
setKeyframe -attribute "rotateZ" -t 4.4200000sec -value 1.0607175 $label;
setKeyframe -attribute "rotateZ" -t 4.4300000sec -value 1.0488808 $label;
setKeyframe -attribute "rotateZ" -t 4.4400000sec -value 1.0406436 $label;
setKeyframe -attribute "rotateZ" -t 4.4500000sec -value 1.0320025 $label;
setKeyframe -attribute "rotateZ" -t 4.4600000sec -value 1.0246506 $label;
setKeyframe -attribute "rotateZ" -t 4.4700000sec -value 1.0172772 $label;
setKeyframe -attribute "rotateZ" -t 4.4800000sec -value 1.0102086 $label;
setKeyframe -attribute "rotateZ" -t 4.4900000sec -value 1.0008341 $label;
setKeyframe -attribute "rotateZ" -t 4.5000000sec -value 0.9920410 $label;
setKeyframe -attribute "rotateZ" -t 4.5100000sec -value 0.9843669 $label;
setKeyframe -attribute "rotateZ" -t 4.5200000sec -value 0.9793428 $label;
setKeyframe -attribute "rotateZ" -t 4.5300000sec -value 0.9753488 $label;
$label = ("Wrist_Yaw_J5");
setKeyframe -attribute "rotateZ" -t 3.8900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.5000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.5100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.5200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.5300000sec -value 0.0000000 $label;
$label = ("Wrist_Pitch_J6");
setKeyframe -attribute "rotateZ" -t 3.8900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.5000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.5100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.5200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.5300000sec -value 0.0000000 $label;
$label = ("Wrist_Palm_J7");
setKeyframe -attribute "rotateZ" -t 3.8900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 3.9900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.0900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.1900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.2900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.3900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4300000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4400000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4500000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4600000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4700000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4800000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.4900000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.5000000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.5100000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.5200000sec -value 0.0000000 $label;
setKeyframe -attribute "rotateZ" -t 4.5300000sec -value 0.0000000 $label;
